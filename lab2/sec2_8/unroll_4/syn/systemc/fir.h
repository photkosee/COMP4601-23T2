// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fir_HH_
#define _fir_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fir_shift_reg.h"
#include "fir_c1.h"

namespace ap_rtl {

struct fir : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > y;
    sc_out< sc_logic > y_ap_vld;
    sc_in< sc_lv<32> > x;


    // Module declarations
    fir(sc_module_name name);
    SC_HAS_PROCESS(fir);

    ~fir();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    fir_shift_reg* shift_reg_U;
    fir_c1* c1_U;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > shift_reg_address0;
    sc_signal< sc_logic > shift_reg_ce0;
    sc_signal< sc_logic > shift_reg_we0;
    sc_signal< sc_lv<32> > shift_reg_d0;
    sc_signal< sc_lv<32> > shift_reg_q0;
    sc_signal< sc_lv<4> > shift_reg_address1;
    sc_signal< sc_logic > shift_reg_ce1;
    sc_signal< sc_logic > shift_reg_we1;
    sc_signal< sc_lv<32> > shift_reg_d1;
    sc_signal< sc_lv<32> > shift_reg_q1;
    sc_signal< sc_lv<4> > c1_address0;
    sc_signal< sc_logic > c1_ce0;
    sc_signal< sc_lv<10> > c1_q0;
    sc_signal< sc_lv<32> > i_0_0_cast_fu_179_p1;
    sc_signal< sc_lv<32> > i_0_0_cast_reg_322;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln17_fu_183_p2;
    sc_signal< sc_lv<1> > icmp_ln17_reg_327;
    sc_signal< sc_lv<4> > shift_reg_addr_reg_331;
    sc_signal< sc_lv<1> > icmp_ln17_1_fu_200_p2;
    sc_signal< sc_lv<1> > icmp_ln17_1_reg_337;
    sc_signal< sc_lv<4> > shift_reg_addr_4_reg_341;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln17_2_fu_225_p2;
    sc_signal< sc_lv<1> > icmp_ln17_2_reg_346;
    sc_signal< sc_lv<4> > shift_reg_addr_5_reg_350;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > add_ln18_3_fu_262_p2;
    sc_signal< sc_lv<5> > add_ln18_3_reg_359;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln17_3_fu_256_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > tmp_fu_281_p3;
    sc_signal< sc_lv<5> > i_fu_295_p2;
    sc_signal< sc_lv<5> > i_reg_382;
    sc_signal< sc_lv<32> > acc_fu_311_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<5> > i_0_0_reg_143;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > acc_0_reg_155;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > i_1_reg_168;
    sc_signal< sc_lv<64> > zext_ln18_fu_195_p1;
    sc_signal< sc_lv<64> > zext_ln18_1_fu_206_p1;
    sc_signal< sc_lv<64> > zext_ln18_2_fu_220_p1;
    sc_signal< sc_lv<64> > zext_ln18_3_fu_241_p1;
    sc_signal< sc_lv<64> > zext_ln18_4_fu_272_p1;
    sc_signal< sc_lv<64> > zext_ln25_fu_289_p1;
    sc_signal< sc_lv<5> > add_ln18_fu_189_p2;
    sc_signal< sc_lv<5> > add_ln18_1_fu_210_p2;
    sc_signal< sc_lv<32> > sext_ln18_fu_216_p1;
    sc_signal< sc_lv<5> > add_ln18_2_fu_231_p2;
    sc_signal< sc_lv<32> > sext_ln18_1_fu_237_p1;
    sc_signal< sc_lv<4> > trunc_ln18_fu_246_p1;
    sc_signal< sc_lv<4> > add_ln18_4_fu_250_p2;
    sc_signal< sc_lv<32> > sext_ln18_2_fu_268_p1;
    sc_signal< sc_lv<32> > sext_ln24_fu_277_p1;
    sc_signal< sc_lv<32> > mul_ln25_fu_305_p0;
    sc_signal< sc_lv<10> > mul_ln25_fu_305_p1;
    sc_signal< sc_lv<32> > mul_ln25_fu_305_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1D;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<5> ap_const_lv5_1C;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_fu_311_p2();
    void thread_add_ln18_1_fu_210_p2();
    void thread_add_ln18_2_fu_231_p2();
    void thread_add_ln18_3_fu_262_p2();
    void thread_add_ln18_4_fu_250_p2();
    void thread_add_ln18_fu_189_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c1_address0();
    void thread_c1_ce0();
    void thread_i_0_0_cast_fu_179_p1();
    void thread_i_fu_295_p2();
    void thread_icmp_ln17_1_fu_200_p2();
    void thread_icmp_ln17_2_fu_225_p2();
    void thread_icmp_ln17_3_fu_256_p2();
    void thread_icmp_ln17_fu_183_p2();
    void thread_mul_ln25_fu_305_p0();
    void thread_mul_ln25_fu_305_p1();
    void thread_mul_ln25_fu_305_p2();
    void thread_sext_ln18_1_fu_237_p1();
    void thread_sext_ln18_2_fu_268_p1();
    void thread_sext_ln18_fu_216_p1();
    void thread_sext_ln24_fu_277_p1();
    void thread_shift_reg_address0();
    void thread_shift_reg_address1();
    void thread_shift_reg_ce0();
    void thread_shift_reg_ce1();
    void thread_shift_reg_d0();
    void thread_shift_reg_d1();
    void thread_shift_reg_we0();
    void thread_shift_reg_we1();
    void thread_tmp_fu_281_p3();
    void thread_trunc_ln18_fu_246_p1();
    void thread_y();
    void thread_y_ap_vld();
    void thread_zext_ln18_1_fu_206_p1();
    void thread_zext_ln18_2_fu_220_p1();
    void thread_zext_ln18_3_fu_241_p1();
    void thread_zext_ln18_4_fu_272_p1();
    void thread_zext_ln18_fu_195_p1();
    void thread_zext_ln25_fu_289_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
