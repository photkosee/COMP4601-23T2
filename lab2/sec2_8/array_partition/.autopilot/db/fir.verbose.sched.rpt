

================================================================
== Vivado HLS Report for 'fir'
================================================================
* Date:           Mon Jun 12 06:07:03 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        sec2_8
* Solution:       array_partition
* Product family: zynquplus
* Target device:  xqzu5ev-ffrb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 6.435 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       23|       23| 0.230 us | 0.230 us |   23|   23|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- MAC     |       22|       22|         2|          -|          -|    11|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %y) nounwind, !map !7"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %x) nounwind, !map !13"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @fir_str) nounwind"   --->   Operation 6 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%x_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %x) nounwind" [fir11_sec2_8.cpp:8]   --->   Operation 7 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%shift_reg_9_load = load i32* @shift_reg_9, align 4" [fir11_sec2_8.cpp:18]   --->   Operation 8 'load' 'shift_reg_9_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%shift_reg_8_load = load i32* @shift_reg_8, align 16" [fir11_sec2_8.cpp:18]   --->   Operation 9 'load' 'shift_reg_8_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "store i32 %shift_reg_8_load, i32* @shift_reg_9, align 4" [fir11_sec2_8.cpp:18]   --->   Operation 10 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%shift_reg_7_load = load i32* @shift_reg_7, align 4" [fir11_sec2_8.cpp:18]   --->   Operation 11 'load' 'shift_reg_7_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "store i32 %shift_reg_7_load, i32* @shift_reg_8, align 16" [fir11_sec2_8.cpp:18]   --->   Operation 12 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%shift_reg_6_load = load i32* @shift_reg_6, align 8" [fir11_sec2_8.cpp:18]   --->   Operation 13 'load' 'shift_reg_6_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "store i32 %shift_reg_6_load, i32* @shift_reg_7, align 4" [fir11_sec2_8.cpp:18]   --->   Operation 14 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%shift_reg_5_load = load i32* @shift_reg_5, align 4" [fir11_sec2_8.cpp:18]   --->   Operation 15 'load' 'shift_reg_5_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "store i32 %shift_reg_5_load, i32* @shift_reg_6, align 8" [fir11_sec2_8.cpp:18]   --->   Operation 16 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%shift_reg_4_load = load i32* @shift_reg_4, align 16" [fir11_sec2_8.cpp:18]   --->   Operation 17 'load' 'shift_reg_4_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "store i32 %shift_reg_4_load, i32* @shift_reg_5, align 4" [fir11_sec2_8.cpp:18]   --->   Operation 18 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%shift_reg_3_load = load i32* @shift_reg_3, align 4" [fir11_sec2_8.cpp:18]   --->   Operation 19 'load' 'shift_reg_3_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "store i32 %shift_reg_3_load, i32* @shift_reg_4, align 16" [fir11_sec2_8.cpp:18]   --->   Operation 20 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%shift_reg_2_load = load i32* @shift_reg_2, align 8" [fir11_sec2_8.cpp:18]   --->   Operation 21 'load' 'shift_reg_2_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "store i32 %shift_reg_2_load, i32* @shift_reg_3, align 4" [fir11_sec2_8.cpp:18]   --->   Operation 22 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%shift_reg_1_load = load i32* @shift_reg_1, align 4" [fir11_sec2_8.cpp:18]   --->   Operation 23 'load' 'shift_reg_1_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "store i32 %shift_reg_1_load, i32* @shift_reg_2, align 8" [fir11_sec2_8.cpp:18]   --->   Operation 24 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%shift_reg_0_load = load i32* @shift_reg_0, align 16" [fir11_sec2_8.cpp:18]   --->   Operation 25 'load' 'shift_reg_0_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "store i32 %shift_reg_0_load, i32* @shift_reg_1, align 4" [fir11_sec2_8.cpp:18]   --->   Operation 26 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "store i32 %x_read, i32* @shift_reg_0, align 16" [fir11_sec2_8.cpp:20]   --->   Operation 27 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.75ns)   --->   "br label %1" [fir11_sec2_8.cpp:24]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 1.85>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%acc_0 = phi i32 [ 0, %0 ], [ %acc, %aesl_mux_load.11i32P.i4.exit ]"   --->   Operation 29 'phi' 'acc_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%i_1 = phi i5 [ 10, %0 ], [ %i, %aesl_mux_load.11i32P.i4.exit ]"   --->   Operation 30 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%sext_ln24 = sext i5 %i_1 to i32" [fir11_sec2_8.cpp:24]   --->   Operation 31 'sext' 'sext_ln24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %i_1, i32 4)" [fir11_sec2_8.cpp:24]   --->   Operation 32 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 11, i64 11, i64 11) nounwind"   --->   Operation 33 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %tmp, label %3, label %2" [fir11_sec2_8.cpp:24]   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str3) nounwind" [fir11_sec2_8.cpp:24]   --->   Operation 35 'specloopname' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln25 = zext i32 %sext_ln24 to i64" [fir11_sec2_8.cpp:25]   --->   Operation 36 'zext' 'zext_ln25' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln25 = trunc i5 %i_1 to i4" [fir11_sec2_8.cpp:25]   --->   Operation 37 'trunc' 'trunc_ln25' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (1.85ns)   --->   "switch i4 %trunc_ln25, label %case10.i [
    i4 0, label %aesl_mux_load.11i32P.i4.exit
    i4 1, label %case1.i
    i4 2, label %case2.i
    i4 3, label %case3.i
    i4 4, label %case4.i
    i4 5, label %case5.i
    i4 6, label %case6.i
    i4 7, label %case7.i
    i4 -8, label %case8.i
    i4 -7, label %case9.i
  ]" [aesl_mux_load.11i32P.i4:23->fir11_sec2_8.cpp:25]   --->   Operation 38 'switch' <Predicate = (!tmp)> <Delay = 1.85>
ST_2 : Operation 39 [1/1] (1.85ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit" [aesl_mux_load.11i32P.i4:22->fir11_sec2_8.cpp:25]   --->   Operation 39 'br' <Predicate = (!tmp & trunc_ln25 == 9)> <Delay = 1.85>
ST_2 : Operation 40 [1/1] (1.85ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit" [aesl_mux_load.11i32P.i4:22->fir11_sec2_8.cpp:25]   --->   Operation 40 'br' <Predicate = (!tmp & trunc_ln25 == 8)> <Delay = 1.85>
ST_2 : Operation 41 [1/1] (1.85ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit" [aesl_mux_load.11i32P.i4:22->fir11_sec2_8.cpp:25]   --->   Operation 41 'br' <Predicate = (!tmp & trunc_ln25 == 7)> <Delay = 1.85>
ST_2 : Operation 42 [1/1] (1.85ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit" [aesl_mux_load.11i32P.i4:22->fir11_sec2_8.cpp:25]   --->   Operation 42 'br' <Predicate = (!tmp & trunc_ln25 == 6)> <Delay = 1.85>
ST_2 : Operation 43 [1/1] (1.85ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit" [aesl_mux_load.11i32P.i4:22->fir11_sec2_8.cpp:25]   --->   Operation 43 'br' <Predicate = (!tmp & trunc_ln25 == 5)> <Delay = 1.85>
ST_2 : Operation 44 [1/1] (1.85ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit" [aesl_mux_load.11i32P.i4:22->fir11_sec2_8.cpp:25]   --->   Operation 44 'br' <Predicate = (!tmp & trunc_ln25 == 4)> <Delay = 1.85>
ST_2 : Operation 45 [1/1] (1.85ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit" [aesl_mux_load.11i32P.i4:22->fir11_sec2_8.cpp:25]   --->   Operation 45 'br' <Predicate = (!tmp & trunc_ln25 == 3)> <Delay = 1.85>
ST_2 : Operation 46 [1/1] (1.85ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit" [aesl_mux_load.11i32P.i4:22->fir11_sec2_8.cpp:25]   --->   Operation 46 'br' <Predicate = (!tmp & trunc_ln25 == 2)> <Delay = 1.85>
ST_2 : Operation 47 [1/1] (1.85ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit" [aesl_mux_load.11i32P.i4:22->fir11_sec2_8.cpp:25]   --->   Operation 47 'br' <Predicate = (!tmp & trunc_ln25 == 1)> <Delay = 1.85>
ST_2 : Operation 48 [1/1] (1.85ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit" [aesl_mux_load.11i32P.i4:22->fir11_sec2_8.cpp:25]   --->   Operation 48 'br' <Predicate = (!tmp & trunc_ln25 != 0 & trunc_ln25 != 1 & trunc_ln25 != 2 & trunc_ln25 != 3 & trunc_ln25 != 4 & trunc_ln25 != 5 & trunc_ln25 != 6 & trunc_ln25 != 7 & trunc_ln25 != 8 & trunc_ln25 != 9)> <Delay = 1.85>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%c1_addr = getelementptr [11 x i10]* @c1, i64 0, i64 %zext_ln25" [fir11_sec2_8.cpp:25]   --->   Operation 49 'getelementptr' 'c1_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 50 [2/2] (1.35ns)   --->   "%c1_load = load i10* %c1_addr, align 2" [fir11_sec2_8.cpp:25]   --->   Operation 50 'load' 'c1_load' <Predicate = (!tmp)> <Delay = 1.35> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 11> <ROM>
ST_2 : Operation 51 [1/1] (0.87ns)   --->   "%i = add i5 %i_1, -1" [fir11_sec2_8.cpp:24]   --->   Operation 51 'add' 'i' <Predicate = (!tmp)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %y, i32 %acc_0) nounwind" [fir11_sec2_8.cpp:27]   --->   Operation 52 'write' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "ret void" [fir11_sec2_8.cpp:29]   --->   Operation 53 'ret' <Predicate = (tmp)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.43>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%UnifiedRetVal_i = phi i32 [ %shift_reg_0_load, %case1.i ], [ %shift_reg_1_load, %case2.i ], [ %shift_reg_2_load, %case3.i ], [ %shift_reg_3_load, %case4.i ], [ %shift_reg_4_load, %case5.i ], [ %shift_reg_5_load, %case6.i ], [ %shift_reg_6_load, %case7.i ], [ %shift_reg_7_load, %case8.i ], [ %shift_reg_8_load, %case9.i ], [ %shift_reg_9_load, %case10.i ], [ %x_read, %2 ]" [fir11_sec2_8.cpp:18]   --->   Operation 54 'phi' 'UnifiedRetVal_i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/2] (1.35ns)   --->   "%c1_load = load i10* %c1_addr, align 2" [fir11_sec2_8.cpp:25]   --->   Operation 55 'load' 'c1_load' <Predicate = true> <Delay = 1.35> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 11> <ROM>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%sext_ln25 = sext i10 %c1_load to i32" [fir11_sec2_8.cpp:25]   --->   Operation 56 'sext' 'sext_ln25' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (3.88ns)   --->   "%mul_ln25 = mul nsw i32 %sext_ln25, %UnifiedRetVal_i" [fir11_sec2_8.cpp:25]   --->   Operation 57 'mul' 'mul_ln25' <Predicate = true> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (1.20ns)   --->   "%acc = add nsw i32 %mul_ln25, %acc_0" [fir11_sec2_8.cpp:25]   --->   Operation 58 'add' 'acc' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "br label %1" [fir11_sec2_8.cpp:24]   --->   Operation 59 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('acc') with incoming values : ('acc', fir11_sec2_8.cpp:25) [42]  (0.755 ns)

 <State 2>: 1.86ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', fir11_sec2_8.cpp:24) [43]  (0 ns)
	multiplexor before 'phi' operation ('UnifiedRetVal_i', fir11_sec2_8.cpp:18) with incoming values : ('x', fir11_sec2_8.cpp:8) ('shift_reg_9_load', fir11_sec2_8.cpp:18) ('shift_reg_8_load', fir11_sec2_8.cpp:18) ('shift_reg_7_load', fir11_sec2_8.cpp:18) ('shift_reg_6_load', fir11_sec2_8.cpp:18) ('shift_reg_5_load', fir11_sec2_8.cpp:18) ('shift_reg_4_load', fir11_sec2_8.cpp:18) ('shift_reg_3_load', fir11_sec2_8.cpp:18) ('shift_reg_2_load', fir11_sec2_8.cpp:18) ('shift_reg_1_load', fir11_sec2_8.cpp:18) ('shift_reg_0_load', fir11_sec2_8.cpp:18) [74]  (1.86 ns)

 <State 3>: 6.44ns
The critical path consists of the following:
	'load' operation ('c1_load', fir11_sec2_8.cpp:25) on array 'c1' [76]  (1.35 ns)
	'mul' operation ('mul_ln25', fir11_sec2_8.cpp:25) [78]  (3.88 ns)
	'add' operation ('acc', fir11_sec2_8.cpp:25) [79]  (1.2 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
