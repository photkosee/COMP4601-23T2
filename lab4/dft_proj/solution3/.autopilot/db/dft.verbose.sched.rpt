

================================================================
== Vivado HLS Report for 'dft'
================================================================
* Date:           Mon Jul  3 05:02:46 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        dft_proj
* Solution:       solution3
* Product family: zynquplus
* Target device:  xqzu5ev-ffrb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 8.00 ns | 6.955 ns |   1.00 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   138498|   138498| 1.108 ms | 1.108 ms |  138498|  138498|   none  |
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- dft_label1   |   137984|   137984|       539|          -|          -|   256|    no    |
        | + dft_label0  |      525|      525|        16|          2|          1|   256|    yes   |
        |- Loop 2       |      512|      512|         2|          -|          -|   256|    no    |
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 16


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 32
* Pipeline : 1
  Pipeline-0 : II = 2, D = 16, States = { 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 31 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 30 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 14 
30 --> 2 
31 --> 32 
32 --> 31 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i16]* %sample_real_V), !map !87"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i16]* %sample_imag_V), !map !93"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @dft_str) nounwind"   --->   Operation 35 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%temp_real_V = alloca [256 x i16], align 2" [dft.cpp:14]   --->   Operation 36 'alloca' 'temp_real_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%temp_imag_V = alloca [256 x i16], align 2" [dft.cpp:15]   --->   Operation 37 'alloca' 'temp_imag_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_1 : Operation 38 [1/1] (0.75ns)   --->   "br label %.preheader654" [dft.cpp:18]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 5.43>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%i_0 = phi i9 [ %i_2, %dft_label1_end ], [ 0, %arrayctor.loop1.preheader ]"   --->   Operation 39 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.85ns)   --->   "%icmp_ln18 = icmp eq i9 %i_0, -256" [dft.cpp:18]   --->   Operation 40 'icmp' 'icmp_ln18' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)"   --->   Operation 41 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.92ns)   --->   "%i_2 = add i9 %i_0, 1" [dft.cpp:18]   --->   Operation 42 'add' 'i_2' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %icmp_ln18, label %.preheader.preheader, label %dft_label1_begin" [dft.cpp:18]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i9 %i_0 to i32" [dft.cpp:18]   --->   Operation 44 'zext' 'zext_ln18' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 45 [5/5] (5.43ns)   --->   "%tmp = sitofp i32 %zext_ln18 to double" [dft.cpp:24]   --->   Operation 45 'sitodp' 'tmp' <Predicate = (!icmp_ln18)> <Delay = 5.43> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 4> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.75ns)   --->   "br label %.preheader" [dft.cpp:40]   --->   Operation 46 'br' <Predicate = (icmp_ln18)> <Delay = 0.75>

State 3 <SV = 2> <Delay = 5.43>
ST_3 : Operation 47 [4/5] (5.43ns)   --->   "%tmp = sitofp i32 %zext_ln18 to double" [dft.cpp:24]   --->   Operation 47 'sitodp' 'tmp' <Predicate = true> <Delay = 5.43> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 4> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.43>
ST_4 : Operation 48 [3/5] (5.43ns)   --->   "%tmp = sitofp i32 %zext_ln18 to double" [dft.cpp:24]   --->   Operation 48 'sitodp' 'tmp' <Predicate = true> <Delay = 5.43> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 4> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.43>
ST_5 : Operation 49 [2/5] (5.43ns)   --->   "%tmp = sitofp i32 %zext_ln18 to double" [dft.cpp:24]   --->   Operation 49 'sitodp' 'tmp' <Predicate = true> <Delay = 5.43> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 4> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.43>
ST_6 : Operation 50 [1/5] (5.43ns)   --->   "%tmp = sitofp i32 %zext_ln18 to double" [dft.cpp:24]   --->   Operation 50 'sitodp' 'tmp' <Predicate = true> <Delay = 5.43> <Core = "Int2Double">   --->   Core 122 'Int2Double' <Latency = 4> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.60>
ST_7 : Operation 51 [6/6] (6.60ns)   --->   "%v_assign = fmul double %tmp, 0x3F9921FB5444261E" [dft.cpp:24]   --->   Operation 51 'dmul' 'v_assign' <Predicate = true> <Delay = 6.60> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 6.60>
ST_8 : Operation 52 [5/6] (6.60ns)   --->   "%v_assign = fmul double %tmp, 0x3F9921FB5444261E" [dft.cpp:24]   --->   Operation 52 'dmul' 'v_assign' <Predicate = true> <Delay = 6.60> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.60>
ST_9 : Operation 53 [4/6] (6.60ns)   --->   "%v_assign = fmul double %tmp, 0x3F9921FB5444261E" [dft.cpp:24]   --->   Operation 53 'dmul' 'v_assign' <Predicate = true> <Delay = 6.60> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 6.60>
ST_10 : Operation 54 [3/6] (6.60ns)   --->   "%v_assign = fmul double %tmp, 0x3F9921FB5444261E" [dft.cpp:24]   --->   Operation 54 'dmul' 'v_assign' <Predicate = true> <Delay = 6.60> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.60>
ST_11 : Operation 55 [2/6] (6.60ns)   --->   "%v_assign = fmul double %tmp, 0x3F9921FB5444261E" [dft.cpp:24]   --->   Operation 55 'dmul' 'v_assign' <Predicate = true> <Delay = 6.60> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.60>
ST_12 : Operation 56 [1/6] (6.60ns)   --->   "%v_assign = fmul double %tmp, 0x3F9921FB5444261E" [dft.cpp:24]   --->   Operation 56 'dmul' 'v_assign' <Predicate = true> <Delay = 6.60> <Core = "DMul">   --->   Core 116 'DMul' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 5.66>
ST_13 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str) nounwind" [dft.cpp:18]   --->   Operation 57 'specloopname' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str)" [dft.cpp:18]   --->   Operation 58 'specregionbegin' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln19 = zext i9 %i_0 to i64" [dft.cpp:19]   --->   Operation 59 'zext' 'zext_ln19' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 60 [1/1] (0.00ns)   --->   "%temp_real_V_addr = getelementptr [256 x i16]* %temp_real_V, i64 0, i64 %zext_ln19" [dft.cpp:19]   --->   Operation 60 'getelementptr' 'temp_real_V_addr' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 61 [1/1] (1.35ns)   --->   "store i16 0, i16* %temp_real_V_addr, align 2" [dft.cpp:19]   --->   Operation 61 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_13 : Operation 62 [1/1] (0.00ns)   --->   "%temp_imag_V_addr = getelementptr [256 x i16]* %temp_imag_V, i64 0, i64 %zext_ln19" [dft.cpp:20]   --->   Operation 62 'getelementptr' 'temp_imag_V_addr' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 63 [1/1] (1.35ns)   --->   "store i16 0, i16* %temp_imag_V_addr, align 2" [dft.cpp:20]   --->   Operation 63 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_13 : Operation 64 [1/1] (0.00ns)   --->   "%ireg_V = bitcast double %v_assign to i64" [dft.cpp:24]   --->   Operation 64 'bitcast' 'ireg_V' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln556 = trunc i64 %ireg_V to i63" [dft.cpp:24]   --->   Operation 65 'trunc' 'trunc_ln556' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 66 [1/1] (0.00ns)   --->   "%p_Result_35 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)" [dft.cpp:24]   --->   Operation 66 'bitselect' 'p_Result_35' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 67 [1/1] (0.00ns)   --->   "%exp_tmp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V, i32 52, i32 62)" [dft.cpp:24]   --->   Operation 67 'partselect' 'exp_tmp_V' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln461 = zext i11 %exp_tmp_V to i12" [dft.cpp:24]   --->   Operation 68 'zext' 'zext_ln461' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 69 [1/1] (0.00ns)   --->   "%trunc_ln565 = trunc i64 %ireg_V to i52" [dft.cpp:24]   --->   Operation 69 'trunc' 'trunc_ln565' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_1 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %trunc_ln565)" [dft.cpp:24]   --->   Operation 70 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 71 [1/1] (0.00ns)   --->   "%p_Result_36 = zext i53 %tmp_1 to i54" [dft.cpp:24]   --->   Operation 71 'zext' 'p_Result_36' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 72 [1/1] (1.31ns)   --->   "%man_V_1 = sub i54 0, %p_Result_36" [dft.cpp:24]   --->   Operation 72 'sub' 'man_V_1' <Predicate = true> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 73 [1/1] (0.41ns)   --->   "%man_V_2 = select i1 %p_Result_35, i54 %man_V_1, i54 %p_Result_36" [dft.cpp:24]   --->   Operation 73 'select' 'man_V_2' <Predicate = true> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 74 [1/1] (1.46ns)   --->   "%icmp_ln571 = icmp eq i63 %trunc_ln556, 0" [dft.cpp:24]   --->   Operation 74 'icmp' 'icmp_ln571' <Predicate = true> <Delay = 1.46> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 75 [1/1] (0.96ns)   --->   "%F2 = sub i12 1075, %zext_ln461" [dft.cpp:24]   --->   Operation 75 'sub' 'F2' <Predicate = true> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 76 [1/1] (0.86ns)   --->   "%icmp_ln581 = icmp sgt i12 %F2, 12" [dft.cpp:24]   --->   Operation 76 'icmp' 'icmp_ln581' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 77 [1/1] (0.96ns)   --->   "%add_ln581 = add i12 -12, %F2" [dft.cpp:24]   --->   Operation 77 'add' 'add_ln581' <Predicate = true> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 78 [1/1] (0.96ns)   --->   "%sub_ln581 = sub i12 12, %F2" [dft.cpp:24]   --->   Operation 78 'sub' 'sub_ln581' <Predicate = true> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 79 [1/1] (0.43ns)   --->   "%sh_amt = select i1 %icmp_ln581, i12 %add_ln581, i12 %sub_ln581" [dft.cpp:24]   --->   Operation 79 'select' 'sh_amt' <Predicate = true> <Delay = 0.43> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 80 [1/1] (0.00ns)   --->   "%sext_ln581 = sext i12 %sh_amt to i32" [dft.cpp:24]   --->   Operation 80 'sext' 'sext_ln581' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 81 [1/1] (0.86ns)   --->   "%icmp_ln582 = icmp eq i12 %F2, 12" [dft.cpp:24]   --->   Operation 81 'icmp' 'icmp_ln582' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln583 = trunc i54 %man_V_2 to i16" [dft.cpp:24]   --->   Operation 82 'trunc' 'trunc_ln583' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 83 [1/1] (0.86ns)   --->   "%icmp_ln585 = icmp ult i12 %sh_amt, 54" [dft.cpp:24]   --->   Operation 83 'icmp' 'icmp_ln585' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_13 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %sh_amt, i32 4, i32 11)" [dft.cpp:24]   --->   Operation 84 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 85 [1/1] (0.85ns)   --->   "%icmp_ln603 = icmp eq i8 %tmp_13, 0" [dft.cpp:24]   --->   Operation 85 'icmp' 'icmp_ln603' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%zext_ln586 = zext i32 %sext_ln581 to i54" [dft.cpp:24]   --->   Operation 86 'zext' 'zext_ln586' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%ashr_ln586 = ashr i54 %man_V_2, %zext_ln586" [dft.cpp:24]   --->   Operation 87 'ashr' 'ashr_ln586' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%trunc_ln586 = trunc i54 %ashr_ln586 to i16" [dft.cpp:24]   --->   Operation 88 'trunc' 'trunc_ln586' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%tmp_14 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)" [dft.cpp:24]   --->   Operation 89 'bitselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%select_ln588 = select i1 %tmp_14, i16 -1, i16 0" [dft.cpp:24]   --->   Operation 90 'select' 'select_ln588' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%sext_ln581cast = trunc i32 %sext_ln581 to i16" [dft.cpp:24]   --->   Operation 91 'trunc' 'sext_ln581cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%shl_ln604 = shl i16 %trunc_ln583, %sext_ln581cast" [dft.cpp:24]   --->   Operation 92 'shl' 'shl_ln604' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%xor_ln571 = xor i1 %icmp_ln571, true" [dft.cpp:24]   --->   Operation 93 'xor' 'xor_ln571' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%and_ln582 = and i1 %icmp_ln582, %xor_ln571" [dft.cpp:24]   --->   Operation 94 'and' 'and_ln582' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 95 [1/1] (0.33ns)   --->   "%or_ln582 = or i1 %icmp_ln571, %icmp_ln582" [dft.cpp:24]   --->   Operation 95 'or' 'or_ln582' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node and_ln581)   --->   "%xor_ln582 = xor i1 %or_ln582, true" [dft.cpp:24]   --->   Operation 96 'xor' 'xor_ln582' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 97 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln581 = and i1 %icmp_ln581, %xor_ln582" [dft.cpp:24]   --->   Operation 97 'and' 'and_ln581' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node and_ln585)   --->   "%xor_ln585 = xor i1 %icmp_ln585, true" [dft.cpp:24]   --->   Operation 98 'xor' 'xor_ln585' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 99 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln585 = and i1 %and_ln581, %xor_ln585" [dft.cpp:24]   --->   Operation 99 'and' 'and_ln585' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node or_ln603)   --->   "%and_ln585_1 = and i1 %and_ln581, %icmp_ln585" [dft.cpp:24]   --->   Operation 100 'and' 'and_ln585_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node and_ln603)   --->   "%or_ln581 = or i1 %or_ln582, %icmp_ln581" [dft.cpp:24]   --->   Operation 101 'or' 'or_ln581' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node and_ln603)   --->   "%xor_ln581 = xor i1 %or_ln581, true" [dft.cpp:24]   --->   Operation 102 'xor' 'xor_ln581' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 103 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln603 = and i1 %icmp_ln603, %xor_ln581" [dft.cpp:24]   --->   Operation 103 'and' 'and_ln603' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 104 [1/1] (1.69ns) (out node of the LUT)   --->   "%select_ln603 = select i1 %and_ln603, i16 %shl_ln604, i16 %trunc_ln586" [dft.cpp:24]   --->   Operation 104 'select' 'select_ln603' <Predicate = true> <Delay = 1.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 105 [1/1] (0.33ns) (out node of the LUT)   --->   "%or_ln603 = or i1 %and_ln603, %and_ln585_1" [dft.cpp:24]   --->   Operation 105 'or' 'or_ln603' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 106 [1/1] (0.42ns) (out node of the LUT)   --->   "%select_ln603_1 = select i1 %and_ln585, i16 %select_ln588, i16 %trunc_ln583" [dft.cpp:24]   --->   Operation 106 'select' 'select_ln603_1' <Predicate = true> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%or_ln603_1 = or i1 %and_ln585, %and_ln582" [dft.cpp:24]   --->   Operation 107 'or' 'or_ln603_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node w_V)   --->   "%select_ln603_2 = select i1 %or_ln603, i16 %select_ln603, i16 %select_ln603_1" [dft.cpp:24]   --->   Operation 108 'select' 'select_ln603_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 109 [1/1] (0.33ns) (out node of the LUT)   --->   "%or_ln603_2 = or i1 %or_ln603, %or_ln603_1" [dft.cpp:24]   --->   Operation 109 'or' 'or_ln603_2' <Predicate = true> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 110 [1/1] (0.42ns) (out node of the LUT)   --->   "%w_V = select i1 %or_ln603_2, i16 %select_ln603_2, i16 0" [dft.cpp:24]   --->   Operation 110 'select' 'w_V' <Predicate = true> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 111 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i16 %w_V to i24" [dft.cpp:29]   --->   Operation 111 'sext' 'sext_ln1118' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 112 [1/1] (0.75ns)   --->   "br label %0" [dft.cpp:27]   --->   Operation 112 'br' <Predicate = true> <Delay = 0.75>

State 14 <SV = 13> <Delay = 6.95>
ST_14 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_V_2 = phi i9 [ 0, %dft_label1_begin ], [ %j, %dft_label0 ]"   --->   Operation 113 'phi' 'tmp_V_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 114 [1/1] (0.00ns)   --->   "%phi_mul = phi i24 [ 0, %dft_label1_begin ], [ %add_ln1118, %dft_label0 ]" [dft.cpp:29]   --->   Operation 114 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 115 [1/1] (0.85ns)   --->   "%icmp_ln27 = icmp eq i9 %tmp_V_2, -256" [dft.cpp:27]   --->   Operation 115 'icmp' 'icmp_ln27' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 116 [1/1] (0.00ns)   --->   "%empty_50 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)"   --->   Operation 116 'speclooptripcount' 'empty_50' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 117 [1/1] (0.92ns)   --->   "%j = add i9 %tmp_V_2, 1" [dft.cpp:27]   --->   Operation 117 'add' 'j' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 118 [1/1] (0.00ns)   --->   "br i1 %icmp_ln27, label %dft_label1_end, label %dft_label0" [dft.cpp:27]   --->   Operation 118 'br' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 119 [1/1] (1.10ns)   --->   "%add_ln1118 = add i24 %phi_mul, %sext_ln1118" [dft.cpp:29]   --->   Operation 119 'add' 'add_ln1118' <Predicate = (!icmp_ln27)> <Delay = 1.10> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 120 [1/1] (0.98ns)   --->   "%icmp_ln885 = icmp eq i24 %phi_mul, 0" [dft.cpp:29]   --->   Operation 120 'icmp' 'icmp_ln885' <Predicate = (!icmp_ln27)> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 121 [1/1] (0.00ns)   --->   "%p_Result_37 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %phi_mul, i32 23)" [dft.cpp:29]   --->   Operation 121 'bitselect' 'p_Result_37' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_14 : Operation 122 [1/1] (1.10ns)   --->   "%tmp_V = sub i24 0, %phi_mul" [dft.cpp:29]   --->   Operation 122 'sub' 'tmp_V' <Predicate = (!icmp_ln27)> <Delay = 1.10> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 123 [1/1] (0.43ns)   --->   "%tmp_V_4 = select i1 %p_Result_37, i24 %tmp_V, i24 %phi_mul" [dft.cpp:29]   --->   Operation 123 'select' 'tmp_V_4' <Predicate = (!icmp_ln27)> <Delay = 0.43> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 124 [1/1] (0.00ns)   --->   "%sext_ln888 = sext i24 %tmp_V_4 to i48" [dft.cpp:29]   --->   Operation 124 'sext' 'sext_ln888' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_14 : Operation 125 [1/1] (0.00ns)   --->   "%p_Result_1 = call i48 @llvm.part.select.i48(i48 %sext_ln888, i32 47, i32 0) nounwind" [dft.cpp:29]   --->   Operation 125 'partselect' 'p_Result_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_14 : Operation 126 [1/1] (0.00ns)   --->   "%p_Result_38 = call i64 @_ssdm_op_BitConcatenate.i64.i16.i48(i16 -1, i48 %p_Result_1)" [dft.cpp:29]   --->   Operation 126 'bitconcatenate' 'p_Result_38' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_14 : Operation 127 [1/1] (2.00ns)   --->   "%tmp_2 = call i64 @llvm.cttz.i64(i64 %p_Result_38, i1 true) nounwind" [dft.cpp:29]   --->   Operation 127 'cttz' 'tmp_2' <Predicate = (!icmp_ln27)> <Delay = 2.00> <Core = "CTTZ">   --->   Core 64 'CTTZ' <Latency = 0> <II = 1> <Delay = 2.00> <FuncUnit> <Opcode : 'cttz'> <InPorts = 1> <OutPorts = 1>
ST_14 : Operation 128 [1/1] (0.00ns)   --->   "%l = trunc i64 %tmp_2 to i32" [dft.cpp:29]   --->   Operation 128 'trunc' 'l' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_14 : Operation 129 [1/1] (1.20ns)   --->   "%sub_ln894 = sub nsw i32 48, %l" [dft.cpp:29]   --->   Operation 129 'sub' 'sub_ln894' <Predicate = (!icmp_ln27)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 130 [1/1] (0.00ns)   --->   "%trunc_ln897 = trunc i32 %sub_ln894 to i6" [dft.cpp:29]   --->   Operation 130 'trunc' 'trunc_ln897' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_14 : Operation 131 [1/1] (0.88ns)   --->   "%sub_ln897 = sub i6 -26, %trunc_ln897" [dft.cpp:29]   --->   Operation 131 'sub' 'sub_ln897' <Predicate = (!icmp_ln27)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln897_1)   --->   "%zext_ln897 = zext i6 %sub_ln897 to i48" [dft.cpp:29]   --->   Operation 132 'zext' 'zext_ln897' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_14 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln897_1)   --->   "%lshr_ln897 = lshr i48 -1, %zext_ln897" [dft.cpp:29]   --->   Operation 133 'lshr' 'lshr_ln897' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln897_1)   --->   "%p_Result_s = and i48 %sext_ln888, %lshr_ln897" [dft.cpp:29]   --->   Operation 134 'and' 'p_Result_s' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 135 [1/1] (1.31ns) (out node of the LUT)   --->   "%icmp_ln897_1 = icmp ne i48 %p_Result_s, 0" [dft.cpp:29]   --->   Operation 135 'icmp' 'icmp_ln897_1' <Predicate = (!icmp_ln27)> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 136 [1/1] (0.00ns)   --->   "%trunc_ln893 = trunc i64 %tmp_2 to i11" [dft.cpp:29]   --->   Operation 136 'trunc' 'trunc_ln893' <Predicate = (!icmp_ln27)> <Delay = 0.00>

State 15 <SV = 14> <Delay = 6.34>
ST_15 : Operation 137 [1/1] (1.20ns)   --->   "%lsb_index = add nsw i32 -53, %sub_ln894" [dft.cpp:29]   --->   Operation 137 'add' 'lsb_index' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 138 [1/1] (0.00ns)   --->   "%tmp_16 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %lsb_index, i32 1, i32 31)" [dft.cpp:29]   --->   Operation 138 'partselect' 'tmp_16' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 139 [1/1] (1.09ns)   --->   "%icmp_ln897 = icmp sgt i31 %tmp_16, 0" [dft.cpp:29]   --->   Operation 139 'icmp' 'icmp_ln897' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 1.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%a = and i1 %icmp_ln897, %icmp_ln897_1" [dft.cpp:29]   --->   Operation 140 'and' 'a' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_17 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %lsb_index, i32 31)" [dft.cpp:29]   --->   Operation 141 'bitselect' 'tmp_17' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln899 = xor i1 %tmp_17, true" [dft.cpp:29]   --->   Operation 142 'xor' 'xor_ln899' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%p_Result_4 = call i1 @_ssdm_op_BitSelect.i1.i48.i32(i48 %sext_ln888, i32 %lsb_index)" [dft.cpp:29]   --->   Operation 143 'bitselect' 'p_Result_4' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln899 = and i1 %p_Result_4, %xor_ln899" [dft.cpp:29]   --->   Operation 144 'and' 'and_ln899' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln899 = or i1 %and_ln899, %a" [dft.cpp:29]   --->   Operation 145 'or' 'or_ln899' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 146 [1/1] (0.33ns) (out node of the LUT)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %or_ln899)" [dft.cpp:29]   --->   Operation 146 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.33>
ST_15 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m = zext i48 %sext_ln888 to i64" [dft.cpp:29]   --->   Operation 147 'zext' 'm' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 148 [1/1] (1.11ns)   --->   "%icmp_ln908 = icmp sgt i32 %lsb_index, 0" [dft.cpp:29]   --->   Operation 148 'icmp' 'icmp_ln908' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 149 [1/1] (1.20ns)   --->   "%add_ln908 = add nsw i32 -54, %sub_ln894" [dft.cpp:29]   --->   Operation 149 'add' 'add_ln908' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln908 = zext i32 %add_ln908 to i48" [dft.cpp:29]   --->   Operation 150 'zext' 'zext_ln908' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%lshr_ln908 = lshr i48 %sext_ln888, %zext_ln908" [dft.cpp:29]   --->   Operation 151 'lshr' 'lshr_ln908' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln908_2 = zext i48 %lshr_ln908 to i64" [dft.cpp:29]   --->   Operation 152 'zext' 'zext_ln908_2' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 153 [1/1] (1.20ns)   --->   "%sub_ln908 = sub i32 54, %sub_ln894" [dft.cpp:29]   --->   Operation 153 'sub' 'sub_ln908' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln908_1 = zext i32 %sub_ln908 to i64" [dft.cpp:29]   --->   Operation 154 'zext' 'zext_ln908_1' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%shl_ln908 = shl i64 %m, %zext_ln908_1" [dft.cpp:29]   --->   Operation 155 'shl' 'shl_ln908' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m_1 = select i1 %icmp_ln908, i64 %zext_ln908_2, i64 %shl_ln908" [dft.cpp:29]   --->   Operation 156 'select' 'm_1' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln911 = zext i32 %or_ln to i64" [dft.cpp:29]   --->   Operation 157 'zext' 'zext_ln911' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 158 [1/1] (1.68ns) (out node of the LUT)   --->   "%m_2 = add i64 %zext_ln911, %m_1" [dft.cpp:29]   --->   Operation 158 'add' 'm_2' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 1.68> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 159 [1/1] (0.00ns)   --->   "%m_5 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %m_2, i32 1, i32 63)" [dft.cpp:29]   --->   Operation 159 'partselect' 'm_5' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 160 [1/1] (0.00ns)   --->   "%m_6 = zext i63 %m_5 to i64" [dft.cpp:29]   --->   Operation 160 'zext' 'm_6' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_18 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %m_2, i32 54)" [dft.cpp:29]   --->   Operation 161 'bitselect' 'tmp_18' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 162 [1/1] (0.45ns)   --->   "%select_ln915 = select i1 %tmp_18, i11 1023, i11 1022" [dft.cpp:29]   --->   Operation 162 'select' 'select_ln915' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.45> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 163 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln915 = sub i11 36, %trunc_ln893" [dft.cpp:29]   --->   Operation 163 'sub' 'sub_ln915' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 164 [1/1] (1.07ns) (root node of TernaryAdder)   --->   "%add_ln915 = add i11 %sub_ln915, %select_ln915" [dft.cpp:29]   --->   Operation 164 'add' 'add_ln915' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 1.07> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_6 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i11(i1 %p_Result_37, i11 %add_ln915)" [dft.cpp:29]   --->   Operation 165 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 166 [1/1] (0.00ns)   --->   "%p_Result_39 = call i64 @_ssdm_op_PartSet.i64.i64.i12.i32.i32(i64 %m_6, i12 %tmp_6, i32 52, i32 63)" [dft.cpp:29]   --->   Operation 166 'partset' 'p_Result_39' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 167 [1/1] (0.00ns)   --->   "%bitcast_ln729 = bitcast i64 %p_Result_39 to double" [dft.cpp:29]   --->   Operation 167 'bitcast' 'bitcast_ln729' <Predicate = (!icmp_ln27 & !icmp_ln885)> <Delay = 0.00>
ST_15 : Operation 168 [1/1] (0.49ns)   --->   "%select_ln885 = select i1 %icmp_ln885, double 0.000000e+00, double %bitcast_ln729" [dft.cpp:29]   --->   Operation 168 'select' 'select_ln885' <Predicate = (!icmp_ln27)> <Delay = 0.49> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 16 <SV = 15> <Delay = 2.75>
ST_16 : Operation 169 [11/11] (2.75ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 169 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 2.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 6.62>
ST_17 : Operation 170 [10/11] (6.62ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 170 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 171 [11/11] (2.75ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 171 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 2.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 6.62>
ST_18 : Operation 172 [9/11] (6.62ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 172 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 173 [10/11] (6.62ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 173 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 18> <Delay = 6.62>
ST_19 : Operation 174 [8/11] (6.62ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 174 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 175 [9/11] (6.62ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 175 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 6.62>
ST_20 : Operation 176 [7/11] (6.62ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 176 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 177 [8/11] (6.62ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 177 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 20> <Delay = 6.62>
ST_21 : Operation 178 [6/11] (6.62ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 178 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 179 [7/11] (6.62ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 179 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 6.62>
ST_22 : Operation 180 [5/11] (6.62ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 180 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 181 [6/11] (6.62ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 181 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 22> <Delay = 6.62>
ST_23 : Operation 182 [4/11] (6.62ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 182 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 183 [5/11] (6.62ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 183 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 23> <Delay = 6.62>
ST_24 : Operation 184 [3/11] (6.62ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 184 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 185 [4/11] (6.62ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 185 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 24> <Delay = 6.62>
ST_25 : Operation 186 [2/11] (6.62ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 186 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_25 : Operation 187 [3/11] (6.62ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 187 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 25> <Delay = 6.62>
ST_26 : Operation 188 [1/11] (6.04ns)   --->   "%v_assign_1 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext true) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29]   --->   Operation 188 'call' 'v_assign_1' <Predicate = (!icmp_ln27)> <Delay = 6.04> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_26 : Operation 189 [2/11] (6.62ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 189 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 6.62> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_26 : Operation 190 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i9 %tmp_V_2 to i64" [dft.cpp:34]   --->   Operation 190 'zext' 'zext_ln34' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_26 : Operation 191 [1/1] (0.00ns)   --->   "%sample_real_V_addr_1 = getelementptr [256 x i16]* %sample_real_V, i64 0, i64 %zext_ln34" [dft.cpp:34]   --->   Operation 191 'getelementptr' 'sample_real_V_addr_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_26 : Operation 192 [2/2] (1.35ns)   --->   "%sample_real_V_load = load i16* %sample_real_V_addr_1, align 2" [dft.cpp:34]   --->   Operation 192 'load' 'sample_real_V_load' <Predicate = (!icmp_ln27)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_26 : Operation 193 [1/1] (0.00ns)   --->   "%sample_imag_V_addr_1 = getelementptr [256 x i16]* %sample_imag_V, i64 0, i64 %zext_ln34" [dft.cpp:34]   --->   Operation 193 'getelementptr' 'sample_imag_V_addr_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_26 : Operation 194 [2/2] (1.35ns)   --->   "%sample_imag_V_load = load i16* %sample_imag_V_addr_1, align 2" [dft.cpp:34]   --->   Operation 194 'load' 'sample_imag_V_load' <Predicate = (!icmp_ln27)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>

State 27 <SV = 26> <Delay = 6.04>
ST_27 : Operation 195 [1/1] (0.00ns)   --->   "%ireg_V_1 = bitcast double %v_assign_1 to i64" [dft.cpp:29]   --->   Operation 195 'bitcast' 'ireg_V_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 196 [1/1] (0.00ns)   --->   "%trunc_ln556_1 = trunc i64 %ireg_V_1 to i63" [dft.cpp:29]   --->   Operation 196 'trunc' 'trunc_ln556_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 197 [1/1] (0.00ns)   --->   "%p_Result_40 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1, i32 63)" [dft.cpp:29]   --->   Operation 197 'bitselect' 'p_Result_40' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 198 [1/1] (0.00ns)   --->   "%exp_tmp_V_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1, i32 52, i32 62)" [dft.cpp:29]   --->   Operation 198 'partselect' 'exp_tmp_V_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln461_1 = zext i11 %exp_tmp_V_1 to i12" [dft.cpp:29]   --->   Operation 199 'zext' 'zext_ln461_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 200 [1/1] (0.00ns)   --->   "%trunc_ln565_1 = trunc i64 %ireg_V_1 to i52" [dft.cpp:29]   --->   Operation 200 'trunc' 'trunc_ln565_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 201 [1/1] (0.00ns)   --->   "%tmp_7 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %trunc_ln565_1)" [dft.cpp:29]   --->   Operation 201 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 202 [1/1] (0.00ns)   --->   "%p_Result_41 = zext i53 %tmp_7 to i54" [dft.cpp:29]   --->   Operation 202 'zext' 'p_Result_41' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 203 [1/1] (1.31ns)   --->   "%man_V_4 = sub i54 0, %p_Result_41" [dft.cpp:29]   --->   Operation 203 'sub' 'man_V_4' <Predicate = (!icmp_ln27)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 204 [1/1] (0.41ns)   --->   "%man_V_5 = select i1 %p_Result_40, i54 %man_V_4, i54 %p_Result_41" [dft.cpp:29]   --->   Operation 204 'select' 'man_V_5' <Predicate = (!icmp_ln27)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 205 [1/1] (1.46ns)   --->   "%icmp_ln571_1 = icmp eq i63 %trunc_ln556_1, 0" [dft.cpp:29]   --->   Operation 205 'icmp' 'icmp_ln571_1' <Predicate = (!icmp_ln27)> <Delay = 1.46> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 206 [1/1] (0.96ns)   --->   "%F2_1 = sub i12 1075, %zext_ln461_1" [dft.cpp:29]   --->   Operation 206 'sub' 'F2_1' <Predicate = (!icmp_ln27)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 207 [1/1] (0.86ns)   --->   "%icmp_ln581_1 = icmp sgt i12 %F2_1, 12" [dft.cpp:29]   --->   Operation 207 'icmp' 'icmp_ln581_1' <Predicate = (!icmp_ln27)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 208 [1/1] (0.96ns)   --->   "%add_ln581_1 = add i12 -12, %F2_1" [dft.cpp:29]   --->   Operation 208 'add' 'add_ln581_1' <Predicate = (!icmp_ln27)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 209 [1/1] (0.96ns)   --->   "%sub_ln581_1 = sub i12 12, %F2_1" [dft.cpp:29]   --->   Operation 209 'sub' 'sub_ln581_1' <Predicate = (!icmp_ln27)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 210 [1/1] (0.43ns)   --->   "%sh_amt_1 = select i1 %icmp_ln581_1, i12 %add_ln581_1, i12 %sub_ln581_1" [dft.cpp:29]   --->   Operation 210 'select' 'sh_amt_1' <Predicate = (!icmp_ln27)> <Delay = 0.43> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 211 [1/1] (0.00ns)   --->   "%sext_ln581_1 = sext i12 %sh_amt_1 to i32" [dft.cpp:29]   --->   Operation 211 'sext' 'sext_ln581_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 212 [1/1] (0.86ns)   --->   "%icmp_ln582_1 = icmp eq i12 %F2_1, 12" [dft.cpp:29]   --->   Operation 212 'icmp' 'icmp_ln582_1' <Predicate = (!icmp_ln27)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 213 [1/1] (0.00ns)   --->   "%trunc_ln583_1 = trunc i54 %man_V_5 to i16" [dft.cpp:29]   --->   Operation 213 'trunc' 'trunc_ln583_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 214 [1/1] (0.86ns)   --->   "%icmp_ln585_1 = icmp ult i12 %sh_amt_1, 54" [dft.cpp:29]   --->   Operation 214 'icmp' 'icmp_ln585_1' <Predicate = (!icmp_ln27)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 215 [1/1] (0.00ns)   --->   "%tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %sh_amt_1, i32 4, i32 11)" [dft.cpp:29]   --->   Operation 215 'partselect' 'tmp_20' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 216 [1/1] (0.85ns)   --->   "%icmp_ln603_1 = icmp eq i8 %tmp_20, 0" [dft.cpp:29]   --->   Operation 216 'icmp' 'icmp_ln603_1' <Predicate = (!icmp_ln27)> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 217 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_4)   --->   "%zext_ln586_1 = zext i32 %sext_ln581_1 to i54" [dft.cpp:29]   --->   Operation 217 'zext' 'zext_ln586_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_4)   --->   "%ashr_ln586_1 = ashr i54 %man_V_5, %zext_ln586_1" [dft.cpp:29]   --->   Operation 218 'ashr' 'ashr_ln586_1' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_4)   --->   "%trunc_ln586_1 = trunc i54 %ashr_ln586_1 to i16" [dft.cpp:29]   --->   Operation 219 'trunc' 'trunc_ln586_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_5)   --->   "%tmp_21 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1, i32 63)" [dft.cpp:29]   --->   Operation 220 'bitselect' 'tmp_21' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_5)   --->   "%select_ln588_1 = select i1 %tmp_21, i16 -1, i16 0" [dft.cpp:29]   --->   Operation 221 'select' 'select_ln588_1' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_4)   --->   "%sext_ln581_1cast = trunc i32 %sext_ln581_1 to i16" [dft.cpp:29]   --->   Operation 222 'trunc' 'sext_ln581_1cast' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_4)   --->   "%shl_ln604_1 = shl i16 %trunc_ln583_1, %sext_ln581_1cast" [dft.cpp:29]   --->   Operation 223 'shl' 'shl_ln604_1' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_5)   --->   "%xor_ln571_1 = xor i1 %icmp_ln571_1, true" [dft.cpp:29]   --->   Operation 224 'xor' 'xor_ln571_1' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_5)   --->   "%and_ln582_1 = and i1 %icmp_ln582_1, %xor_ln571_1" [dft.cpp:29]   --->   Operation 225 'and' 'and_ln582_1' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 226 [1/1] (0.33ns)   --->   "%or_ln582_1 = or i1 %icmp_ln571_1, %icmp_ln582_1" [dft.cpp:29]   --->   Operation 226 'or' 'or_ln582_1' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node and_ln581_1)   --->   "%xor_ln582_1 = xor i1 %or_ln582_1, true" [dft.cpp:29]   --->   Operation 227 'xor' 'xor_ln582_1' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 228 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln581_1 = and i1 %icmp_ln581_1, %xor_ln582_1" [dft.cpp:29]   --->   Operation 228 'and' 'and_ln581_1' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node and_ln585_2)   --->   "%xor_ln585_1 = xor i1 %icmp_ln585_1, true" [dft.cpp:29]   --->   Operation 229 'xor' 'xor_ln585_1' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 230 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln585_2 = and i1 %and_ln581_1, %xor_ln585_1" [dft.cpp:29]   --->   Operation 230 'and' 'and_ln585_2' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_3)   --->   "%and_ln585_3 = and i1 %and_ln581_1, %icmp_ln585_1" [dft.cpp:29]   --->   Operation 231 'and' 'and_ln585_3' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 232 [1/1] (0.00ns) (grouped into LUT with out node and_ln603_1)   --->   "%or_ln581_1 = or i1 %or_ln582_1, %icmp_ln581_1" [dft.cpp:29]   --->   Operation 232 'or' 'or_ln581_1' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 233 [1/1] (0.00ns) (grouped into LUT with out node and_ln603_1)   --->   "%xor_ln581_1 = xor i1 %or_ln581_1, true" [dft.cpp:29]   --->   Operation 233 'xor' 'xor_ln581_1' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 234 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln603_1 = and i1 %icmp_ln603_1, %xor_ln581_1" [dft.cpp:29]   --->   Operation 234 'and' 'and_ln603_1' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 235 [1/1] (1.69ns) (out node of the LUT)   --->   "%select_ln603_4 = select i1 %and_ln603_1, i16 %shl_ln604_1, i16 %trunc_ln586_1" [dft.cpp:29]   --->   Operation 235 'select' 'select_ln603_4' <Predicate = (!icmp_ln27)> <Delay = 1.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 236 [1/1] (0.33ns) (out node of the LUT)   --->   "%or_ln603_3 = or i1 %and_ln603_1, %and_ln585_3" [dft.cpp:29]   --->   Operation 236 'or' 'or_ln603_3' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 237 [1/1] (0.42ns) (out node of the LUT)   --->   "%select_ln603_5 = select i1 %and_ln585_2, i16 %select_ln588_1, i16 %trunc_ln583_1" [dft.cpp:29]   --->   Operation 237 'select' 'select_ln603_5' <Predicate = (!icmp_ln27)> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 238 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_5)   --->   "%or_ln603_4 = or i1 %and_ln585_2, %and_ln582_1" [dft.cpp:29]   --->   Operation 238 'or' 'or_ln603_4' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node c_V)   --->   "%select_ln603_6 = select i1 %or_ln603_3, i16 %select_ln603_4, i16 %select_ln603_5" [dft.cpp:29]   --->   Operation 239 'select' 'select_ln603_6' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 240 [1/1] (0.33ns) (out node of the LUT)   --->   "%or_ln603_5 = or i1 %or_ln603_3, %or_ln603_4" [dft.cpp:29]   --->   Operation 240 'or' 'or_ln603_5' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 241 [1/1] (0.42ns) (out node of the LUT)   --->   "%c_V = select i1 %or_ln603_5, i16 %select_ln603_6, i16 0" [dft.cpp:29]   --->   Operation 241 'select' 'c_V' <Predicate = (!icmp_ln27)> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 242 [1/11] (6.04ns)   --->   "%tmp_i_i9 = call fastcc double @"sin_or_cos<double>"(double %select_ln885, i1 zeroext false) nounwind" [r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30]   --->   Operation 242 'call' 'tmp_i_i9' <Predicate = (!icmp_ln27)> <Delay = 6.04> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_27 : Operation 243 [1/2] (1.35ns)   --->   "%sample_real_V_load = load i16* %sample_real_V_addr_1, align 2" [dft.cpp:34]   --->   Operation 243 'load' 'sample_real_V_load' <Predicate = (!icmp_ln27)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_27 : Operation 244 [1/2] (1.35ns)   --->   "%sample_imag_V_load = load i16* %sample_imag_V_addr_1, align 2" [dft.cpp:34]   --->   Operation 244 'load' 'sample_imag_V_load' <Predicate = (!icmp_ln27)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>

State 28 <SV = 27> <Delay = 6.10>
ST_28 : Operation 245 [1/1] (0.00ns)   --->   "%bitcast_ln30 = bitcast double %tmp_i_i9 to i64" [dft.cpp:30]   --->   Operation 245 'bitcast' 'bitcast_ln30' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 246 [1/1] (0.00ns)   --->   "%trunc_ln30 = trunc i64 %bitcast_ln30 to i63" [dft.cpp:30]   --->   Operation 246 'trunc' 'trunc_ln30' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 247 [1/1] (0.44ns)   --->   "%ireg_V_2 = xor i64 %bitcast_ln30, -9223372036854775808" [dft.cpp:30]   --->   Operation 247 'xor' 'ireg_V_2' <Predicate = (!icmp_ln27)> <Delay = 0.44> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 248 [1/1] (0.00ns)   --->   "%tmp_22 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %bitcast_ln30, i32 63)" [dft.cpp:30]   --->   Operation 248 'bitselect' 'tmp_22' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 249 [1/1] (0.00ns)   --->   "%exp_tmp_V_2 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_2, i32 52, i32 62)" [dft.cpp:30]   --->   Operation 249 'partselect' 'exp_tmp_V_2' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 250 [1/1] (0.00ns)   --->   "%zext_ln461_2 = zext i11 %exp_tmp_V_2 to i12" [dft.cpp:30]   --->   Operation 250 'zext' 'zext_ln461_2' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 251 [1/1] (0.00ns)   --->   "%trunc_ln565_2 = trunc i64 %ireg_V_2 to i52" [dft.cpp:30]   --->   Operation 251 'trunc' 'trunc_ln565_2' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 252 [1/1] (0.00ns)   --->   "%tmp_3 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %trunc_ln565_2)" [dft.cpp:30]   --->   Operation 252 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 253 [1/1] (0.00ns)   --->   "%p_Result_42 = zext i53 %tmp_3 to i54" [dft.cpp:30]   --->   Operation 253 'zext' 'p_Result_42' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 254 [1/1] (1.31ns)   --->   "%man_V_7 = sub i54 0, %p_Result_42" [dft.cpp:30]   --->   Operation 254 'sub' 'man_V_7' <Predicate = (!icmp_ln27)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 255 [1/1] (0.41ns)   --->   "%man_V_8 = select i1 %tmp_22, i54 %p_Result_42, i54 %man_V_7" [dft.cpp:30]   --->   Operation 255 'select' 'man_V_8' <Predicate = (!icmp_ln27)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 256 [1/1] (1.46ns)   --->   "%icmp_ln571_2 = icmp eq i63 %trunc_ln30, 0" [dft.cpp:30]   --->   Operation 256 'icmp' 'icmp_ln571_2' <Predicate = (!icmp_ln27)> <Delay = 1.46> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 257 [1/1] (0.96ns)   --->   "%F2_2 = sub i12 1075, %zext_ln461_2" [dft.cpp:30]   --->   Operation 257 'sub' 'F2_2' <Predicate = (!icmp_ln27)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 258 [1/1] (0.86ns)   --->   "%icmp_ln581_2 = icmp sgt i12 %F2_2, 12" [dft.cpp:30]   --->   Operation 258 'icmp' 'icmp_ln581_2' <Predicate = (!icmp_ln27)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 259 [1/1] (0.96ns)   --->   "%add_ln581_2 = add i12 -12, %F2_2" [dft.cpp:30]   --->   Operation 259 'add' 'add_ln581_2' <Predicate = (!icmp_ln27)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 260 [1/1] (0.96ns)   --->   "%sub_ln581_2 = sub i12 12, %F2_2" [dft.cpp:30]   --->   Operation 260 'sub' 'sub_ln581_2' <Predicate = (!icmp_ln27)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 261 [1/1] (0.43ns)   --->   "%sh_amt_2 = select i1 %icmp_ln581_2, i12 %add_ln581_2, i12 %sub_ln581_2" [dft.cpp:30]   --->   Operation 261 'select' 'sh_amt_2' <Predicate = (!icmp_ln27)> <Delay = 0.43> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 262 [1/1] (0.00ns)   --->   "%sext_ln581_2 = sext i12 %sh_amt_2 to i32" [dft.cpp:30]   --->   Operation 262 'sext' 'sext_ln581_2' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 263 [1/1] (0.86ns)   --->   "%icmp_ln582_2 = icmp eq i12 %F2_2, 12" [dft.cpp:30]   --->   Operation 263 'icmp' 'icmp_ln582_2' <Predicate = (!icmp_ln27)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 264 [1/1] (0.00ns)   --->   "%trunc_ln583_2 = trunc i54 %man_V_8 to i16" [dft.cpp:30]   --->   Operation 264 'trunc' 'trunc_ln583_2' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 265 [1/1] (0.86ns)   --->   "%icmp_ln585_2 = icmp ult i12 %sh_amt_2, 54" [dft.cpp:30]   --->   Operation 265 'icmp' 'icmp_ln585_2' <Predicate = (!icmp_ln27)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 266 [1/1] (0.00ns)   --->   "%tmp_23 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %sh_amt_2, i32 4, i32 11)" [dft.cpp:30]   --->   Operation 266 'partselect' 'tmp_23' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 267 [1/1] (0.85ns)   --->   "%icmp_ln603_2 = icmp eq i8 %tmp_23, 0" [dft.cpp:30]   --->   Operation 267 'icmp' 'icmp_ln603_2' <Predicate = (!icmp_ln27)> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 268 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_8)   --->   "%zext_ln586_2 = zext i32 %sext_ln581_2 to i54" [dft.cpp:30]   --->   Operation 268 'zext' 'zext_ln586_2' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 269 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_8)   --->   "%ashr_ln586_2 = ashr i54 %man_V_8, %zext_ln586_2" [dft.cpp:30]   --->   Operation 269 'ashr' 'ashr_ln586_2' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_8)   --->   "%trunc_ln586_2 = trunc i54 %ashr_ln586_2 to i16" [dft.cpp:30]   --->   Operation 270 'trunc' 'trunc_ln586_2' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_9)   --->   "%tmp_24 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_2, i32 63)" [dft.cpp:30]   --->   Operation 271 'bitselect' 'tmp_24' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 272 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_9)   --->   "%select_ln588_2 = select i1 %tmp_24, i16 -1, i16 0" [dft.cpp:30]   --->   Operation 272 'select' 'select_ln588_2' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 273 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_8)   --->   "%sext_ln581_2cast = trunc i32 %sext_ln581_2 to i16" [dft.cpp:30]   --->   Operation 273 'trunc' 'sext_ln581_2cast' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_8)   --->   "%shl_ln604_2 = shl i16 %trunc_ln583_2, %sext_ln581_2cast" [dft.cpp:30]   --->   Operation 274 'shl' 'shl_ln604_2' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_8)   --->   "%xor_ln571_2 = xor i1 %icmp_ln571_2, true" [dft.cpp:30]   --->   Operation 275 'xor' 'xor_ln571_2' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 276 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_8)   --->   "%and_ln582_2 = and i1 %icmp_ln582_2, %xor_ln571_2" [dft.cpp:30]   --->   Operation 276 'and' 'and_ln582_2' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 277 [1/1] (0.33ns)   --->   "%or_ln582_2 = or i1 %icmp_ln571_2, %icmp_ln582_2" [dft.cpp:30]   --->   Operation 277 'or' 'or_ln582_2' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 278 [1/1] (0.00ns) (grouped into LUT with out node and_ln581_2)   --->   "%xor_ln582_2 = xor i1 %or_ln582_2, true" [dft.cpp:30]   --->   Operation 278 'xor' 'xor_ln582_2' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 279 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln581_2 = and i1 %icmp_ln581_2, %xor_ln582_2" [dft.cpp:30]   --->   Operation 279 'and' 'and_ln581_2' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 280 [1/1] (0.00ns) (grouped into LUT with out node and_ln585_4)   --->   "%xor_ln585_2 = xor i1 %icmp_ln585_2, true" [dft.cpp:30]   --->   Operation 280 'xor' 'xor_ln585_2' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 281 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln585_4 = and i1 %and_ln581_2, %xor_ln585_2" [dft.cpp:30]   --->   Operation 281 'and' 'and_ln585_4' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 282 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_6)   --->   "%and_ln585_5 = and i1 %and_ln581_2, %icmp_ln585_2" [dft.cpp:30]   --->   Operation 282 'and' 'and_ln585_5' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 283 [1/1] (0.00ns) (grouped into LUT with out node and_ln603_2)   --->   "%or_ln581_2 = or i1 %or_ln582_2, %icmp_ln581_2" [dft.cpp:30]   --->   Operation 283 'or' 'or_ln581_2' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 284 [1/1] (0.00ns) (grouped into LUT with out node and_ln603_2)   --->   "%xor_ln581_2 = xor i1 %or_ln581_2, true" [dft.cpp:30]   --->   Operation 284 'xor' 'xor_ln581_2' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 285 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln603_2 = and i1 %icmp_ln603_2, %xor_ln581_2" [dft.cpp:30]   --->   Operation 285 'and' 'and_ln603_2' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 286 [1/1] (1.69ns) (out node of the LUT)   --->   "%select_ln603_8 = select i1 %and_ln603_2, i16 %shl_ln604_2, i16 %trunc_ln586_2" [dft.cpp:30]   --->   Operation 286 'select' 'select_ln603_8' <Predicate = (!icmp_ln27)> <Delay = 1.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 287 [1/1] (0.33ns) (out node of the LUT)   --->   "%or_ln603_6 = or i1 %and_ln603_2, %and_ln585_5" [dft.cpp:30]   --->   Operation 287 'or' 'or_ln603_6' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 288 [1/1] (0.42ns) (out node of the LUT)   --->   "%select_ln603_9 = select i1 %and_ln585_4, i16 %select_ln588_2, i16 %trunc_ln583_2" [dft.cpp:30]   --->   Operation 288 'select' 'select_ln603_9' <Predicate = (!icmp_ln27)> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 289 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_8)   --->   "%or_ln603_7 = or i1 %and_ln585_4, %and_ln582_2" [dft.cpp:30]   --->   Operation 289 'or' 'or_ln603_7' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 290 [1/1] (0.00ns) (grouped into LUT with out node s_V)   --->   "%select_ln603_10 = select i1 %or_ln603_6, i16 %select_ln603_8, i16 %select_ln603_9" [dft.cpp:30]   --->   Operation 290 'select' 'select_ln603_10' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 291 [1/1] (0.33ns) (out node of the LUT)   --->   "%or_ln603_8 = or i1 %or_ln603_6, %or_ln603_7" [dft.cpp:30]   --->   Operation 291 'or' 'or_ln603_8' <Predicate = (!icmp_ln27)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 292 [1/1] (0.42ns) (out node of the LUT)   --->   "%s_V = select i1 %or_ln603_8, i16 %select_ln603_10, i16 0" [dft.cpp:30]   --->   Operation 292 'select' 's_V' <Predicate = (!icmp_ln27)> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 293 [1/1] (0.00ns)   --->   "%sext_ln1118_1 = sext i16 %c_V to i28" [dft.cpp:34]   --->   Operation 293 'sext' 'sext_ln1118_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 294 [1/1] (0.00ns)   --->   "%sext_ln1118_2 = sext i16 %sample_real_V_load to i28" [dft.cpp:34]   --->   Operation 294 'sext' 'sext_ln1118_2' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 295 [1/1] (0.00ns)   --->   "%sext_ln1118_4 = sext i16 %sample_imag_V_load to i28" [dft.cpp:34]   --->   Operation 295 'sext' 'sext_ln1118_4' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_28 : Operation 296 [1/1] (2.84ns) (root node of the DSP)   --->   "%mul_ln1192 = mul i28 %sext_ln1118_2, %sext_ln1118_1" [dft.cpp:34]   --->   Operation 296 'mul' 'mul_ln1192' <Predicate = (!icmp_ln27)> <Delay = 2.84> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 297 [2/2] (1.35ns)   --->   "%p_Val2_42 = load i16* %temp_real_V_addr, align 2" [dft.cpp:34]   --->   Operation 297 'load' 'p_Val2_42' <Predicate = (!icmp_ln27)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_28 : Operation 298 [1/1] (2.84ns) (root node of the DSP)   --->   "%mul_ln1192_3 = mul i28 %sext_ln1118_4, %sext_ln1118_1" [dft.cpp:35]   --->   Operation 298 'mul' 'mul_ln1192_3' <Predicate = (!icmp_ln27)> <Delay = 2.84> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 299 [2/2] (1.35ns)   --->   "%p_Val2_44 = load i16* %temp_imag_V_addr, align 2" [dft.cpp:35]   --->   Operation 299 'load' 'p_Val2_44' <Predicate = (!icmp_ln27)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>

State 29 <SV = 28> <Delay = 5.35>
ST_29 : Operation 300 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1) nounwind" [dft.cpp:27]   --->   Operation 300 'specloopname' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_29 : Operation 301 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1)" [dft.cpp:27]   --->   Operation 301 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_29 : Operation 302 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [dft.cpp:28]   --->   Operation 302 'specpipeline' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_29 : Operation 303 [1/1] (0.00ns)   --->   "%sext_ln1118_3 = sext i16 %s_V to i28" [dft.cpp:34]   --->   Operation 303 'sext' 'sext_ln1118_3' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_29 : Operation 304 [1/1] (0.63ns) (grouped into DSP with root node sub_ln1192)   --->   "%mul_ln1192_1 = mul i28 %sext_ln1118_4, %sext_ln1118_3" [dft.cpp:34]   --->   Operation 304 'mul' 'mul_ln1192_1' <Predicate = (!icmp_ln27)> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 305 [1/1] (2.20ns) (root node of the DSP)   --->   "%sub_ln1192 = sub i28 %mul_ln1192, %mul_ln1192_1" [dft.cpp:34]   --->   Operation 305 'sub' 'sub_ln1192' <Predicate = (!icmp_ln27)> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 306 [1/2] (1.35ns)   --->   "%p_Val2_42 = load i16* %temp_real_V_addr, align 2" [dft.cpp:34]   --->   Operation 306 'load' 'p_Val2_42' <Predicate = (!icmp_ln27)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_29 : Operation 307 [1/1] (0.00ns)   --->   "%lhs_V = call i28 @_ssdm_op_BitConcatenate.i28.i16.i12(i16 %p_Val2_42, i12 0)" [dft.cpp:34]   --->   Operation 307 'bitconcatenate' 'lhs_V' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_29 : Operation 308 [1/1] (1.15ns)   --->   "%ret_V = add i28 %sub_ln1192, %lhs_V" [dft.cpp:34]   --->   Operation 308 'add' 'ret_V' <Predicate = (!icmp_ln27)> <Delay = 1.15> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 309 [1/1] (0.00ns)   --->   "%trunc_ln9 = call i16 @_ssdm_op_PartSelect.i16.i28.i32.i32(i28 %ret_V, i32 12, i32 27)" [dft.cpp:34]   --->   Operation 309 'partselect' 'trunc_ln9' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_29 : Operation 310 [1/1] (1.35ns)   --->   "store i16 %trunc_ln9, i16* %temp_real_V_addr, align 2" [dft.cpp:34]   --->   Operation 310 'store' <Predicate = (!icmp_ln27)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_29 : Operation 311 [1/1] (0.63ns) (grouped into DSP with root node add_ln1192)   --->   "%mul_ln1192_2 = mul i28 %sext_ln1118_2, %sext_ln1118_3" [dft.cpp:35]   --->   Operation 311 'mul' 'mul_ln1192_2' <Predicate = (!icmp_ln27)> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 312 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln1192 = add i28 %mul_ln1192_3, %mul_ln1192_2" [dft.cpp:35]   --->   Operation 312 'add' 'add_ln1192' <Predicate = (!icmp_ln27)> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_29 : Operation 313 [1/2] (1.35ns)   --->   "%p_Val2_44 = load i16* %temp_imag_V_addr, align 2" [dft.cpp:35]   --->   Operation 313 'load' 'p_Val2_44' <Predicate = (!icmp_ln27)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_29 : Operation 314 [1/1] (0.00ns)   --->   "%lhs_V_2 = call i28 @_ssdm_op_BitConcatenate.i28.i16.i12(i16 %p_Val2_44, i12 0)" [dft.cpp:35]   --->   Operation 314 'bitconcatenate' 'lhs_V_2' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_29 : Operation 315 [1/1] (1.15ns)   --->   "%ret_V_19 = add i28 %add_ln1192, %lhs_V_2" [dft.cpp:35]   --->   Operation 315 'add' 'ret_V_19' <Predicate = (!icmp_ln27)> <Delay = 1.15> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 316 [1/1] (0.00ns)   --->   "%trunc_ln708_1 = call i16 @_ssdm_op_PartSelect.i16.i28.i32.i32(i28 %ret_V_19, i32 12, i32 27)" [dft.cpp:35]   --->   Operation 316 'partselect' 'trunc_ln708_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_29 : Operation 317 [1/1] (1.35ns)   --->   "store i16 %trunc_ln708_1, i16* %temp_imag_V_addr, align 2" [dft.cpp:35]   --->   Operation 317 'store' <Predicate = (!icmp_ln27)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_29 : Operation 318 [1/1] (0.00ns)   --->   "%empty_51 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1, i32 %tmp_4)" [dft.cpp:36]   --->   Operation 318 'specregionend' 'empty_51' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_29 : Operation 319 [1/1] (0.00ns)   --->   "br label %0"   --->   Operation 319 'br' <Predicate = (!icmp_ln27)> <Delay = 0.00>

State 30 <SV = 14> <Delay = 0.00>
ST_30 : Operation 320 [1/1] (0.00ns)   --->   "%empty_52 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str, i32 %tmp_s)" [dft.cpp:37]   --->   Operation 320 'specregionend' 'empty_52' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 321 [1/1] (0.00ns)   --->   "br label %.preheader654" [dft.cpp:18]   --->   Operation 321 'br' <Predicate = true> <Delay = 0.00>

State 31 <SV = 2> <Delay = 1.35>
ST_31 : Operation 322 [1/1] (0.00ns)   --->   "%i_1 = phi i9 [ %i, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 322 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 323 [1/1] (0.85ns)   --->   "%icmp_ln40 = icmp eq i9 %i_1, -256" [dft.cpp:40]   --->   Operation 323 'icmp' 'icmp_ln40' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 324 [1/1] (0.00ns)   --->   "%empty_53 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)"   --->   Operation 324 'speclooptripcount' 'empty_53' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 325 [1/1] (0.92ns)   --->   "%i = add i9 %i_1, 1" [dft.cpp:40]   --->   Operation 325 'add' 'i' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 326 [1/1] (0.00ns)   --->   "br i1 %icmp_ln40, label %2, label %1" [dft.cpp:40]   --->   Operation 326 'br' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 327 [1/1] (0.00ns)   --->   "%zext_ln41 = zext i9 %i_1 to i64" [dft.cpp:41]   --->   Operation 327 'zext' 'zext_ln41' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_31 : Operation 328 [1/1] (0.00ns)   --->   "%temp_real_V_addr_1 = getelementptr [256 x i16]* %temp_real_V, i64 0, i64 %zext_ln41" [dft.cpp:41]   --->   Operation 328 'getelementptr' 'temp_real_V_addr_1' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_31 : Operation 329 [2/2] (1.35ns)   --->   "%temp_real_V_load = load i16* %temp_real_V_addr_1, align 2" [dft.cpp:41]   --->   Operation 329 'load' 'temp_real_V_load' <Predicate = (!icmp_ln40)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_31 : Operation 330 [1/1] (0.00ns)   --->   "%temp_imag_V_addr_1 = getelementptr [256 x i16]* %temp_imag_V, i64 0, i64 %zext_ln41" [dft.cpp:42]   --->   Operation 330 'getelementptr' 'temp_imag_V_addr_1' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_31 : Operation 331 [2/2] (1.35ns)   --->   "%temp_imag_V_load = load i16* %temp_imag_V_addr_1, align 2" [dft.cpp:42]   --->   Operation 331 'load' 'temp_imag_V_load' <Predicate = (!icmp_ln40)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_31 : Operation 332 [1/1] (0.00ns)   --->   "ret void" [dft.cpp:44]   --->   Operation 332 'ret' <Predicate = (icmp_ln40)> <Delay = 0.00>

State 32 <SV = 3> <Delay = 2.70>
ST_32 : Operation 333 [1/2] (1.35ns)   --->   "%temp_real_V_load = load i16* %temp_real_V_addr_1, align 2" [dft.cpp:41]   --->   Operation 333 'load' 'temp_real_V_load' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_32 : Operation 334 [1/1] (0.00ns)   --->   "%sample_real_V_addr = getelementptr [256 x i16]* %sample_real_V, i64 0, i64 %zext_ln41" [dft.cpp:41]   --->   Operation 334 'getelementptr' 'sample_real_V_addr' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 335 [1/1] (1.35ns)   --->   "store i16 %temp_real_V_load, i16* %sample_real_V_addr, align 2" [dft.cpp:41]   --->   Operation 335 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_32 : Operation 336 [1/2] (1.35ns)   --->   "%temp_imag_V_load = load i16* %temp_imag_V_addr_1, align 2" [dft.cpp:42]   --->   Operation 336 'load' 'temp_imag_V_load' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_32 : Operation 337 [1/1] (0.00ns)   --->   "%sample_imag_V_addr = getelementptr [256 x i16]* %sample_imag_V, i64 0, i64 %zext_ln41" [dft.cpp:42]   --->   Operation 337 'getelementptr' 'sample_imag_V_addr' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 338 [1/1] (1.35ns)   --->   "store i16 %temp_imag_V_load, i16* %sample_imag_V_addr, align 2" [dft.cpp:42]   --->   Operation 338 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 256> <RAM>
ST_32 : Operation 339 [1/1] (0.00ns)   --->   "br label %.preheader" [dft.cpp:40]   --->   Operation 339 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', dft.cpp:18) [22]  (0.755 ns)

 <State 2>: 5.44ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', dft.cpp:18) [22]  (0 ns)
	'sitodp' operation ('tmp', dft.cpp:24) [36]  (5.44 ns)

 <State 3>: 5.44ns
The critical path consists of the following:
	'sitodp' operation ('tmp', dft.cpp:24) [36]  (5.44 ns)

 <State 4>: 5.44ns
The critical path consists of the following:
	'sitodp' operation ('tmp', dft.cpp:24) [36]  (5.44 ns)

 <State 5>: 5.44ns
The critical path consists of the following:
	'sitodp' operation ('tmp', dft.cpp:24) [36]  (5.44 ns)

 <State 6>: 5.44ns
The critical path consists of the following:
	'sitodp' operation ('tmp', dft.cpp:24) [36]  (5.44 ns)

 <State 7>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('v', dft.cpp:24) [37]  (6.6 ns)

 <State 8>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('v', dft.cpp:24) [37]  (6.6 ns)

 <State 9>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('v', dft.cpp:24) [37]  (6.6 ns)

 <State 10>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('v', dft.cpp:24) [37]  (6.6 ns)

 <State 11>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('v', dft.cpp:24) [37]  (6.6 ns)

 <State 12>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('v', dft.cpp:24) [37]  (6.6 ns)

 <State 13>: 5.66ns
The critical path consists of the following:
	'sub' operation ('F2', dft.cpp:24) [49]  (0.962 ns)
	'add' operation ('add_ln581', dft.cpp:24) [51]  (0.962 ns)
	'select' operation ('sh_amt', dft.cpp:24) [53]  (0.431 ns)
	'icmp' operation ('icmp_ln603', dft.cpp:24) [59]  (0.856 ns)
	'and' operation ('and_ln603', dft.cpp:24) [77]  (0.331 ns)
	'select' operation ('select_ln603', dft.cpp:24) [78]  (1.7 ns)
	'select' operation ('select_ln603_2', dft.cpp:24) [82]  (0 ns)
	'select' operation ('w.V', dft.cpp:24) [84]  (0.42 ns)

 <State 14>: 6.96ns
The critical path consists of the following:
	'phi' operation ('phi_mul', dft.cpp:29) with incoming values : ('add_ln1118', dft.cpp:29) [89]  (0 ns)
	'sub' operation ('tmp.V', dft.cpp:29) [101]  (1.11 ns)
	'select' operation ('tmp.V', dft.cpp:29) [102]  (0.435 ns)
	'cttz' operation ('tmp_2', dft.cpp:29) [106]  (2.01 ns)
	'sub' operation ('sub_ln894', dft.cpp:29) [108]  (1.2 ns)
	'sub' operation ('sub_ln897', dft.cpp:29) [113]  (0.887 ns)
	'lshr' operation ('lshr_ln897', dft.cpp:29) [115]  (0 ns)
	'and' operation ('__Result__', dft.cpp:29) [116]  (0 ns)
	'icmp' operation ('icmp_ln897_1', dft.cpp:29) [117]  (1.31 ns)

 <State 15>: 6.34ns
The critical path consists of the following:
	'add' operation ('lsb_index', dft.cpp:29) [109]  (1.2 ns)
	'icmp' operation ('icmp_ln897', dft.cpp:29) [111]  (1.1 ns)
	'and' operation ('a', dft.cpp:29) [118]  (0 ns)
	'or' operation ('or_ln899', dft.cpp:29) [123]  (0 ns)
	'add' operation ('m', dft.cpp:29) [136]  (1.69 ns)
	'select' operation ('select_ln915', dft.cpp:29) [140]  (0.451 ns)
	'add' operation ('add_ln915', dft.cpp:29) [143]  (1.07 ns)
	'select' operation ('x', dft.cpp:29) [147]  (0.499 ns)
	blocking operation 0.331 ns on control path)

 <State 16>: 2.75ns
The critical path consists of the following:
	'call' operation ('v', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29) to 'sin_or_cos<double>' [148]  (2.75 ns)

 <State 17>: 6.62ns
The critical path consists of the following:
	'call' operation ('v', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29) to 'sin_or_cos<double>' [148]  (6.62 ns)

 <State 18>: 6.62ns
The critical path consists of the following:
	'call' operation ('v', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29) to 'sin_or_cos<double>' [148]  (6.62 ns)

 <State 19>: 6.62ns
The critical path consists of the following:
	'call' operation ('v', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29) to 'sin_or_cos<double>' [148]  (6.62 ns)

 <State 20>: 6.62ns
The critical path consists of the following:
	'call' operation ('v', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29) to 'sin_or_cos<double>' [148]  (6.62 ns)

 <State 21>: 6.62ns
The critical path consists of the following:
	'call' operation ('v', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29) to 'sin_or_cos<double>' [148]  (6.62 ns)

 <State 22>: 6.62ns
The critical path consists of the following:
	'call' operation ('v', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29) to 'sin_or_cos<double>' [148]  (6.62 ns)

 <State 23>: 6.62ns
The critical path consists of the following:
	'call' operation ('v', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29) to 'sin_or_cos<double>' [148]  (6.62 ns)

 <State 24>: 6.62ns
The critical path consists of the following:
	'call' operation ('v', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29) to 'sin_or_cos<double>' [148]  (6.62 ns)

 <State 25>: 6.62ns
The critical path consists of the following:
	'call' operation ('v', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:144->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:13->dft.cpp:29) to 'sin_or_cos<double>' [148]  (6.62 ns)

 <State 26>: 6.62ns
The critical path consists of the following:
	'call' operation ('tmp_i_i9', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30) to 'sin_or_cos<double>' [196]  (6.62 ns)

 <State 27>: 6.04ns
The critical path consists of the following:
	'call' operation ('tmp_i_i9', r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/common/hls_hotbm_double.cpp:140->r:/builds/2020.1/continuous/2020_05_27_2902540/src/products/hls/hls_lib/hlsmath/src/c/sincosdouble.cpp:8->dft.cpp:30) to 'sin_or_cos<double>' [196]  (6.04 ns)

 <State 28>: 6.1ns
The critical path consists of the following:
	'xor' operation ('ireg.V', dft.cpp:30) [199]  (0.441 ns)
	'sub' operation ('F2', dft.cpp:30) [209]  (0.962 ns)
	'sub' operation ('sub_ln581_2', dft.cpp:30) [212]  (0.962 ns)
	'select' operation ('sh_amt', dft.cpp:30) [213]  (0.431 ns)
	'icmp' operation ('icmp_ln603_2', dft.cpp:30) [219]  (0.856 ns)
	'and' operation ('and_ln603_2', dft.cpp:30) [237]  (0.331 ns)
	'select' operation ('select_ln603_8', dft.cpp:30) [238]  (1.7 ns)
	'select' operation ('select_ln603_10', dft.cpp:30) [242]  (0 ns)
	'select' operation ('s.V', dft.cpp:30) [244]  (0.42 ns)

 <State 29>: 5.35ns
The critical path consists of the following:
	'mul' operation of DSP[256] ('mul_ln1192_1', dft.cpp:34) [255]  (0.638 ns)
	'sub' operation of DSP[256] ('sub_ln1192', dft.cpp:34) [256]  (2.21 ns)
	'add' operation ('ret.V', dft.cpp:34) [259]  (1.16 ns)
	'store' operation ('store_ln34', dft.cpp:34) of variable 'trunc_ln9', dft.cpp:34 on array 'temp_real.V', dft.cpp:14 [261]  (1.35 ns)

 <State 30>: 0ns
The critical path consists of the following:

 <State 31>: 1.35ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', dft.cpp:40) [278]  (0 ns)
	'getelementptr' operation ('temp_real_V_addr_1', dft.cpp:41) [285]  (0 ns)
	'load' operation ('temp_real_V_load', dft.cpp:41) on array 'temp_real.V', dft.cpp:14 [286]  (1.35 ns)

 <State 32>: 2.7ns
The critical path consists of the following:
	'load' operation ('temp_real_V_load', dft.cpp:41) on array 'temp_real.V', dft.cpp:14 [286]  (1.35 ns)
	'store' operation ('store_ln41', dft.cpp:41) of variable 'temp_real_V_load', dft.cpp:41 on array 'sample_real_V' [288]  (1.35 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
