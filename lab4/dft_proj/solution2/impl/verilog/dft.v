// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dft,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xqzu5ev-ffrb900-1-i,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.675000,HLS_SYN_LAT=341250,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=110,HLS_SYN_FF=5242,HLS_SYN_LUT=8209,HLS_VERSION=2020_1}" *)

module dft (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sample_real_address0,
        sample_real_ce0,
        sample_real_we0,
        sample_real_d0,
        sample_real_q0,
        sample_imag_address0,
        sample_imag_ce0,
        sample_imag_we0,
        sample_imag_d0,
        sample_imag_q0
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_pp0_stage0 = 22'd16384;
parameter    ap_ST_fsm_pp0_stage1 = 22'd32768;
parameter    ap_ST_fsm_pp0_stage2 = 22'd65536;
parameter    ap_ST_fsm_pp0_stage3 = 22'd131072;
parameter    ap_ST_fsm_pp0_stage4 = 22'd262144;
parameter    ap_ST_fsm_state57 = 22'd524288;
parameter    ap_ST_fsm_state58 = 22'd1048576;
parameter    ap_ST_fsm_state59 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] sample_real_address0;
output   sample_real_ce0;
output   sample_real_we0;
output  [31:0] sample_real_d0;
input  [31:0] sample_real_q0;
output  [7:0] sample_imag_address0;
output   sample_imag_ce0;
output   sample_imag_we0;
output  [31:0] sample_imag_d0;
input  [31:0] sample_imag_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] sample_real_address0;
reg sample_real_ce0;
reg sample_real_we0;
reg[7:0] sample_imag_address0;
reg sample_imag_ce0;
reg sample_imag_we0;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] empty_41_reg_172;
reg   [31:0] empty_42_reg_184;
reg   [8:0] j_0_reg_196;
reg   [8:0] j_0_reg_196_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state15_pp0_stage0_iter0;
wire    ap_block_state20_pp0_stage0_iter1;
wire    ap_block_state25_pp0_stage0_iter2;
wire    ap_block_state30_pp0_stage0_iter3;
wire    ap_block_state35_pp0_stage0_iter4;
wire    ap_block_state40_pp0_stage0_iter5;
wire    ap_block_state45_pp0_stage0_iter6;
wire    ap_block_state50_pp0_stage0_iter7;
wire    ap_block_state55_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
reg   [8:0] j_0_reg_196_pp0_iter2_reg;
reg   [8:0] j_0_reg_196_pp0_iter3_reg;
wire   [8:0] i_2_fu_273_p2;
reg   [8:0] i_2_reg_348;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln18_fu_267_p2;
wire   [63:0] grp_fu_264_p1;
reg   [63:0] tmp_reg_358;
wire    ap_CS_fsm_state6;
wire   [63:0] grp_fu_259_p2;
reg   [63:0] tmp_2_reg_363;
wire    ap_CS_fsm_state12;
reg   [7:0] temp_real_addr_reg_368;
wire    ap_CS_fsm_state14;
reg   [7:0] temp_imag_addr_reg_373;
wire   [31:0] grp_fu_252_p1;
reg   [31:0] w_reg_378;
wire   [0:0] icmp_ln27_fu_290_p2;
reg   [0:0] icmp_ln27_reg_383;
reg   [0:0] icmp_ln27_reg_383_pp0_iter1_reg;
reg   [0:0] icmp_ln27_reg_383_pp0_iter2_reg;
reg   [0:0] icmp_ln27_reg_383_pp0_iter3_reg;
reg   [0:0] icmp_ln27_reg_383_pp0_iter4_reg;
reg   [0:0] icmp_ln27_reg_383_pp0_iter5_reg;
reg   [0:0] icmp_ln27_reg_383_pp0_iter6_reg;
reg   [0:0] icmp_ln27_reg_383_pp0_iter7_reg;
reg   [0:0] icmp_ln27_reg_383_pp0_iter8_reg;
wire   [8:0] j_fu_296_p2;
reg   [8:0] j_reg_387;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] grp_fu_249_p1;
reg   [31:0] tmp_3_reg_397;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state18_pp0_stage3_iter0;
wire    ap_block_state23_pp0_stage3_iter1;
wire    ap_block_state28_pp0_stage3_iter2;
wire    ap_block_state33_pp0_stage3_iter3;
wire    ap_block_state38_pp0_stage3_iter4;
wire    ap_block_state43_pp0_stage3_iter5;
wire    ap_block_state48_pp0_stage3_iter6;
wire    ap_block_state53_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_245_p2;
reg   [31:0] tmp_4_reg_402;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state17_pp0_stage2_iter0;
wire    ap_block_state22_pp0_stage2_iter1;
wire    ap_block_state27_pp0_stage2_iter2;
wire    ap_block_state32_pp0_stage2_iter3;
wire    ap_block_state37_pp0_stage2_iter4;
wire    ap_block_state42_pp0_stage2_iter5;
wire    ap_block_state47_pp0_stage2_iter6;
wire    ap_block_state52_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_11001;
wire   [63:0] grp_fu_255_p1;
reg   [63:0] x_assign_reg_407;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state19_pp0_stage4_iter0;
wire    ap_block_state24_pp0_stage4_iter1;
wire    ap_block_state29_pp0_stage4_iter2;
wire    ap_block_state34_pp0_stage4_iter3;
wire    ap_block_state39_pp0_stage4_iter4;
wire    ap_block_state44_pp0_stage4_iter5;
wire    ap_block_state49_pp0_stage4_iter6;
wire    ap_block_state54_pp0_stage4_iter7;
wire    ap_block_pp0_stage4_11001;
wire   [63:0] grp_sin_or_cos_double_s_fu_219_ap_return;
reg   [63:0] tmp_i_i_reg_412;
reg    ap_enable_reg_pp0_iter3;
reg   [63:0] tmp_i_i9_reg_417;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] c_reg_432;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state16_pp0_stage1_iter0;
wire    ap_block_state21_pp0_stage1_iter1;
wire    ap_block_state26_pp0_stage1_iter2;
wire    ap_block_state31_pp0_stage1_iter3;
wire    ap_block_state36_pp0_stage1_iter4;
wire    ap_block_state41_pp0_stage1_iter5;
wire    ap_block_state46_pp0_stage1_iter6;
wire    ap_block_state51_pp0_stage1_iter7;
wire    ap_block_state56_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] bitcast_ln30_1_fu_322_p1;
reg   [31:0] sample_real_load_reg_442;
reg   [31:0] sample_imag_load_reg_447;
reg   [31:0] s_reg_452;
reg   [31:0] tmp_9_reg_457;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] tmp_s_reg_462;
reg   [31:0] tmp_5_reg_467;
reg   [31:0] tmp_10_reg_472;
wire   [31:0] grp_fu_239_p2;
reg   [31:0] tmp_1_reg_477;
reg    ap_enable_reg_pp0_iter6;
reg   [31:0] tmp_11_reg_482;
reg   [31:0] tmp_8_reg_487;
reg    ap_enable_reg_pp0_iter7;
reg   [31:0] tmp_12_reg_493;
reg    ap_enable_reg_pp0_iter8;
wire   [8:0] i_fu_333_p2;
reg   [8:0] i_reg_502;
wire    ap_CS_fsm_state58;
wire   [63:0] zext_ln41_fu_339_p1;
reg   [63:0] zext_ln41_reg_507;
wire   [0:0] icmp_ln40_fu_327_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state15;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [7:0] temp_real_address0;
reg    temp_real_ce0;
reg    temp_real_we0;
reg   [31:0] temp_real_d0;
wire   [31:0] temp_real_q0;
reg   [7:0] temp_imag_address0;
reg    temp_imag_ce0;
reg    temp_imag_we0;
reg   [31:0] temp_imag_d0;
wire   [31:0] temp_imag_q0;
wire    grp_sin_or_cos_double_s_fu_219_ap_start;
wire    grp_sin_or_cos_double_s_fu_219_ap_done;
wire    grp_sin_or_cos_double_s_fu_219_ap_idle;
wire    grp_sin_or_cos_double_s_fu_219_ap_ready;
reg   [63:0] grp_sin_or_cos_double_s_fu_219_t_in;
reg    grp_sin_or_cos_double_s_fu_219_do_cos;
reg   [8:0] i_0_reg_160;
wire    ap_CS_fsm_state57;
reg   [31:0] ap_phi_mux_empty_41_phi_fu_176_p4;
wire    ap_block_pp0_stage1;
reg   [31:0] ap_phi_mux_empty_42_phi_fu_188_p4;
wire    ap_block_pp0_stage3;
reg   [8:0] ap_phi_mux_j_0_phi_fu_200_p4;
wire    ap_block_pp0_stage0;
reg   [8:0] i_1_reg_208;
wire    ap_CS_fsm_state59;
reg    grp_sin_or_cos_double_s_fu_219_ap_start_reg;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln19_fu_284_p1;
wire   [63:0] zext_ln34_fu_307_p1;
reg   [31:0] grp_fu_239_p0;
reg   [31:0] grp_fu_239_p1;
reg   [31:0] grp_fu_245_p0;
reg   [31:0] grp_fu_245_p1;
wire   [31:0] grp_fu_249_p0;
reg   [63:0] grp_fu_252_p0;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state7;
wire   [31:0] grp_fu_264_p0;
wire   [63:0] bitcast_ln30_fu_313_p1;
wire   [63:0] xor_ln30_fu_316_p2;
reg   [1:0] grp_fu_239_opcode;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
reg   [21:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_445;
reg    ap_condition_449;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_sin_or_cos_double_s_fu_219_ap_start_reg = 1'b0;
end

dft_temp_real #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
temp_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_real_address0),
    .ce0(temp_real_ce0),
    .we0(temp_real_we0),
    .d0(temp_real_d0),
    .q0(temp_real_q0)
);

dft_temp_real #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
temp_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_imag_address0),
    .ce0(temp_imag_ce0),
    .we0(temp_imag_we0),
    .d0(temp_imag_d0),
    .q0(temp_imag_q0)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_219(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_219_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_219_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_219_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_219_ap_ready),
    .ap_ce(1'b1),
    .t_in(grp_sin_or_cos_double_s_fu_219_t_in),
    .do_cos(grp_sin_or_cos_double_s_fu_219_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_219_ap_return)
);

dft_faddfsub_32nsibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dft_faddfsub_32nsibs_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_239_p0),
    .din1(grp_fu_239_p1),
    .opcode(grp_fu_239_opcode),
    .ce(1'b1),
    .dout(grp_fu_239_p2)
);

dft_fmul_32ns_32njbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dft_fmul_32ns_32njbC_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_245_p0),
    .din1(grp_fu_245_p1),
    .ce(1'b1),
    .dout(grp_fu_245_p2)
);

dft_sitofp_32ns_3kbM #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dft_sitofp_32ns_3kbM_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_249_p0),
    .ce(1'b1),
    .dout(grp_fu_249_p1)
);

dft_fptrunc_64ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
dft_fptrunc_64ns_lbW_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_252_p0),
    .ce(1'b1),
    .dout(grp_fu_252_p1)
);

dft_fpext_32ns_64mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
dft_fpext_32ns_64mb6_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_402),
    .ce(1'b1),
    .dout(grp_fu_255_p1)
);

dft_dmul_64ns_64nncg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nncg_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_358),
    .din1(64'd4582731459160450590),
    .ce(1'b1),
    .dout(grp_fu_259_p2)
);

dft_sitodp_32ns_6ocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
dft_sitodp_32ns_6ocq_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_264_p0),
    .ce(1'b1),
    .dout(grp_fu_264_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state15))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_219_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln27_reg_383_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln27_reg_383_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
            grp_sin_or_cos_double_s_fu_219_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_219_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_219_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_41_reg_172 <= tmp_12_reg_493;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        empty_41_reg_172 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        empty_42_reg_184 <= tmp_8_reg_487;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        empty_42_reg_184 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        i_0_reg_160 <= i_2_reg_348;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_160 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_208 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        i_1_reg_208 <= i_reg_502;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        j_0_reg_196 <= j_reg_387;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        j_0_reg_196 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        c_reg_432 <= grp_fu_252_p1;
        sample_imag_load_reg_447 <= sample_imag_q0;
        sample_real_load_reg_442 <= sample_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_348 <= i_2_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        i_reg_502 <= i_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln27_reg_383 <= icmp_ln27_fu_290_p2;
        icmp_ln27_reg_383_pp0_iter1_reg <= icmp_ln27_reg_383;
        icmp_ln27_reg_383_pp0_iter2_reg <= icmp_ln27_reg_383_pp0_iter1_reg;
        icmp_ln27_reg_383_pp0_iter3_reg <= icmp_ln27_reg_383_pp0_iter2_reg;
        icmp_ln27_reg_383_pp0_iter4_reg <= icmp_ln27_reg_383_pp0_iter3_reg;
        icmp_ln27_reg_383_pp0_iter5_reg <= icmp_ln27_reg_383_pp0_iter4_reg;
        icmp_ln27_reg_383_pp0_iter6_reg <= icmp_ln27_reg_383_pp0_iter5_reg;
        icmp_ln27_reg_383_pp0_iter7_reg <= icmp_ln27_reg_383_pp0_iter6_reg;
        icmp_ln27_reg_383_pp0_iter8_reg <= icmp_ln27_reg_383_pp0_iter7_reg;
        j_0_reg_196_pp0_iter1_reg <= j_0_reg_196;
        j_0_reg_196_pp0_iter2_reg <= j_0_reg_196_pp0_iter1_reg;
        j_0_reg_196_pp0_iter3_reg <= j_0_reg_196_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_387 <= j_fu_296_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        s_reg_452 <= grp_fu_252_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_imag_addr_reg_373 <= zext_ln19_fu_284_p1;
        temp_real_addr_reg_368 <= zext_ln19_fu_284_p1;
        w_reg_378 <= grp_fu_252_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_10_reg_472 <= grp_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_11_reg_482 <= grp_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        tmp_12_reg_493 <= grp_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_1_reg_477 <= grp_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_2_reg_363 <= grp_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_3_reg_397 <= grp_fu_249_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_4_reg_402 <= grp_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_5_reg_467 <= grp_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_8_reg_487 <= grp_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        tmp_9_reg_457 <= grp_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        tmp_i_i9_reg_417 <= grp_sin_or_cos_double_s_fu_219_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_i_i_reg_412 <= grp_sin_or_cos_double_s_fu_219_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_reg_358 <= grp_fu_264_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_s_reg_462 <= grp_fu_245_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_383_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        x_assign_reg_407 <= grp_fu_255_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state58))) begin
        zext_ln41_reg_507[8 : 0] <= zext_ln41_fu_339_p1[8 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln27_fu_290_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_327_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_383_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_mux_empty_41_phi_fu_176_p4 = tmp_12_reg_493;
    end else begin
        ap_phi_mux_empty_41_phi_fu_176_p4 = empty_41_reg_172;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_383_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_mux_empty_42_phi_fu_188_p4 = tmp_8_reg_487;
    end else begin
        ap_phi_mux_empty_42_phi_fu_188_p4 = empty_42_reg_184;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_383 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_j_0_phi_fu_200_p4 = j_reg_387;
    end else begin
        ap_phi_mux_j_0_phi_fu_200_p4 = j_0_reg_196;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_327_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_383_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_239_opcode = 2'd1;
    end else if ((((icmp_ln27_reg_383_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_00001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((icmp_ln27_reg_383_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln27_reg_383_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_239_opcode = 2'd0;
    end else begin
        grp_fu_239_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_239_p0 = ap_phi_mux_empty_41_phi_fu_176_p4;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_239_p0 = ap_phi_mux_empty_42_phi_fu_188_p4;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_239_p0 = tmp_5_reg_467;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_239_p0 = tmp_9_reg_457;
    end else begin
        grp_fu_239_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_239_p1 = tmp_11_reg_482;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_239_p1 = tmp_1_reg_477;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_239_p1 = tmp_10_reg_472;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_239_p1 = tmp_s_reg_462;
    end else begin
        grp_fu_239_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_245_p0 = sample_imag_load_reg_447;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_245_p0 = sample_real_load_reg_442;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_245_p0 = tmp_3_reg_397;
    end else begin
        grp_fu_245_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_245_p1 = s_reg_452;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_245_p1 = c_reg_432;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_245_p1 = w_reg_378;
    end else begin
        grp_fu_245_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_fu_252_p0 = bitcast_ln30_1_fu_322_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        grp_fu_252_p0 = tmp_i_i_reg_412;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_252_p0 = tmp_2_reg_363;
    end else begin
        grp_fu_252_p0 = 'bx;
    end
end

always @ (*) begin
    if ((icmp_ln27_reg_383_pp0_iter1_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_449)) begin
            grp_sin_or_cos_double_s_fu_219_do_cos = 1'd0;
        end else if ((1'b1 == ap_condition_445)) begin
            grp_sin_or_cos_double_s_fu_219_do_cos = 1'd1;
        end else begin
            grp_sin_or_cos_double_s_fu_219_do_cos = 'bx;
        end
    end else begin
        grp_sin_or_cos_double_s_fu_219_do_cos = 'bx;
    end
end

always @ (*) begin
    if ((icmp_ln27_reg_383_pp0_iter1_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_449)) begin
            grp_sin_or_cos_double_s_fu_219_t_in = x_assign_reg_407;
        end else if ((1'b1 == ap_condition_445)) begin
            grp_sin_or_cos_double_s_fu_219_t_in = grp_fu_255_p1;
        end else begin
            grp_sin_or_cos_double_s_fu_219_t_in = 'bx;
        end
    end else begin
        grp_sin_or_cos_double_s_fu_219_t_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        sample_imag_address0 = zext_ln41_reg_507;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        sample_imag_address0 = zext_ln34_fu_307_p1;
    end else begin
        sample_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        sample_imag_ce0 = 1'b1;
    end else begin
        sample_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        sample_imag_we0 = 1'b1;
    end else begin
        sample_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        sample_real_address0 = zext_ln41_reg_507;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        sample_real_address0 = zext_ln34_fu_307_p1;
    end else begin
        sample_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        sample_real_ce0 = 1'b1;
    end else begin
        sample_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        sample_real_we0 = 1'b1;
    end else begin
        sample_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        temp_imag_address0 = zext_ln41_fu_339_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        temp_imag_address0 = temp_imag_addr_reg_373;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_imag_address0 = zext_ln19_fu_284_p1;
    end else begin
        temp_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        temp_imag_ce0 = 1'b1;
    end else begin
        temp_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        temp_imag_d0 = tmp_12_reg_493;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_imag_d0 = 32'd0;
    end else begin
        temp_imag_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((icmp_ln27_reg_383_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        temp_imag_we0 = 1'b1;
    end else begin
        temp_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        temp_real_address0 = zext_ln41_fu_339_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        temp_real_address0 = temp_real_addr_reg_368;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_real_address0 = zext_ln19_fu_284_p1;
    end else begin
        temp_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state14) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        temp_real_ce0 = 1'b1;
    end else begin
        temp_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        temp_real_d0 = tmp_8_reg_487;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_real_d0 = 32'd0;
    end else begin
        temp_real_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((icmp_ln27_reg_383_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        temp_real_we0 = 1'b1;
    end else begin
        temp_real_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln18_fu_267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln27_fu_290_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln27_fu_290_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state58 : begin
            if (((icmp_ln40_fu_327_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_445 = ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_449 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln30_1_fu_322_p1 = xor_ln30_fu_316_p2;

assign bitcast_ln30_fu_313_p1 = tmp_i_i9_reg_417;

assign grp_fu_249_p0 = ap_phi_mux_j_0_phi_fu_200_p4;

assign grp_fu_264_p0 = i_0_reg_160;

assign grp_sin_or_cos_double_s_fu_219_ap_start = grp_sin_or_cos_double_s_fu_219_ap_start_reg;

assign i_2_fu_273_p2 = (i_0_reg_160 + 9'd1);

assign i_fu_333_p2 = (i_1_reg_208 + 9'd1);

assign icmp_ln18_fu_267_p2 = ((i_0_reg_160 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_290_p2 = ((ap_phi_mux_j_0_phi_fu_200_p4 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_327_p2 = ((i_1_reg_208 == 9'd256) ? 1'b1 : 1'b0);

assign j_fu_296_p2 = (ap_phi_mux_j_0_phi_fu_200_p4 + 9'd1);

assign sample_imag_d0 = temp_imag_q0;

assign sample_real_d0 = temp_real_q0;

assign xor_ln30_fu_316_p2 = (bitcast_ln30_fu_313_p1 ^ 64'd9223372036854775808);

assign zext_ln19_fu_284_p1 = i_0_reg_160;

assign zext_ln34_fu_307_p1 = j_0_reg_196_pp0_iter3_reg;

assign zext_ln41_fu_339_p1 = i_1_reg_208;

always @ (posedge ap_clk) begin
    zext_ln41_reg_507[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //dft
