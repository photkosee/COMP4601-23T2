// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dft.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dft::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dft::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<43> dft::ap_ST_fsm_state1 = "1";
const sc_lv<43> dft::ap_ST_fsm_state2 = "10";
const sc_lv<43> dft::ap_ST_fsm_state3 = "100";
const sc_lv<43> dft::ap_ST_fsm_state4 = "1000";
const sc_lv<43> dft::ap_ST_fsm_state5 = "10000";
const sc_lv<43> dft::ap_ST_fsm_state6 = "100000";
const sc_lv<43> dft::ap_ST_fsm_state7 = "1000000";
const sc_lv<43> dft::ap_ST_fsm_state8 = "10000000";
const sc_lv<43> dft::ap_ST_fsm_state9 = "100000000";
const sc_lv<43> dft::ap_ST_fsm_state10 = "1000000000";
const sc_lv<43> dft::ap_ST_fsm_state11 = "10000000000";
const sc_lv<43> dft::ap_ST_fsm_state12 = "100000000000";
const sc_lv<43> dft::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<43> dft::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<43> dft::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<43> dft::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<43> dft::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<32> dft::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dft::ap_const_lv32_15 = "10101";
const sc_lv<32> dft::ap_const_lv32_1D = "11101";
const sc_lv<32> dft::ap_const_lv32_22 = "100010";
const sc_lv<32> dft::ap_const_lv32_27 = "100111";
const sc_lv<32> dft::ap_const_lv32_1 = "1";
const sc_lv<32> dft::ap_const_lv32_5 = "101";
const sc_lv<32> dft::ap_const_lv32_B = "1011";
const sc_lv<32> dft::ap_const_lv32_D = "1101";
const sc_lv<32> dft::ap_const_lv32_E = "1110";
const sc_lv<32> dft::ap_const_lv32_11 = "10001";
const sc_lv<32> dft::ap_const_lv32_17 = "10111";
const sc_lv<32> dft::ap_const_lv32_18 = "11000";
const bool dft::ap_const_boolean_0 = false;
const sc_lv<32> dft::ap_const_lv32_19 = "11001";
const sc_lv<32> dft::ap_const_lv32_1A = "11010";
const sc_lv<32> dft::ap_const_lv32_29 = "101001";
const sc_lv<1> dft::ap_const_lv1_0 = "0";
const sc_lv<9> dft::ap_const_lv9_0 = "000000000";
const sc_lv<1> dft::ap_const_lv1_1 = "1";
const sc_lv<32> dft::ap_const_lv32_28 = "101000";
const sc_lv<32> dft::ap_const_lv32_2A = "101010";
const sc_lv<32> dft::ap_const_lv32_1E = "11110";
const sc_lv<32> dft::ap_const_lv32_23 = "100011";
const sc_lv<32> dft::ap_const_lv32_12 = "10010";
const sc_lv<32> dft::ap_const_lv32_C = "1100";
const sc_lv<32> dft::ap_const_lv32_16 = "10110";
const sc_lv<64> dft::ap_const_lv64_3F9921FB5444261E = "11111110011001001000011111101101010100010001000010011000011110";
const sc_lv<32> dft::ap_const_lv32_6 = "110";
const sc_lv<9> dft::ap_const_lv9_100 = "100000000";
const sc_lv<9> dft::ap_const_lv9_1 = "1";
const sc_lv<64> dft::ap_const_lv64_8000000000000000 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<2> dft::ap_const_lv2_0 = "00";
const sc_lv<2> dft::ap_const_lv2_1 = "1";
const bool dft::ap_const_boolean_1 = true;

dft::dft(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp_real_U = new dft_temp_real("temp_real_U");
    temp_real_U->clk(ap_clk);
    temp_real_U->reset(ap_rst);
    temp_real_U->address0(temp_real_address0);
    temp_real_U->ce0(temp_real_ce0);
    temp_real_U->we0(temp_real_we0);
    temp_real_U->d0(temp_real_d0);
    temp_real_U->q0(temp_real_q0);
    temp_imag_U = new dft_temp_real("temp_imag_U");
    temp_imag_U->clk(ap_clk);
    temp_imag_U->reset(ap_rst);
    temp_imag_U->address0(temp_imag_address0);
    temp_imag_U->ce0(temp_imag_ce0);
    temp_imag_U->we0(temp_imag_we0);
    temp_imag_U->d0(temp_imag_d0);
    temp_imag_U->q0(temp_imag_q0);
    grp_sin_or_cos_double_s_fu_209 = new sin_or_cos_double_s("grp_sin_or_cos_double_s_fu_209");
    grp_sin_or_cos_double_s_fu_209->ap_clk(ap_clk);
    grp_sin_or_cos_double_s_fu_209->ap_rst(ap_rst);
    grp_sin_or_cos_double_s_fu_209->ap_start(grp_sin_or_cos_double_s_fu_209_ap_start);
    grp_sin_or_cos_double_s_fu_209->ap_done(grp_sin_or_cos_double_s_fu_209_ap_done);
    grp_sin_or_cos_double_s_fu_209->ap_idle(grp_sin_or_cos_double_s_fu_209_ap_idle);
    grp_sin_or_cos_double_s_fu_209->ap_ready(grp_sin_or_cos_double_s_fu_209_ap_ready);
    grp_sin_or_cos_double_s_fu_209->t_in(x_assign_reg_455);
    grp_sin_or_cos_double_s_fu_209->do_cos(grp_sin_or_cos_double_s_fu_209_do_cos);
    grp_sin_or_cos_double_s_fu_209->ap_return(grp_sin_or_cos_double_s_fu_209_ap_return);
    grp_sin_or_cos_double_s_fu_228 = new sin_or_cos_double_s("grp_sin_or_cos_double_s_fu_228");
    grp_sin_or_cos_double_s_fu_228->ap_clk(ap_clk);
    grp_sin_or_cos_double_s_fu_228->ap_rst(ap_rst);
    grp_sin_or_cos_double_s_fu_228->ap_start(grp_sin_or_cos_double_s_fu_228_ap_start);
    grp_sin_or_cos_double_s_fu_228->ap_done(grp_sin_or_cos_double_s_fu_228_ap_done);
    grp_sin_or_cos_double_s_fu_228->ap_idle(grp_sin_or_cos_double_s_fu_228_ap_idle);
    grp_sin_or_cos_double_s_fu_228->ap_ready(grp_sin_or_cos_double_s_fu_228_ap_ready);
    grp_sin_or_cos_double_s_fu_228->t_in(x_assign_reg_455);
    grp_sin_or_cos_double_s_fu_228->do_cos(grp_sin_or_cos_double_s_fu_228_do_cos);
    grp_sin_or_cos_double_s_fu_228->ap_return(grp_sin_or_cos_double_s_fu_228_ap_return);
    dft_faddfsub_32nsibs_U22 = new dft_faddfsub_32nsibs<1,5,32,32,32>("dft_faddfsub_32nsibs_U22");
    dft_faddfsub_32nsibs_U22->clk(ap_clk);
    dft_faddfsub_32nsibs_U22->reset(ap_rst);
    dft_faddfsub_32nsibs_U22->din0(grp_fu_247_p0);
    dft_faddfsub_32nsibs_U22->din1(grp_fu_247_p1);
    dft_faddfsub_32nsibs_U22->opcode(grp_fu_247_opcode);
    dft_faddfsub_32nsibs_U22->ce(ap_var_for_const0);
    dft_faddfsub_32nsibs_U22->dout(grp_fu_247_p2);
    dft_fadd_32ns_32njbC_U23 = new dft_fadd_32ns_32njbC<1,5,32,32,32>("dft_fadd_32ns_32njbC_U23");
    dft_fadd_32ns_32njbC_U23->clk(ap_clk);
    dft_fadd_32ns_32njbC_U23->reset(ap_rst);
    dft_fadd_32ns_32njbC_U23->din0(grp_fu_251_p0);
    dft_fadd_32ns_32njbC_U23->din1(grp_fu_251_p1);
    dft_fadd_32ns_32njbC_U23->ce(ap_var_for_const0);
    dft_fadd_32ns_32njbC_U23->dout(grp_fu_251_p2);
    dft_fmul_32ns_32nkbM_U24 = new dft_fmul_32ns_32nkbM<1,4,32,32,32>("dft_fmul_32ns_32nkbM_U24");
    dft_fmul_32ns_32nkbM_U24->clk(ap_clk);
    dft_fmul_32ns_32nkbM_U24->reset(ap_rst);
    dft_fmul_32ns_32nkbM_U24->din0(grp_fu_257_p0);
    dft_fmul_32ns_32nkbM_U24->din1(grp_fu_257_p1);
    dft_fmul_32ns_32nkbM_U24->ce(ap_var_for_const0);
    dft_fmul_32ns_32nkbM_U24->dout(grp_fu_257_p2);
    dft_fmul_32ns_32nkbM_U25 = new dft_fmul_32ns_32nkbM<1,4,32,32,32>("dft_fmul_32ns_32nkbM_U25");
    dft_fmul_32ns_32nkbM_U25->clk(ap_clk);
    dft_fmul_32ns_32nkbM_U25->reset(ap_rst);
    dft_fmul_32ns_32nkbM_U25->din0(sample_imag_q0);
    dft_fmul_32ns_32nkbM_U25->din1(s_reg_477);
    dft_fmul_32ns_32nkbM_U25->ce(ap_var_for_const0);
    dft_fmul_32ns_32nkbM_U25->dout(grp_fu_262_p2);
    dft_fmul_32ns_32nkbM_U26 = new dft_fmul_32ns_32nkbM<1,4,32,32,32>("dft_fmul_32ns_32nkbM_U26");
    dft_fmul_32ns_32nkbM_U26->clk(ap_clk);
    dft_fmul_32ns_32nkbM_U26->reset(ap_rst);
    dft_fmul_32ns_32nkbM_U26->din0(sample_real_q0);
    dft_fmul_32ns_32nkbM_U26->din1(s_reg_477);
    dft_fmul_32ns_32nkbM_U26->ce(ap_var_for_const0);
    dft_fmul_32ns_32nkbM_U26->dout(grp_fu_267_p2);
    dft_fmul_32ns_32nkbM_U27 = new dft_fmul_32ns_32nkbM<1,4,32,32,32>("dft_fmul_32ns_32nkbM_U27");
    dft_fmul_32ns_32nkbM_U27->clk(ap_clk);
    dft_fmul_32ns_32nkbM_U27->reset(ap_rst);
    dft_fmul_32ns_32nkbM_U27->din0(sample_imag_q0);
    dft_fmul_32ns_32nkbM_U27->din1(c_reg_471);
    dft_fmul_32ns_32nkbM_U27->ce(ap_var_for_const0);
    dft_fmul_32ns_32nkbM_U27->dout(grp_fu_272_p2);
    dft_sitofp_32ns_3lbW_U28 = new dft_sitofp_32ns_3lbW<1,4,32,32>("dft_sitofp_32ns_3lbW_U28");
    dft_sitofp_32ns_3lbW_U28->clk(ap_clk);
    dft_sitofp_32ns_3lbW_U28->reset(ap_rst);
    dft_sitofp_32ns_3lbW_U28->din0(grp_fu_277_p0);
    dft_sitofp_32ns_3lbW_U28->ce(ap_var_for_const0);
    dft_sitofp_32ns_3lbW_U28->dout(grp_fu_277_p1);
    dft_fptrunc_64ns_mb6_U29 = new dft_fptrunc_64ns_mb6<1,2,64,32>("dft_fptrunc_64ns_mb6_U29");
    dft_fptrunc_64ns_mb6_U29->clk(ap_clk);
    dft_fptrunc_64ns_mb6_U29->reset(ap_rst);
    dft_fptrunc_64ns_mb6_U29->din0(grp_fu_280_p0);
    dft_fptrunc_64ns_mb6_U29->ce(grp_fu_280_ce);
    dft_fptrunc_64ns_mb6_U29->dout(grp_fu_280_p1);
    dft_fptrunc_64ns_mb6_U30 = new dft_fptrunc_64ns_mb6<1,2,64,32>("dft_fptrunc_64ns_mb6_U30");
    dft_fptrunc_64ns_mb6_U30->clk(ap_clk);
    dft_fptrunc_64ns_mb6_U30->reset(ap_rst);
    dft_fptrunc_64ns_mb6_U30->din0(grp_fu_284_p0);
    dft_fptrunc_64ns_mb6_U30->ce(grp_fu_284_ce);
    dft_fptrunc_64ns_mb6_U30->dout(grp_fu_284_p1);
    dft_fpext_32ns_64ncg_U31 = new dft_fpext_32ns_64ncg<1,2,32,64>("dft_fpext_32ns_64ncg_U31");
    dft_fpext_32ns_64ncg_U31->clk(ap_clk);
    dft_fpext_32ns_64ncg_U31->reset(ap_rst);
    dft_fpext_32ns_64ncg_U31->din0(reg_300);
    dft_fpext_32ns_64ncg_U31->ce(ap_var_for_const0);
    dft_fpext_32ns_64ncg_U31->dout(grp_fu_287_p1);
    dft_dmul_64ns_64nocq_U32 = new dft_dmul_64ns_64nocq<1,6,64,64,64>("dft_dmul_64ns_64nocq_U32");
    dft_dmul_64ns_64nocq_U32->clk(ap_clk);
    dft_dmul_64ns_64nocq_U32->reset(ap_rst);
    dft_dmul_64ns_64nocq_U32->din0(tmp_reg_412);
    dft_dmul_64ns_64nocq_U32->din1(ap_var_for_const1);
    dft_dmul_64ns_64nocq_U32->ce(ap_var_for_const0);
    dft_dmul_64ns_64nocq_U32->dout(grp_fu_292_p2);
    dft_sitodp_32ns_6pcA_U33 = new dft_sitodp_32ns_6pcA<1,5,32,64>("dft_sitodp_32ns_6pcA_U33");
    dft_sitodp_32ns_6pcA_U33->clk(ap_clk);
    dft_sitodp_32ns_6pcA_U33->reset(ap_rst);
    dft_sitodp_32ns_6pcA_U33->din0(grp_fu_297_p0);
    dft_sitodp_32ns_6pcA_U33->ce(ap_var_for_const0);
    dft_sitodp_32ns_6pcA_U33->dout(grp_fu_297_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state25_on_subcall_done);
    sensitive << ( grp_sin_or_cos_double_s_fu_209_ap_done );
    sensitive << ( grp_sin_or_cos_double_s_fu_228_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( icmp_ln40_fu_381_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( icmp_ln40_fu_381_p2 );

    SC_METHOD(thread_bitcast_ln30_fu_360_p1);
    sensitive << ( grp_sin_or_cos_double_s_fu_228_ap_return );

    SC_METHOD(thread_grp_fu_247_opcode);
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_fu_247_p0);
    sensitive << ( reg_300 );
    sensitive << ( empty_44_reg_174 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_fu_247_p1);
    sensitive << ( reg_306 );
    sensitive << ( tmp_s_reg_505 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_fu_251_p0);
    sensitive << ( tmp_7_reg_510 );
    sensitive << ( empty_43_reg_162 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_fu_251_p1);
    sensitive << ( reg_313 );
    sensitive << ( tmp_5_reg_515 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_fu_257_p0);
    sensitive << ( sample_real_q0 );
    sensitive << ( tmp_3_reg_450 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_257_p1);
    sensitive << ( w_reg_432 );
    sensitive << ( c_reg_471 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_277_p0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( j_0_reg_186 );

    SC_METHOD(thread_grp_fu_280_ce);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_block_state25_on_subcall_done );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_280_p0);
    sensitive << ( tmp_2_reg_417 );
    sensitive << ( grp_sin_or_cos_double_s_fu_209_ap_return );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_284_ce);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_block_state25_on_subcall_done );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_fu_284_p0);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( xor_ln30_fu_364_p2 );

    SC_METHOD(thread_grp_fu_297_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_150 );

    SC_METHOD(thread_grp_sin_or_cos_double_s_fu_209_ap_start);
    sensitive << ( grp_sin_or_cos_double_s_fu_209_ap_start_reg );

    SC_METHOD(thread_grp_sin_or_cos_double_s_fu_209_do_cos);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_grp_sin_or_cos_double_s_fu_228_ap_start);
    sensitive << ( grp_sin_or_cos_double_s_fu_228_ap_start_reg );

    SC_METHOD(thread_grp_sin_or_cos_double_s_fu_228_do_cos);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_i_3_fu_331_p2);
    sensitive << ( i_0_reg_150 );

    SC_METHOD(thread_i_fu_387_p2);
    sensitive << ( i_1_reg_198 );

    SC_METHOD(thread_icmp_ln18_fu_325_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_150 );

    SC_METHOD(thread_icmp_ln27_fu_348_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( j_0_reg_186 );

    SC_METHOD(thread_icmp_ln40_fu_381_p2);
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( i_1_reg_198 );

    SC_METHOD(thread_j_fu_354_p2);
    sensitive << ( j_0_reg_186 );

    SC_METHOD(thread_sample_imag_address0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( zext_ln41_reg_528 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( zext_ln34_fu_375_p1 );

    SC_METHOD(thread_sample_imag_ce0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sample_imag_d0);
    sensitive << ( temp_imag_q0 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sample_imag_we0);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sample_real_address0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( zext_ln41_reg_528 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( zext_ln34_fu_375_p1 );

    SC_METHOD(thread_sample_real_ce0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sample_real_d0);
    sensitive << ( temp_real_q0 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sample_real_we0);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_temp_imag_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( temp_imag_addr_reg_427 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( zext_ln41_fu_393_p1 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( zext_ln19_fu_337_p1 );

    SC_METHOD(thread_temp_imag_ce0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_temp_imag_d0);
    sensitive << ( reg_313 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_temp_imag_we0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_temp_real_address0);
    sensitive << ( temp_real_addr_reg_422 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( zext_ln41_fu_393_p1 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( zext_ln19_fu_337_p1 );

    SC_METHOD(thread_temp_real_ce0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_temp_real_d0);
    sensitive << ( reg_306 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_temp_real_we0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_xor_ln30_fu_364_p2);
    sensitive << ( bitcast_ln30_fu_360_p1 );

    SC_METHOD(thread_zext_ln19_fu_337_p1);
    sensitive << ( i_0_reg_150 );

    SC_METHOD(thread_zext_ln34_fu_375_p1);
    sensitive << ( j_0_reg_186 );

    SC_METHOD(thread_zext_ln41_fu_393_p1);
    sensitive << ( i_1_reg_198 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_block_state25_on_subcall_done );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( icmp_ln40_fu_381_p2 );
    sensitive << ( icmp_ln27_fu_348_p2 );
    sensitive << ( icmp_ln18_fu_325_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000000000000000000000000000000000000001";
    grp_sin_or_cos_double_s_fu_209_ap_start_reg = SC_LOGIC_0;
    grp_sin_or_cos_double_s_fu_228_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dft_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, sample_real_address0, "(port)sample_real_address0");
    sc_trace(mVcdFile, sample_real_ce0, "(port)sample_real_ce0");
    sc_trace(mVcdFile, sample_real_we0, "(port)sample_real_we0");
    sc_trace(mVcdFile, sample_real_d0, "(port)sample_real_d0");
    sc_trace(mVcdFile, sample_real_q0, "(port)sample_real_q0");
    sc_trace(mVcdFile, sample_imag_address0, "(port)sample_imag_address0");
    sc_trace(mVcdFile, sample_imag_ce0, "(port)sample_imag_ce0");
    sc_trace(mVcdFile, sample_imag_we0, "(port)sample_imag_we0");
    sc_trace(mVcdFile, sample_imag_d0, "(port)sample_imag_d0");
    sc_trace(mVcdFile, sample_imag_q0, "(port)sample_imag_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_257_p2, "grp_fu_257_p2");
    sc_trace(mVcdFile, reg_300, "reg_300");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, grp_fu_247_p2, "grp_fu_247_p2");
    sc_trace(mVcdFile, reg_306, "reg_306");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, grp_fu_251_p2, "grp_fu_251_p2");
    sc_trace(mVcdFile, reg_313, "reg_313");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_3_fu_331_p2, "i_3_fu_331_p2");
    sc_trace(mVcdFile, i_3_reg_407, "i_3_reg_407");
    sc_trace(mVcdFile, grp_fu_297_p1, "grp_fu_297_p1");
    sc_trace(mVcdFile, tmp_reg_412, "tmp_reg_412");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_292_p2, "grp_fu_292_p2");
    sc_trace(mVcdFile, tmp_2_reg_417, "tmp_2_reg_417");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, temp_real_addr_reg_422, "temp_real_addr_reg_422");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, temp_imag_addr_reg_427, "temp_imag_addr_reg_427");
    sc_trace(mVcdFile, grp_fu_280_p1, "grp_fu_280_p1");
    sc_trace(mVcdFile, w_reg_432, "w_reg_432");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, j_fu_354_p2, "j_fu_354_p2");
    sc_trace(mVcdFile, j_reg_445, "j_reg_445");
    sc_trace(mVcdFile, grp_fu_277_p1, "grp_fu_277_p1");
    sc_trace(mVcdFile, tmp_3_reg_450, "tmp_3_reg_450");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_287_p1, "grp_fu_287_p1");
    sc_trace(mVcdFile, x_assign_reg_455, "x_assign_reg_455");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_209_ap_return, "grp_sin_or_cos_double_s_fu_209_ap_return");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_209_ap_ready, "grp_sin_or_cos_double_s_fu_209_ap_ready");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_209_ap_done, "grp_sin_or_cos_double_s_fu_209_ap_done");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_228_ap_ready, "grp_sin_or_cos_double_s_fu_228_ap_ready");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_228_ap_done, "grp_sin_or_cos_double_s_fu_228_ap_done");
    sc_trace(mVcdFile, ap_block_state25_on_subcall_done, "ap_block_state25_on_subcall_done");
    sc_trace(mVcdFile, c_reg_471, "c_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, grp_fu_284_p1, "grp_fu_284_p1");
    sc_trace(mVcdFile, s_reg_477, "s_reg_477");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, grp_fu_262_p2, "grp_fu_262_p2");
    sc_trace(mVcdFile, tmp_s_reg_505, "tmp_s_reg_505");
    sc_trace(mVcdFile, grp_fu_267_p2, "grp_fu_267_p2");
    sc_trace(mVcdFile, tmp_7_reg_510, "tmp_7_reg_510");
    sc_trace(mVcdFile, grp_fu_272_p2, "grp_fu_272_p2");
    sc_trace(mVcdFile, tmp_5_reg_515, "tmp_5_reg_515");
    sc_trace(mVcdFile, i_fu_387_p2, "i_fu_387_p2");
    sc_trace(mVcdFile, i_reg_523, "i_reg_523");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, zext_ln41_fu_393_p1, "zext_ln41_fu_393_p1");
    sc_trace(mVcdFile, zext_ln41_reg_528, "zext_ln41_reg_528");
    sc_trace(mVcdFile, icmp_ln40_fu_381_p2, "icmp_ln40_fu_381_p2");
    sc_trace(mVcdFile, temp_real_address0, "temp_real_address0");
    sc_trace(mVcdFile, temp_real_ce0, "temp_real_ce0");
    sc_trace(mVcdFile, temp_real_we0, "temp_real_we0");
    sc_trace(mVcdFile, temp_real_d0, "temp_real_d0");
    sc_trace(mVcdFile, temp_real_q0, "temp_real_q0");
    sc_trace(mVcdFile, temp_imag_address0, "temp_imag_address0");
    sc_trace(mVcdFile, temp_imag_ce0, "temp_imag_ce0");
    sc_trace(mVcdFile, temp_imag_we0, "temp_imag_we0");
    sc_trace(mVcdFile, temp_imag_d0, "temp_imag_d0");
    sc_trace(mVcdFile, temp_imag_q0, "temp_imag_q0");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_209_ap_start, "grp_sin_or_cos_double_s_fu_209_ap_start");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_209_ap_idle, "grp_sin_or_cos_double_s_fu_209_ap_idle");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_209_do_cos, "grp_sin_or_cos_double_s_fu_209_do_cos");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_228_ap_start, "grp_sin_or_cos_double_s_fu_228_ap_start");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_228_ap_idle, "grp_sin_or_cos_double_s_fu_228_ap_idle");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_228_do_cos, "grp_sin_or_cos_double_s_fu_228_do_cos");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_228_ap_return, "grp_sin_or_cos_double_s_fu_228_ap_return");
    sc_trace(mVcdFile, i_0_reg_150, "i_0_reg_150");
    sc_trace(mVcdFile, icmp_ln27_fu_348_p2, "icmp_ln27_fu_348_p2");
    sc_trace(mVcdFile, empty_43_reg_162, "empty_43_reg_162");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, empty_44_reg_174, "empty_44_reg_174");
    sc_trace(mVcdFile, j_0_reg_186, "j_0_reg_186");
    sc_trace(mVcdFile, i_1_reg_198, "i_1_reg_198");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, icmp_ln18_fu_325_p2, "icmp_ln18_fu_325_p2");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_209_ap_start_reg, "grp_sin_or_cos_double_s_fu_209_ap_start_reg");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_228_ap_start_reg, "grp_sin_or_cos_double_s_fu_228_ap_start_reg");
    sc_trace(mVcdFile, zext_ln19_fu_337_p1, "zext_ln19_fu_337_p1");
    sc_trace(mVcdFile, zext_ln34_fu_375_p1, "zext_ln34_fu_375_p1");
    sc_trace(mVcdFile, grp_fu_247_p0, "grp_fu_247_p0");
    sc_trace(mVcdFile, grp_fu_247_p1, "grp_fu_247_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, grp_fu_251_p0, "grp_fu_251_p0");
    sc_trace(mVcdFile, grp_fu_251_p1, "grp_fu_251_p1");
    sc_trace(mVcdFile, grp_fu_257_p0, "grp_fu_257_p0");
    sc_trace(mVcdFile, grp_fu_257_p1, "grp_fu_257_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_fu_277_p0, "grp_fu_277_p0");
    sc_trace(mVcdFile, grp_fu_280_p0, "grp_fu_280_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_284_p0, "grp_fu_284_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_297_p0, "grp_fu_297_p0");
    sc_trace(mVcdFile, bitcast_ln30_fu_360_p1, "bitcast_ln30_fu_360_p1");
    sc_trace(mVcdFile, xor_ln30_fu_364_p2, "xor_ln30_fu_364_p2");
    sc_trace(mVcdFile, grp_fu_247_opcode, "grp_fu_247_opcode");
    sc_trace(mVcdFile, grp_fu_280_ce, "grp_fu_280_ce");
    sc_trace(mVcdFile, grp_fu_284_ce, "grp_fu_284_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("dft.hdltvin.dat");
    mHdltvoutHandle.open("dft.hdltvout.dat");
}

dft::~dft() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete temp_real_U;
    delete temp_imag_U;
    delete grp_sin_or_cos_double_s_fu_209;
    delete grp_sin_or_cos_double_s_fu_228;
    delete dft_faddfsub_32nsibs_U22;
    delete dft_fadd_32ns_32njbC_U23;
    delete dft_fmul_32ns_32nkbM_U24;
    delete dft_fmul_32ns_32nkbM_U25;
    delete dft_fmul_32ns_32nkbM_U26;
    delete dft_fmul_32ns_32nkbM_U27;
    delete dft_sitofp_32ns_3lbW_U28;
    delete dft_fptrunc_64ns_mb6_U29;
    delete dft_fptrunc_64ns_mb6_U30;
    delete dft_fpext_32ns_64ncg_U31;
    delete dft_dmul_64ns_64nocq_U32;
    delete dft_sitodp_32ns_6pcA_U33;
}

void dft::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dft::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_3F9921FB5444261E;
}

void dft::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        empty_43_reg_162 = reg_313.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        empty_43_reg_162 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        empty_44_reg_174 = reg_306.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        empty_44_reg_174 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sin_or_cos_double_s_fu_209_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
            grp_sin_or_cos_double_s_fu_209_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sin_or_cos_double_s_fu_209_ap_ready.read())) {
            grp_sin_or_cos_double_s_fu_209_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sin_or_cos_double_s_fu_228_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
            grp_sin_or_cos_double_s_fu_228_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sin_or_cos_double_s_fu_228_ap_ready.read())) {
            grp_sin_or_cos_double_s_fu_228_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(icmp_ln27_fu_348_p2.read(), ap_const_lv1_1))) {
        i_0_reg_150 = i_3_reg_407.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_150 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln18_fu_325_p2.read()))) {
        i_1_reg_198 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        i_1_reg_198 = i_reg_523.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        j_0_reg_186 = j_reg_445.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        j_0_reg_186 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        c_reg_471 = grp_fu_280_p1.read();
        s_reg_477 = grp_fu_284_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_3_reg_407 = i_3_fu_331_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        i_reg_523 = i_fu_387_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        j_reg_445 = j_fu_354_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        reg_300 = grp_fu_257_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        reg_306 = grp_fu_247_p2.read();
        reg_313 = grp_fu_251_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        temp_imag_addr_reg_427 =  (sc_lv<8>) (zext_ln19_fu_337_p1.read());
        temp_real_addr_reg_422 =  (sc_lv<8>) (zext_ln19_fu_337_p1.read());
        w_reg_432 = grp_fu_280_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_2_reg_417 = grp_fu_292_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        tmp_3_reg_450 = grp_fu_277_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        tmp_5_reg_515 = grp_fu_272_p2.read();
        tmp_7_reg_510 = grp_fu_267_p2.read();
        tmp_s_reg_505 = grp_fu_262_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_reg_412 = grp_fu_297_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        x_assign_reg_455 = grp_fu_287_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(icmp_ln40_fu_381_p2.read(), ap_const_lv1_0))) {
        zext_ln41_reg_528 = zext_ln41_fu_393_p1.read();
    }
}

void dft::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dft::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void dft::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void dft::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void dft::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void dft::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void dft::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void dft::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dft::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void dft::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void dft::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void dft::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void dft::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void dft::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void dft::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void dft::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void dft::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void dft::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void dft::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void dft::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void dft::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void dft::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void dft::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dft::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dft::thread_ap_block_state25_on_subcall_done() {
    ap_block_state25_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_sin_or_cos_double_s_fu_209_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_sin_or_cos_double_s_fu_228_ap_done.read()));
}

void dft::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_381_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dft::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dft::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_381_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dft::thread_bitcast_ln30_fu_360_p1() {
    bitcast_ln30_fu_360_p1 = grp_sin_or_cos_double_s_fu_228_ap_return.read();
}

void dft::thread_grp_fu_247_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_247_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_247_opcode = ap_const_lv2_0;
    } else {
        grp_fu_247_opcode =  (sc_lv<2>) ("XX");
    }
}

void dft::thread_grp_fu_247_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_247_p0 = empty_44_reg_174.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_247_p0 = reg_300.read();
    } else {
        grp_fu_247_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dft::thread_grp_fu_247_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_247_p1 = reg_306.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_247_p1 = tmp_s_reg_505.read();
    } else {
        grp_fu_247_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dft::thread_grp_fu_251_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_251_p0 = empty_43_reg_162.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_251_p0 = tmp_7_reg_510.read();
    } else {
        grp_fu_251_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dft::thread_grp_fu_251_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_251_p1 = reg_313.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_251_p1 = tmp_5_reg_515.read();
    } else {
        grp_fu_251_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dft::thread_grp_fu_257_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_257_p0 = sample_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_257_p0 = tmp_3_reg_450.read();
    } else {
        grp_fu_257_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dft::thread_grp_fu_257_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_257_p1 = c_reg_471.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_257_p1 = w_reg_432.read();
    } else {
        grp_fu_257_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dft::thread_grp_fu_277_p0() {
    grp_fu_277_p0 = esl_zext<32,9>(j_0_reg_186.read());
}

void dft::thread_grp_fu_280_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(ap_block_state25_on_subcall_done.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        grp_fu_280_ce = ap_const_logic_1;
    } else {
        grp_fu_280_ce = ap_const_logic_0;
    }
}

void dft::thread_grp_fu_280_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        grp_fu_280_p0 = grp_sin_or_cos_double_s_fu_209_ap_return.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_280_p0 = tmp_2_reg_417.read();
    } else {
        grp_fu_280_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dft::thread_grp_fu_284_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(ap_block_state25_on_subcall_done.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        grp_fu_284_ce = ap_const_logic_1;
    } else {
        grp_fu_284_ce = ap_const_logic_0;
    }
}

void dft::thread_grp_fu_284_p0() {
    grp_fu_284_p0 = xor_ln30_fu_364_p2.read();
}

void dft::thread_grp_fu_297_p0() {
    grp_fu_297_p0 = esl_zext<32,9>(i_0_reg_150.read());
}

void dft::thread_grp_sin_or_cos_double_s_fu_209_ap_start() {
    grp_sin_or_cos_double_s_fu_209_ap_start = grp_sin_or_cos_double_s_fu_209_ap_start_reg.read();
}

void dft::thread_grp_sin_or_cos_double_s_fu_209_do_cos() {
    grp_sin_or_cos_double_s_fu_209_do_cos =  (sc_logic) (ap_const_lv1_1[0]);
}

void dft::thread_grp_sin_or_cos_double_s_fu_228_ap_start() {
    grp_sin_or_cos_double_s_fu_228_ap_start = grp_sin_or_cos_double_s_fu_228_ap_start_reg.read();
}

void dft::thread_grp_sin_or_cos_double_s_fu_228_do_cos() {
    grp_sin_or_cos_double_s_fu_228_do_cos =  (sc_logic) (ap_const_lv1_0[0]);
}

void dft::thread_i_3_fu_331_p2() {
    i_3_fu_331_p2 = (!i_0_reg_150.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_150.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void dft::thread_i_fu_387_p2() {
    i_fu_387_p2 = (!i_1_reg_198.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_1_reg_198.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void dft::thread_icmp_ln18_fu_325_p2() {
    icmp_ln18_fu_325_p2 = (!i_0_reg_150.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_150.read() == ap_const_lv9_100);
}

void dft::thread_icmp_ln27_fu_348_p2() {
    icmp_ln27_fu_348_p2 = (!j_0_reg_186.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_186.read() == ap_const_lv9_100);
}

void dft::thread_icmp_ln40_fu_381_p2() {
    icmp_ln40_fu_381_p2 = (!i_1_reg_198.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_198.read() == ap_const_lv9_100);
}

void dft::thread_j_fu_354_p2() {
    j_fu_354_p2 = (!j_0_reg_186.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j_0_reg_186.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void dft::thread_sample_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        sample_imag_address0 =  (sc_lv<8>) (zext_ln41_reg_528.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        sample_imag_address0 =  (sc_lv<8>) (zext_ln34_fu_375_p1.read());
    } else {
        sample_imag_address0 = "XXXXXXXX";
    }
}

void dft::thread_sample_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        sample_imag_ce0 = ap_const_logic_1;
    } else {
        sample_imag_ce0 = ap_const_logic_0;
    }
}

void dft::thread_sample_imag_d0() {
    sample_imag_d0 = temp_imag_q0.read();
}

void dft::thread_sample_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        sample_imag_we0 = ap_const_logic_1;
    } else {
        sample_imag_we0 = ap_const_logic_0;
    }
}

void dft::thread_sample_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        sample_real_address0 =  (sc_lv<8>) (zext_ln41_reg_528.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        sample_real_address0 =  (sc_lv<8>) (zext_ln34_fu_375_p1.read());
    } else {
        sample_real_address0 = "XXXXXXXX";
    }
}

void dft::thread_sample_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        sample_real_ce0 = ap_const_logic_1;
    } else {
        sample_real_ce0 = ap_const_logic_0;
    }
}

void dft::thread_sample_real_d0() {
    sample_real_d0 = temp_real_q0.read();
}

void dft::thread_sample_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        sample_real_we0 = ap_const_logic_1;
    } else {
        sample_real_we0 = ap_const_logic_0;
    }
}

void dft::thread_temp_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        temp_imag_address0 =  (sc_lv<8>) (zext_ln41_fu_393_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        temp_imag_address0 = temp_imag_addr_reg_427.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        temp_imag_address0 =  (sc_lv<8>) (zext_ln19_fu_337_p1.read());
    } else {
        temp_imag_address0 = "XXXXXXXX";
    }
}

void dft::thread_temp_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        temp_imag_ce0 = ap_const_logic_1;
    } else {
        temp_imag_ce0 = ap_const_logic_0;
    }
}

void dft::thread_temp_imag_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        temp_imag_d0 = reg_313.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        temp_imag_d0 = ap_const_lv32_0;
    } else {
        temp_imag_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dft::thread_temp_imag_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        temp_imag_we0 = ap_const_logic_1;
    } else {
        temp_imag_we0 = ap_const_logic_0;
    }
}

void dft::thread_temp_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        temp_real_address0 =  (sc_lv<8>) (zext_ln41_fu_393_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        temp_real_address0 = temp_real_addr_reg_422.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        temp_real_address0 =  (sc_lv<8>) (zext_ln19_fu_337_p1.read());
    } else {
        temp_real_address0 = "XXXXXXXX";
    }
}

void dft::thread_temp_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        temp_real_ce0 = ap_const_logic_1;
    } else {
        temp_real_ce0 = ap_const_logic_0;
    }
}

void dft::thread_temp_real_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        temp_real_d0 = reg_306.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        temp_real_d0 = ap_const_lv32_0;
    } else {
        temp_real_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dft::thread_temp_real_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        temp_real_we0 = ap_const_logic_1;
    } else {
        temp_real_we0 = ap_const_logic_0;
    }
}

void dft::thread_xor_ln30_fu_364_p2() {
    xor_ln30_fu_364_p2 = (bitcast_ln30_fu_360_p1.read() ^ ap_const_lv64_8000000000000000);
}

void dft::thread_zext_ln19_fu_337_p1() {
    zext_ln19_fu_337_p1 = esl_zext<64,9>(i_0_reg_150.read());
}

void dft::thread_zext_ln34_fu_375_p1() {
    zext_ln34_fu_375_p1 = esl_zext<64,9>(j_0_reg_186.read());
}

void dft::thread_zext_ln41_fu_393_p1() {
    zext_ln41_fu_393_p1 = esl_zext<64,9>(i_1_reg_198.read());
}

void dft::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln18_fu_325_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state42;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(icmp_ln27_fu_348_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(ap_block_state25_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 2199023255552 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(icmp_ln40_fu_381_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state43;
            }
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<43>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void dft::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_real_address0\" :  \"" << sample_real_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_real_ce0\" :  \"" << sample_real_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_real_we0\" :  \"" << sample_real_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_real_d0\" :  \"" << sample_real_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_real_q0\" :  \"" << sample_real_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_imag_address0\" :  \"" << sample_imag_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_imag_ce0\" :  \"" << sample_imag_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_imag_we0\" :  \"" << sample_imag_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sample_imag_d0\" :  \"" << sample_imag_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sample_imag_q0\" :  \"" << sample_imag_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

