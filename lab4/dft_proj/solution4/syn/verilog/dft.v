// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dft,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xqzu5ev-ffrb900-1-i,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.625000,HLS_SYN_LAT=138754,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=110,HLS_SYN_FF=4396,HLS_SYN_LUT=9802,HLS_VERSION=2020_1}" *)

module dft (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sample_real_V_address0,
        sample_real_V_ce0,
        sample_real_V_we0,
        sample_real_V_d0,
        sample_real_V_q0,
        sample_imag_V_address0,
        sample_imag_V_ce0,
        sample_imag_V_we0,
        sample_imag_V_d0,
        sample_imag_V_q0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_pp0_stage0 = 7'd4;
parameter    ap_ST_fsm_pp0_stage1 = 7'd8;
parameter    ap_ST_fsm_state31 = 7'd16;
parameter    ap_ST_fsm_state32 = 7'd32;
parameter    ap_ST_fsm_state33 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] sample_real_V_address0;
output   sample_real_V_ce0;
output   sample_real_V_we0;
output  [15:0] sample_real_V_d0;
input  [15:0] sample_real_V_q0;
output  [7:0] sample_imag_V_address0;
output   sample_imag_V_ce0;
output   sample_imag_V_we0;
output  [15:0] sample_imag_V_d0;
input  [15:0] sample_imag_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] sample_real_V_address0;
reg sample_real_V_ce0;
reg sample_real_V_we0;
reg[7:0] sample_imag_V_address0;
reg sample_imag_V_ce0;
reg sample_imag_V_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] j_0_reg_269;
reg   [8:0] j_0_reg_269_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state9_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_state13_pp0_stage0_iter5;
wire    ap_block_state15_pp0_stage0_iter6;
wire    ap_block_state17_pp0_stage0_iter7;
wire    ap_block_state19_pp0_stage0_iter8;
wire    ap_block_state21_pp0_stage0_iter9;
wire    ap_block_state23_pp0_stage0_iter10;
wire    ap_block_state25_pp0_stage0_iter11;
wire    ap_block_state27_pp0_stage0_iter12;
wire    ap_block_state29_pp0_stage0_iter13;
wire    ap_block_pp0_stage0_11001;
reg   [8:0] j_0_reg_269_pp0_iter2_reg;
reg   [8:0] j_0_reg_269_pp0_iter3_reg;
reg   [8:0] j_0_reg_269_pp0_iter4_reg;
reg   [8:0] j_0_reg_269_pp0_iter5_reg;
reg   [8:0] j_0_reg_269_pp0_iter6_reg;
reg   [8:0] j_0_reg_269_pp0_iter7_reg;
reg   [8:0] j_0_reg_269_pp0_iter8_reg;
reg   [8:0] j_0_reg_269_pp0_iter9_reg;
reg   [8:0] j_0_reg_269_pp0_iter10_reg;
reg   [8:0] j_0_reg_269_pp0_iter11_reg;
wire   [63:0] grp_sin_or_cos_double_s_fu_292_ap_return;
reg   [63:0] reg_320;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] icmp_ln27_reg_1677;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter11_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state10_pp0_stage1_iter3;
wire    ap_block_state12_pp0_stage1_iter4;
wire    ap_block_state14_pp0_stage1_iter5;
wire    ap_block_state16_pp0_stage1_iter6;
wire    ap_block_state18_pp0_stage1_iter7;
wire    ap_block_state20_pp0_stage1_iter8;
wire    ap_block_state22_pp0_stage1_iter9;
wire    ap_block_state24_pp0_stage1_iter10;
wire    ap_block_state26_pp0_stage1_iter11;
wire    ap_block_state28_pp0_stage1_iter12;
wire    ap_block_state30_pp0_stage1_iter13;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter12_reg;
wire   [0:0] icmp_ln18_fu_324_p2;
wire    ap_CS_fsm_state2;
wire   [8:0] i_2_fu_330_p2;
reg   [8:0] i_2_reg_1657;
reg   [7:0] temp_real_V_addr_reg_1662;
reg   [7:0] temp_imag_V_addr_reg_1667;
wire   [23:0] zext_ln1118_fu_342_p1;
reg   [23:0] zext_ln1118_reg_1672;
wire   [0:0] icmp_ln27_fu_346_p2;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter1_reg;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter2_reg;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter3_reg;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter4_reg;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter5_reg;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter6_reg;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter7_reg;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter8_reg;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter9_reg;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter10_reg;
reg   [0:0] icmp_ln27_reg_1677_pp0_iter13_reg;
wire   [8:0] j_fu_352_p2;
reg   [8:0] j_reg_1681;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] grp_fu_317_p1;
reg   [63:0] tmp_reg_1691;
wire   [63:0] grp_fu_312_p2;
reg   [63:0] v_assign_reg_1696;
wire   [15:0] w_V_fu_644_p3;
reg  signed [15:0] w_V_reg_1701;
wire   [0:0] icmp_ln885_fu_655_p2;
reg   [0:0] icmp_ln885_reg_1706;
wire   [0:0] p_Result_37_fu_660_p3;
reg   [0:0] p_Result_37_reg_1711;
wire  signed [47:0] sext_ln888_fu_679_p1;
reg  signed [47:0] sext_ln888_reg_1716;
wire   [31:0] l_fu_709_p1;
reg   [31:0] l_reg_1724;
wire   [10:0] trunc_ln893_fu_713_p1;
reg   [10:0] trunc_ln893_reg_1729;
reg   [62:0] m_5_reg_1734;
reg   [0:0] tmp_18_reg_1739;
wire   [63:0] select_ln885_fu_946_p3;
reg   [63:0] select_ln885_reg_1744;
wire   [53:0] man_V_5_fu_1012_p3;
reg   [53:0] man_V_5_reg_1759;
wire  signed [11:0] sh_amt_1_fu_1050_p3;
reg  signed [11:0] sh_amt_1_reg_1764;
wire   [15:0] trunc_ln583_1_fu_1064_p1;
reg   [15:0] trunc_ln583_1_reg_1769;
wire   [0:0] and_ln603_1_fu_1166_p2;
reg   [0:0] and_ln603_1_reg_1774;
wire   [0:0] or_ln603_3_fu_1172_p2;
reg   [0:0] or_ln603_3_reg_1779;
wire   [15:0] select_ln603_5_fu_1178_p3;
reg   [15:0] select_ln603_5_reg_1784;
wire   [0:0] or_ln603_5_fu_1192_p2;
reg   [0:0] or_ln603_5_reg_1789;
reg  signed [15:0] sample_real_V_load_reg_1794;
reg  signed [15:0] sample_imag_V_load_reg_1799;
wire   [15:0] s_V_fu_1531_p3;
reg   [15:0] s_V_reg_1804;
wire  signed [27:0] sext_ln1118_2_fu_1543_p1;
reg  signed [27:0] sext_ln1118_2_reg_1809;
wire  signed [27:0] sext_ln1118_4_fu_1546_p1;
reg  signed [27:0] sext_ln1118_4_reg_1814;
wire  signed [27:0] mul_ln1192_fu_1627_p2;
reg  signed [27:0] mul_ln1192_reg_1819;
wire  signed [27:0] mul_ln1192_3_fu_1633_p2;
reg  signed [27:0] mul_ln1192_3_reg_1824;
wire   [8:0] i_fu_1606_p2;
reg   [8:0] i_reg_1832;
wire    ap_CS_fsm_state32;
wire   [63:0] zext_ln42_fu_1612_p1;
reg   [63:0] zext_ln42_reg_1837;
wire   [0:0] icmp_ln41_fu_1600_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter13;
reg   [7:0] temp_real_V_address0;
reg    temp_real_V_ce0;
reg    temp_real_V_we0;
reg   [15:0] temp_real_V_d0;
wire   [15:0] temp_real_V_q0;
reg   [7:0] temp_imag_V_address0;
reg    temp_imag_V_ce0;
reg    temp_imag_V_we0;
reg   [15:0] temp_imag_V_d0;
wire   [15:0] temp_imag_V_q0;
wire    grp_sin_or_cos_double_s_fu_292_ap_start;
wire    grp_sin_or_cos_double_s_fu_292_ap_done;
wire    grp_sin_or_cos_double_s_fu_292_ap_idle;
wire    grp_sin_or_cos_double_s_fu_292_ap_ready;
reg   [63:0] grp_sin_or_cos_double_s_fu_292_t_in;
reg    grp_sin_or_cos_double_s_fu_292_do_cos;
reg   [8:0] tmp_V_2_reg_258;
wire    ap_CS_fsm_state31;
reg   [8:0] ap_phi_mux_j_0_phi_fu_273_p4;
wire    ap_block_pp0_stage0;
reg   [8:0] i_1_reg_281;
wire    ap_CS_fsm_state33;
reg    grp_sin_or_cos_double_s_fu_292_ap_start_reg;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln19_fu_336_p1;
wire   [63:0] zext_ln35_fu_954_p1;
wire   [31:0] grp_fu_317_p0;
wire   [63:0] ireg_V_fu_363_p1;
wire   [10:0] exp_tmp_V_fu_378_p4;
wire   [51:0] trunc_ln565_fu_392_p1;
wire   [52:0] tmp_4_fu_396_p3;
wire   [53:0] p_Result_36_fu_404_p1;
wire   [0:0] p_Result_35_fu_370_p3;
wire   [53:0] man_V_1_fu_408_p2;
wire   [62:0] trunc_ln556_fu_366_p1;
wire   [11:0] zext_ln461_fu_388_p1;
wire   [11:0] F2_fu_428_p2;
wire   [0:0] icmp_ln581_fu_434_p2;
wire   [11:0] add_ln581_fu_440_p2;
wire   [11:0] sub_ln581_fu_446_p2;
wire  signed [11:0] sh_amt_fu_452_p3;
wire   [53:0] man_V_2_fu_414_p3;
wire   [7:0] tmp_13_fu_480_p4;
wire  signed [31:0] sext_ln581_fu_460_p1;
wire   [53:0] zext_ln586_fu_496_p1;
wire   [53:0] ashr_ln586_fu_500_p2;
wire   [0:0] tmp_14_fu_510_p3;
wire   [15:0] trunc_ln583_fu_470_p1;
wire   [15:0] sext_ln581cast_fu_526_p1;
wire   [0:0] icmp_ln571_fu_422_p2;
wire   [0:0] icmp_ln582_fu_464_p2;
wire   [0:0] xor_ln571_fu_536_p2;
wire   [0:0] or_ln582_fu_548_p2;
wire   [0:0] xor_ln582_fu_554_p2;
wire   [0:0] icmp_ln585_fu_474_p2;
wire   [0:0] and_ln581_fu_560_p2;
wire   [0:0] xor_ln585_fu_566_p2;
wire   [0:0] or_ln581_fu_584_p2;
wire   [0:0] icmp_ln603_fu_490_p2;
wire   [0:0] xor_ln581_fu_590_p2;
wire   [0:0] and_ln603_fu_596_p2;
wire   [15:0] shl_ln604_fu_530_p2;
wire   [15:0] trunc_ln586_fu_506_p1;
wire   [0:0] and_ln585_1_fu_578_p2;
wire   [0:0] and_ln585_fu_572_p2;
wire   [15:0] select_ln588_fu_518_p3;
wire   [0:0] and_ln582_fu_542_p2;
wire   [0:0] or_ln603_fu_610_p2;
wire   [15:0] select_ln603_fu_602_p3;
wire   [15:0] select_ln603_1_fu_616_p3;
wire   [0:0] or_ln603_1_fu_624_p2;
wire   [0:0] or_ln603_2_fu_638_p2;
wire   [15:0] select_ln603_2_fu_630_p3;
wire  signed [23:0] mul_ln1118_fu_1618_p2;
(* use_dsp48 = "no" *) wire   [23:0] tmp_V_fu_667_p2;
wire   [23:0] tmp_V_4_fu_672_p3;
reg   [47:0] p_Result_1_fu_683_p4;
wire   [63:0] p_Result_38_fu_693_p3;
reg   [63:0] tmp_2_fu_701_p3;
wire   [31:0] sub_ln894_fu_717_p2;
wire   [31:0] lsb_index_fu_722_p2;
wire   [30:0] tmp_16_fu_728_p4;
wire   [5:0] trunc_ln897_fu_744_p1;
wire   [5:0] sub_ln897_fu_748_p2;
wire   [47:0] zext_ln897_fu_754_p1;
wire   [47:0] lshr_ln897_fu_758_p2;
wire   [47:0] p_Result_s_fu_764_p2;
wire   [0:0] icmp_ln897_fu_738_p2;
wire   [0:0] icmp_ln897_1_fu_769_p2;
wire   [0:0] tmp_17_fu_781_p3;
wire   [0:0] p_Result_4_fu_795_p3;
wire   [0:0] xor_ln899_fu_789_p2;
wire   [0:0] and_ln899_fu_802_p2;
wire   [0:0] a_fu_775_p2;
wire   [0:0] or_ln899_fu_808_p2;
wire   [31:0] add_ln908_fu_831_p2;
wire   [47:0] zext_ln908_fu_837_p1;
wire   [47:0] lshr_ln908_fu_841_p2;
wire   [31:0] sub_ln908_fu_850_p2;
wire   [63:0] m_fu_822_p1;
wire   [63:0] zext_ln908_1_fu_856_p1;
wire   [0:0] icmp_ln908_fu_825_p2;
wire   [63:0] zext_ln908_2_fu_846_p1;
wire   [63:0] shl_ln908_fu_860_p2;
wire   [31:0] or_ln_fu_814_p3;
wire   [63:0] zext_ln911_fu_874_p1;
wire   [63:0] m_1_fu_866_p3;
wire   [63:0] m_2_fu_878_p2;
wire   [10:0] sub_ln915_fu_912_p2;
wire   [10:0] select_ln915_fu_905_p3;
wire   [10:0] add_ln915_fu_917_p2;
wire   [63:0] m_6_fu_902_p1;
wire   [11:0] tmp_6_fu_923_p3;
wire   [63:0] p_Result_39_fu_930_p5;
wire   [63:0] bitcast_ln729_fu_942_p1;
wire   [63:0] ireg_V_1_fu_960_p1;
wire   [10:0] exp_tmp_V_1_fu_976_p4;
wire   [51:0] trunc_ln565_1_fu_990_p1;
wire   [52:0] tmp_7_fu_994_p3;
wire   [53:0] p_Result_41_fu_1002_p1;
wire   [0:0] p_Result_40_fu_968_p3;
wire   [53:0] man_V_4_fu_1006_p2;
wire   [62:0] trunc_ln556_1_fu_964_p1;
wire   [11:0] zext_ln461_1_fu_986_p1;
wire   [11:0] F2_1_fu_1026_p2;
wire   [0:0] icmp_ln581_1_fu_1032_p2;
wire   [11:0] add_ln581_1_fu_1038_p2;
wire   [11:0] sub_ln581_1_fu_1044_p2;
wire   [7:0] tmp_20_fu_1074_p4;
wire   [0:0] tmp_21_fu_1090_p3;
wire   [0:0] icmp_ln571_1_fu_1020_p2;
wire   [0:0] icmp_ln582_1_fu_1058_p2;
wire   [0:0] xor_ln571_1_fu_1106_p2;
wire   [0:0] or_ln582_1_fu_1118_p2;
wire   [0:0] xor_ln582_1_fu_1124_p2;
wire   [0:0] icmp_ln585_1_fu_1068_p2;
wire   [0:0] and_ln581_1_fu_1130_p2;
wire   [0:0] xor_ln585_1_fu_1136_p2;
wire   [0:0] or_ln581_1_fu_1154_p2;
wire   [0:0] icmp_ln603_1_fu_1084_p2;
wire   [0:0] xor_ln581_1_fu_1160_p2;
wire   [0:0] and_ln585_3_fu_1148_p2;
wire   [0:0] and_ln585_2_fu_1142_p2;
wire   [15:0] select_ln588_1_fu_1098_p3;
wire   [0:0] and_ln582_1_fu_1112_p2;
wire   [0:0] or_ln603_4_fu_1186_p2;
wire  signed [31:0] sext_ln581_1_fu_1198_p1;
wire   [53:0] zext_ln586_1_fu_1201_p1;
wire   [53:0] ashr_ln586_1_fu_1205_p2;
wire   [15:0] sext_ln581_1cast_fu_1214_p1;
wire   [15:0] shl_ln604_1_fu_1218_p2;
wire   [15:0] trunc_ln586_1_fu_1210_p1;
wire   [15:0] select_ln603_4_fu_1223_p3;
wire   [15:0] select_ln603_6_fu_1230_p3;
wire   [63:0] bitcast_ln31_fu_1243_p1;
wire   [63:0] ireg_V_2_fu_1251_p2;
wire   [10:0] exp_tmp_V_2_fu_1265_p4;
wire   [51:0] trunc_ln565_2_fu_1279_p1;
wire   [52:0] tmp_3_fu_1283_p3;
wire   [53:0] p_Result_42_fu_1291_p1;
wire   [0:0] tmp_22_fu_1257_p3;
wire   [53:0] man_V_7_fu_1295_p2;
wire   [62:0] trunc_ln31_fu_1247_p1;
wire   [11:0] zext_ln461_2_fu_1275_p1;
wire   [11:0] F2_2_fu_1315_p2;
wire   [0:0] icmp_ln581_2_fu_1321_p2;
wire   [11:0] add_ln581_2_fu_1327_p2;
wire   [11:0] sub_ln581_2_fu_1333_p2;
wire  signed [11:0] sh_amt_2_fu_1339_p3;
wire   [53:0] man_V_8_fu_1301_p3;
wire   [7:0] tmp_23_fu_1367_p4;
wire  signed [31:0] sext_ln581_2_fu_1347_p1;
wire   [53:0] zext_ln586_2_fu_1383_p1;
wire   [53:0] ashr_ln586_2_fu_1387_p2;
wire   [0:0] tmp_24_fu_1397_p3;
wire   [15:0] trunc_ln583_2_fu_1357_p1;
wire   [15:0] sext_ln581_2cast_fu_1413_p1;
wire   [0:0] icmp_ln571_2_fu_1309_p2;
wire   [0:0] icmp_ln582_2_fu_1351_p2;
wire   [0:0] xor_ln571_2_fu_1423_p2;
wire   [0:0] or_ln582_2_fu_1435_p2;
wire   [0:0] xor_ln582_2_fu_1441_p2;
wire   [0:0] icmp_ln585_2_fu_1361_p2;
wire   [0:0] and_ln581_2_fu_1447_p2;
wire   [0:0] xor_ln585_2_fu_1453_p2;
wire   [0:0] or_ln581_2_fu_1471_p2;
wire   [0:0] icmp_ln603_2_fu_1377_p2;
wire   [0:0] xor_ln581_2_fu_1477_p2;
wire   [0:0] and_ln603_2_fu_1483_p2;
wire   [15:0] shl_ln604_2_fu_1417_p2;
wire   [15:0] trunc_ln586_2_fu_1393_p1;
wire   [0:0] and_ln585_5_fu_1465_p2;
wire   [0:0] and_ln585_4_fu_1459_p2;
wire   [15:0] select_ln588_2_fu_1405_p3;
wire   [0:0] and_ln582_2_fu_1429_p2;
wire   [0:0] or_ln603_6_fu_1497_p2;
wire   [15:0] select_ln603_8_fu_1489_p3;
wire   [15:0] select_ln603_9_fu_1503_p3;
wire   [0:0] or_ln603_7_fu_1511_p2;
wire   [0:0] or_ln603_8_fu_1525_p2;
wire   [15:0] select_ln603_10_fu_1517_p3;
wire   [15:0] c_V_fu_1236_p3;
wire  signed [27:0] grp_fu_1639_p3;
wire   [27:0] lhs_V_fu_1552_p3;
(* use_dsp48 = "no" *) wire   [27:0] ret_V_fu_1560_p2;
wire  signed [27:0] grp_fu_1646_p3;
wire   [27:0] lhs_V_2_fu_1576_p3;
(* use_dsp48 = "no" *) wire   [27:0] ret_V_19_fu_1584_p2;
wire   [8:0] mul_ln1118_fu_1618_p1;
wire  signed [15:0] mul_ln1192_fu_1627_p1;
wire  signed [27:0] sext_ln1118_1_fu_1539_p1;
wire  signed [15:0] mul_ln1192_3_fu_1633_p1;
wire  signed [15:0] grp_fu_1639_p0;
wire  signed [15:0] grp_fu_1639_p1;
wire  signed [27:0] sext_ln1118_3_fu_1549_p1;
wire  signed [15:0] grp_fu_1646_p0;
wire  signed [15:0] grp_fu_1646_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1417;
reg    ap_condition_1421;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 grp_sin_or_cos_double_s_fu_292_ap_start_reg = 1'b0;
end

dft_temp_real_V #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
temp_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_real_V_address0),
    .ce0(temp_real_V_ce0),
    .we0(temp_real_V_we0),
    .d0(temp_real_V_d0),
    .q0(temp_real_V_q0)
);

dft_temp_real_V #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
temp_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_imag_V_address0),
    .ce0(temp_imag_V_ce0),
    .we0(temp_imag_V_we0),
    .d0(temp_imag_V_d0),
    .q0(temp_imag_V_q0)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_292(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_292_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_292_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_292_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_292_ap_ready),
    .ap_ce(1'b1),
    .t_in(grp_sin_or_cos_double_s_fu_292_t_in),
    .do_cos(grp_sin_or_cos_double_s_fu_292_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_292_ap_return)
);

dft_dmul_64ns_64nibs #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dft_dmul_64ns_64nibs_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_1691),
    .din1(64'd4582731459160450590),
    .ce(1'b1),
    .dout(grp_fu_312_p2)
);

dft_sitodp_32ns_6jbC #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
dft_sitodp_32ns_6jbC_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_317_p0),
    .ce(1'b1),
    .dout(grp_fu_317_p1)
);

dft_mul_mul_16s_9kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
dft_mul_mul_16s_9kbM_U19(
    .din0(w_V_reg_1701),
    .din1(mul_ln1118_fu_1618_p1),
    .dout(mul_ln1118_fu_1618_p2)
);

dft_mul_mul_16s_1lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
dft_mul_mul_16s_1lbW_U20(
    .din0(sample_real_V_load_reg_1794),
    .din1(mul_ln1192_fu_1627_p1),
    .dout(mul_ln1192_fu_1627_p2)
);

dft_mul_mul_16s_1lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
dft_mul_mul_16s_1lbW_U21(
    .din0(sample_imag_V_load_reg_1799),
    .din1(mul_ln1192_3_fu_1633_p1),
    .dout(mul_ln1192_3_fu_1633_p2)
);

dft_mac_mulsub_16mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
dft_mac_mulsub_16mb6_U22(
    .din0(grp_fu_1639_p0),
    .din1(grp_fu_1639_p1),
    .din2(mul_ln1192_reg_1819),
    .dout(grp_fu_1639_p3)
);

dft_mac_muladd_16ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 28 ))
dft_mac_muladd_16ncg_U23(
    .din0(grp_fu_1646_p0),
    .din1(grp_fu_1646_p1),
    .din2(mul_ln1192_3_reg_1824),
    .dout(grp_fu_1646_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln18_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end else if (((icmp_ln18_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_292_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln27_reg_1677_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln27_reg_1677_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1)))) begin
            grp_sin_or_cos_double_s_fu_292_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_292_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_292_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln18_fu_324_p2 == 1'd1))) begin
        i_1_reg_281 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        i_1_reg_281 <= i_reg_1832;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1677 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        j_0_reg_269 <= j_reg_1681;
    end else if (((icmp_ln18_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_269 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_V_2_reg_258 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_V_2_reg_258 <= i_2_reg_1657;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1677_pp0_iter12_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln603_1_reg_1774 <= and_ln603_1_fu_1166_p2;
        man_V_5_reg_1759 <= man_V_5_fu_1012_p3;
        or_ln603_3_reg_1779 <= or_ln603_3_fu_1172_p2;
        or_ln603_5_reg_1789 <= or_ln603_5_fu_1192_p2;
        select_ln603_5_reg_1784 <= select_ln603_5_fu_1178_p3;
        sh_amt_1_reg_1764 <= sh_amt_1_fu_1050_p3;
        trunc_ln583_1_reg_1769 <= trunc_ln583_1_fu_1064_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_1657 <= i_2_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        i_reg_1832 <= i_fu_1606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln27_reg_1677 <= icmp_ln27_fu_346_p2;
        icmp_ln27_reg_1677_pp0_iter10_reg <= icmp_ln27_reg_1677_pp0_iter9_reg;
        icmp_ln27_reg_1677_pp0_iter11_reg <= icmp_ln27_reg_1677_pp0_iter10_reg;
        icmp_ln27_reg_1677_pp0_iter12_reg <= icmp_ln27_reg_1677_pp0_iter11_reg;
        icmp_ln27_reg_1677_pp0_iter13_reg <= icmp_ln27_reg_1677_pp0_iter12_reg;
        icmp_ln27_reg_1677_pp0_iter1_reg <= icmp_ln27_reg_1677;
        icmp_ln27_reg_1677_pp0_iter2_reg <= icmp_ln27_reg_1677_pp0_iter1_reg;
        icmp_ln27_reg_1677_pp0_iter3_reg <= icmp_ln27_reg_1677_pp0_iter2_reg;
        icmp_ln27_reg_1677_pp0_iter4_reg <= icmp_ln27_reg_1677_pp0_iter3_reg;
        icmp_ln27_reg_1677_pp0_iter5_reg <= icmp_ln27_reg_1677_pp0_iter4_reg;
        icmp_ln27_reg_1677_pp0_iter6_reg <= icmp_ln27_reg_1677_pp0_iter5_reg;
        icmp_ln27_reg_1677_pp0_iter7_reg <= icmp_ln27_reg_1677_pp0_iter6_reg;
        icmp_ln27_reg_1677_pp0_iter8_reg <= icmp_ln27_reg_1677_pp0_iter7_reg;
        icmp_ln27_reg_1677_pp0_iter9_reg <= icmp_ln27_reg_1677_pp0_iter8_reg;
        j_0_reg_269_pp0_iter10_reg <= j_0_reg_269_pp0_iter9_reg;
        j_0_reg_269_pp0_iter11_reg <= j_0_reg_269_pp0_iter10_reg;
        j_0_reg_269_pp0_iter1_reg <= j_0_reg_269;
        j_0_reg_269_pp0_iter2_reg <= j_0_reg_269_pp0_iter1_reg;
        j_0_reg_269_pp0_iter3_reg <= j_0_reg_269_pp0_iter2_reg;
        j_0_reg_269_pp0_iter4_reg <= j_0_reg_269_pp0_iter3_reg;
        j_0_reg_269_pp0_iter5_reg <= j_0_reg_269_pp0_iter4_reg;
        j_0_reg_269_pp0_iter6_reg <= j_0_reg_269_pp0_iter5_reg;
        j_0_reg_269_pp0_iter7_reg <= j_0_reg_269_pp0_iter6_reg;
        j_0_reg_269_pp0_iter8_reg <= j_0_reg_269_pp0_iter7_reg;
        j_0_reg_269_pp0_iter9_reg <= j_0_reg_269_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1677_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln885_reg_1706 <= icmp_ln885_fu_655_p2;
        l_reg_1724 <= l_fu_709_p1;
        p_Result_37_reg_1711 <= mul_ln1118_fu_1618_p2[32'd23];
        sext_ln888_reg_1716 <= sext_ln888_fu_679_p1;
        trunc_ln893_reg_1729 <= trunc_ln893_fu_713_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_1681 <= j_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln885_reg_1706 == 1'd0) & (icmp_ln27_reg_1677_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_5_reg_1734 <= {{m_2_fu_878_p2[63:1]}};
        tmp_18_reg_1739 <= m_2_fu_878_p2[32'd54];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1677_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1192_3_reg_1824 <= mul_ln1192_3_fu_1633_p2;
        mul_ln1192_reg_1819 <= mul_ln1192_fu_1627_p2;
        s_V_reg_1804 <= s_V_fu_1531_p3;
        sext_ln1118_2_reg_1809 <= sext_ln1118_2_fu_1543_p1;
        sext_ln1118_4_reg_1814 <= sext_ln1118_4_fu_1546_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln27_reg_1677_pp0_iter12_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln27_reg_1677_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_320 <= grp_sin_or_cos_double_s_fu_292_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1677_pp0_iter12_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sample_imag_V_load_reg_1799 <= sample_imag_V_q0;
        sample_real_V_load_reg_1794 <= sample_real_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1677_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln885_reg_1744 <= select_ln885_fu_946_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        temp_imag_V_addr_reg_1667 <= zext_ln19_fu_336_p1;
        temp_real_V_addr_reg_1662 <= zext_ln19_fu_336_p1;
        zext_ln1118_reg_1672[8 : 0] <= zext_ln1118_fu_342_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1677_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_1691 <= grp_fu_317_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1677_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_assign_reg_1696 <= grp_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1677_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w_V_reg_1701 <= w_V_fu_644_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_1600_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        zext_ln42_reg_1837[8 : 0] <= zext_ln42_fu_1612_p1[8 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln27_fu_346_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_1600_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1677 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_j_0_phi_fu_273_p4 = j_reg_1681;
    end else begin
        ap_phi_mux_j_0_phi_fu_273_p4 = j_0_reg_269;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_1600_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if ((1'b1 == ap_condition_1421)) begin
            grp_sin_or_cos_double_s_fu_292_do_cos = 1'd0;
        end else if ((1'b1 == ap_condition_1417)) begin
            grp_sin_or_cos_double_s_fu_292_do_cos = 1'd1;
        end else begin
            grp_sin_or_cos_double_s_fu_292_do_cos = 'bx;
        end
    end else begin
        grp_sin_or_cos_double_s_fu_292_do_cos = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if ((1'b1 == ap_condition_1421)) begin
            grp_sin_or_cos_double_s_fu_292_t_in = select_ln885_reg_1744;
        end else if ((1'b1 == ap_condition_1417)) begin
            grp_sin_or_cos_double_s_fu_292_t_in = select_ln885_fu_946_p3;
        end else begin
            grp_sin_or_cos_double_s_fu_292_t_in = 'bx;
        end
    end else begin
        grp_sin_or_cos_double_s_fu_292_t_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        sample_imag_V_address0 = zext_ln42_reg_1837;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sample_imag_V_address0 = zext_ln35_fu_954_p1;
    end else begin
        sample_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sample_imag_V_ce0 = 1'b1;
    end else begin
        sample_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        sample_imag_V_we0 = 1'b1;
    end else begin
        sample_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        sample_real_V_address0 = zext_ln42_reg_1837;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sample_real_V_address0 = zext_ln35_fu_954_p1;
    end else begin
        sample_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sample_real_V_ce0 = 1'b1;
    end else begin
        sample_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        sample_real_V_we0 = 1'b1;
    end else begin
        sample_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_imag_V_address0 = zext_ln42_fu_1612_p1;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
        temp_imag_V_address0 = temp_imag_V_addr_reg_1667;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        temp_imag_V_address0 = zext_ln19_fu_336_p1;
    end else begin
        temp_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
        temp_imag_V_ce0 = 1'b1;
    end else begin
        temp_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        temp_imag_V_d0 = {{ret_V_19_fu_1584_p2[27:12]}};
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        temp_imag_V_d0 = 16'd0;
    end else begin
        temp_imag_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln27_reg_1677_pp0_iter13_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln18_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        temp_imag_V_we0 = 1'b1;
    end else begin
        temp_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_real_V_address0 = zext_ln42_fu_1612_p1;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
        temp_real_V_address0 = temp_real_V_addr_reg_1662;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        temp_real_V_address0 = zext_ln19_fu_336_p1;
    end else begin
        temp_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
        temp_real_V_ce0 = 1'b1;
    end else begin
        temp_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        temp_real_V_d0 = {{ret_V_fu_1560_p2[27:12]}};
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        temp_real_V_d0 = 16'd0;
    end else begin
        temp_real_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln27_reg_1677_pp0_iter13_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln18_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        temp_real_V_we0 = 1'b1;
    end else begin
        temp_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln18_fu_324_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_346_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_346_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln41_fu_1600_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_1026_p2 = (12'd1075 - zext_ln461_1_fu_986_p1);

assign F2_2_fu_1315_p2 = (12'd1075 - zext_ln461_2_fu_1275_p1);

assign F2_fu_428_p2 = (12'd1075 - zext_ln461_fu_388_p1);

assign a_fu_775_p2 = (icmp_ln897_fu_738_p2 & icmp_ln897_1_fu_769_p2);

assign add_ln581_1_fu_1038_p2 = ($signed(12'd4084) + $signed(F2_1_fu_1026_p2));

assign add_ln581_2_fu_1327_p2 = ($signed(12'd4084) + $signed(F2_2_fu_1315_p2));

assign add_ln581_fu_440_p2 = ($signed(12'd4084) + $signed(F2_fu_428_p2));

assign add_ln908_fu_831_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_fu_717_p2));

assign add_ln915_fu_917_p2 = (sub_ln915_fu_912_p2 + select_ln915_fu_905_p3);

assign and_ln581_1_fu_1130_p2 = (xor_ln582_1_fu_1124_p2 & icmp_ln581_1_fu_1032_p2);

assign and_ln581_2_fu_1447_p2 = (xor_ln582_2_fu_1441_p2 & icmp_ln581_2_fu_1321_p2);

assign and_ln581_fu_560_p2 = (xor_ln582_fu_554_p2 & icmp_ln581_fu_434_p2);

assign and_ln582_1_fu_1112_p2 = (xor_ln571_1_fu_1106_p2 & icmp_ln582_1_fu_1058_p2);

assign and_ln582_2_fu_1429_p2 = (xor_ln571_2_fu_1423_p2 & icmp_ln582_2_fu_1351_p2);

assign and_ln582_fu_542_p2 = (xor_ln571_fu_536_p2 & icmp_ln582_fu_464_p2);

assign and_ln585_1_fu_578_p2 = (icmp_ln585_fu_474_p2 & and_ln581_fu_560_p2);

assign and_ln585_2_fu_1142_p2 = (xor_ln585_1_fu_1136_p2 & and_ln581_1_fu_1130_p2);

assign and_ln585_3_fu_1148_p2 = (icmp_ln585_1_fu_1068_p2 & and_ln581_1_fu_1130_p2);

assign and_ln585_4_fu_1459_p2 = (xor_ln585_2_fu_1453_p2 & and_ln581_2_fu_1447_p2);

assign and_ln585_5_fu_1465_p2 = (icmp_ln585_2_fu_1361_p2 & and_ln581_2_fu_1447_p2);

assign and_ln585_fu_572_p2 = (xor_ln585_fu_566_p2 & and_ln581_fu_560_p2);

assign and_ln603_1_fu_1166_p2 = (xor_ln581_1_fu_1160_p2 & icmp_ln603_1_fu_1084_p2);

assign and_ln603_2_fu_1483_p2 = (xor_ln581_2_fu_1477_p2 & icmp_ln603_2_fu_1377_p2);

assign and_ln603_fu_596_p2 = (xor_ln581_fu_590_p2 & icmp_ln603_fu_490_p2);

assign and_ln899_fu_802_p2 = (xor_ln899_fu_789_p2 & p_Result_4_fu_795_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1417 = ((icmp_ln27_reg_1677_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_1421 = ((icmp_ln27_reg_1677_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ashr_ln586_1_fu_1205_p2 = $signed(man_V_5_reg_1759) >>> zext_ln586_1_fu_1201_p1;

assign ashr_ln586_2_fu_1387_p2 = $signed(man_V_8_fu_1301_p3) >>> zext_ln586_2_fu_1383_p1;

assign ashr_ln586_fu_500_p2 = $signed(man_V_2_fu_414_p3) >>> zext_ln586_fu_496_p1;

assign bitcast_ln31_fu_1243_p1 = reg_320;

assign bitcast_ln729_fu_942_p1 = p_Result_39_fu_930_p5;

assign c_V_fu_1236_p3 = ((or_ln603_5_reg_1789[0:0] === 1'b1) ? select_ln603_6_fu_1230_p3 : 16'd0);

assign exp_tmp_V_1_fu_976_p4 = {{ireg_V_1_fu_960_p1[62:52]}};

assign exp_tmp_V_2_fu_1265_p4 = {{ireg_V_2_fu_1251_p2[62:52]}};

assign exp_tmp_V_fu_378_p4 = {{ireg_V_fu_363_p1[62:52]}};

assign grp_fu_1639_p0 = sext_ln1118_4_reg_1814;

assign grp_fu_1639_p1 = sext_ln1118_3_fu_1549_p1;

assign grp_fu_1646_p0 = sext_ln1118_2_reg_1809;

assign grp_fu_1646_p1 = sext_ln1118_3_fu_1549_p1;

assign grp_fu_317_p0 = ap_phi_mux_j_0_phi_fu_273_p4;

assign grp_sin_or_cos_double_s_fu_292_ap_start = grp_sin_or_cos_double_s_fu_292_ap_start_reg;

assign i_2_fu_330_p2 = (tmp_V_2_reg_258 + 9'd1);

assign i_fu_1606_p2 = (i_1_reg_281 + 9'd1);

assign icmp_ln18_fu_324_p2 = ((tmp_V_2_reg_258 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_346_p2 = ((ap_phi_mux_j_0_phi_fu_273_p4 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1600_p2 = ((i_1_reg_281 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_1020_p2 = ((trunc_ln556_1_fu_964_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_1309_p2 = ((trunc_ln31_fu_1247_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_422_p2 = ((trunc_ln556_fu_366_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_1_fu_1032_p2 = (($signed(F2_1_fu_1026_p2) > $signed(12'd12)) ? 1'b1 : 1'b0);

assign icmp_ln581_2_fu_1321_p2 = (($signed(F2_2_fu_1315_p2) > $signed(12'd12)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_434_p2 = (($signed(F2_fu_428_p2) > $signed(12'd12)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_1058_p2 = ((F2_1_fu_1026_p2 == 12'd12) ? 1'b1 : 1'b0);

assign icmp_ln582_2_fu_1351_p2 = ((F2_2_fu_1315_p2 == 12'd12) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_464_p2 = ((F2_fu_428_p2 == 12'd12) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_1068_p2 = ((sh_amt_1_fu_1050_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_2_fu_1361_p2 = ((sh_amt_2_fu_1339_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_474_p2 = ((sh_amt_fu_452_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_1084_p2 = ((tmp_20_fu_1074_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_2_fu_1377_p2 = ((tmp_23_fu_1367_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_490_p2 = ((tmp_13_fu_480_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_655_p2 = ((mul_ln1118_fu_1618_p2 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_1_fu_769_p2 = ((p_Result_s_fu_764_p2 != 48'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_738_p2 = (($signed(tmp_16_fu_728_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_825_p2 = (($signed(lsb_index_fu_722_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_V_1_fu_960_p1 = reg_320;

assign ireg_V_2_fu_1251_p2 = (bitcast_ln31_fu_1243_p1 ^ 64'd9223372036854775808);

assign ireg_V_fu_363_p1 = v_assign_reg_1696;

assign j_fu_352_p2 = (ap_phi_mux_j_0_phi_fu_273_p4 + 9'd1);

assign l_fu_709_p1 = tmp_2_fu_701_p3[31:0];

assign lhs_V_2_fu_1576_p3 = {{temp_imag_V_q0}, {12'd0}};

assign lhs_V_fu_1552_p3 = {{temp_real_V_q0}, {12'd0}};

assign lsb_index_fu_722_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_717_p2));

assign lshr_ln897_fu_758_p2 = 48'd281474976710655 >> zext_ln897_fu_754_p1;

assign lshr_ln908_fu_841_p2 = sext_ln888_reg_1716 >> zext_ln908_fu_837_p1;

assign m_1_fu_866_p3 = ((icmp_ln908_fu_825_p2[0:0] === 1'b1) ? zext_ln908_2_fu_846_p1 : shl_ln908_fu_860_p2);

assign m_2_fu_878_p2 = (zext_ln911_fu_874_p1 + m_1_fu_866_p3);

assign m_6_fu_902_p1 = m_5_reg_1734;

assign m_fu_822_p1 = $unsigned(sext_ln888_reg_1716);

assign man_V_1_fu_408_p2 = (54'd0 - p_Result_36_fu_404_p1);

assign man_V_2_fu_414_p3 = ((p_Result_35_fu_370_p3[0:0] === 1'b1) ? man_V_1_fu_408_p2 : p_Result_36_fu_404_p1);

assign man_V_4_fu_1006_p2 = (54'd0 - p_Result_41_fu_1002_p1);

assign man_V_5_fu_1012_p3 = ((p_Result_40_fu_968_p3[0:0] === 1'b1) ? man_V_4_fu_1006_p2 : p_Result_41_fu_1002_p1);

assign man_V_7_fu_1295_p2 = (54'd0 - p_Result_42_fu_1291_p1);

assign man_V_8_fu_1301_p3 = ((tmp_22_fu_1257_p3[0:0] === 1'b1) ? p_Result_42_fu_1291_p1 : man_V_7_fu_1295_p2);

assign mul_ln1118_fu_1618_p1 = zext_ln1118_reg_1672;

assign mul_ln1192_3_fu_1633_p1 = sext_ln1118_1_fu_1539_p1;

assign mul_ln1192_fu_1627_p1 = sext_ln1118_1_fu_1539_p1;

assign or_ln581_1_fu_1154_p2 = (or_ln582_1_fu_1118_p2 | icmp_ln581_1_fu_1032_p2);

assign or_ln581_2_fu_1471_p2 = (or_ln582_2_fu_1435_p2 | icmp_ln581_2_fu_1321_p2);

assign or_ln581_fu_584_p2 = (or_ln582_fu_548_p2 | icmp_ln581_fu_434_p2);

assign or_ln582_1_fu_1118_p2 = (icmp_ln582_1_fu_1058_p2 | icmp_ln571_1_fu_1020_p2);

assign or_ln582_2_fu_1435_p2 = (icmp_ln582_2_fu_1351_p2 | icmp_ln571_2_fu_1309_p2);

assign or_ln582_fu_548_p2 = (icmp_ln582_fu_464_p2 | icmp_ln571_fu_422_p2);

assign or_ln603_1_fu_624_p2 = (and_ln585_fu_572_p2 | and_ln582_fu_542_p2);

assign or_ln603_2_fu_638_p2 = (or_ln603_fu_610_p2 | or_ln603_1_fu_624_p2);

assign or_ln603_3_fu_1172_p2 = (and_ln603_1_fu_1166_p2 | and_ln585_3_fu_1148_p2);

assign or_ln603_4_fu_1186_p2 = (and_ln585_2_fu_1142_p2 | and_ln582_1_fu_1112_p2);

assign or_ln603_5_fu_1192_p2 = (or_ln603_4_fu_1186_p2 | or_ln603_3_fu_1172_p2);

assign or_ln603_6_fu_1497_p2 = (and_ln603_2_fu_1483_p2 | and_ln585_5_fu_1465_p2);

assign or_ln603_7_fu_1511_p2 = (and_ln585_4_fu_1459_p2 | and_ln582_2_fu_1429_p2);

assign or_ln603_8_fu_1525_p2 = (or_ln603_7_fu_1511_p2 | or_ln603_6_fu_1497_p2);

assign or_ln603_fu_610_p2 = (and_ln603_fu_596_p2 | and_ln585_1_fu_578_p2);

assign or_ln899_fu_808_p2 = (and_ln899_fu_802_p2 | a_fu_775_p2);

assign or_ln_fu_814_p3 = {{31'd0}, {or_ln899_fu_808_p2}};

integer ap_tvar_int_0;

always @ (sext_ln888_fu_679_p1) begin
    for (ap_tvar_int_0 = 48 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 47 - 0) begin
            p_Result_1_fu_683_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_1_fu_683_p4[ap_tvar_int_0] = sext_ln888_fu_679_p1[47 - ap_tvar_int_0];
        end
    end
end

assign p_Result_35_fu_370_p3 = ireg_V_fu_363_p1[32'd63];

assign p_Result_36_fu_404_p1 = tmp_4_fu_396_p3;

assign p_Result_37_fu_660_p3 = mul_ln1118_fu_1618_p2[32'd23];

assign p_Result_38_fu_693_p3 = {{16'd65535}, {p_Result_1_fu_683_p4}};

assign p_Result_39_fu_930_p5 = {{tmp_6_fu_923_p3}, {m_6_fu_902_p1[51:0]}};

assign p_Result_40_fu_968_p3 = ireg_V_1_fu_960_p1[32'd63];

assign p_Result_41_fu_1002_p1 = tmp_7_fu_994_p3;

assign p_Result_42_fu_1291_p1 = tmp_3_fu_1283_p3;

assign p_Result_4_fu_795_p3 = sext_ln888_reg_1716[lsb_index_fu_722_p2];

assign p_Result_s_fu_764_p2 = (sext_ln888_reg_1716 & lshr_ln897_fu_758_p2);

assign ret_V_19_fu_1584_p2 = ($signed(grp_fu_1646_p3) + $signed(lhs_V_2_fu_1576_p3));

assign ret_V_fu_1560_p2 = ($signed(grp_fu_1639_p3) + $signed(lhs_V_fu_1552_p3));

assign s_V_fu_1531_p3 = ((or_ln603_8_fu_1525_p2[0:0] === 1'b1) ? select_ln603_10_fu_1517_p3 : 16'd0);

assign sample_imag_V_d0 = temp_imag_V_q0;

assign sample_real_V_d0 = temp_real_V_q0;

assign select_ln588_1_fu_1098_p3 = ((tmp_21_fu_1090_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign select_ln588_2_fu_1405_p3 = ((tmp_24_fu_1397_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign select_ln588_fu_518_p3 = ((tmp_14_fu_510_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign select_ln603_10_fu_1517_p3 = ((or_ln603_6_fu_1497_p2[0:0] === 1'b1) ? select_ln603_8_fu_1489_p3 : select_ln603_9_fu_1503_p3);

assign select_ln603_1_fu_616_p3 = ((and_ln585_fu_572_p2[0:0] === 1'b1) ? select_ln588_fu_518_p3 : trunc_ln583_fu_470_p1);

assign select_ln603_2_fu_630_p3 = ((or_ln603_fu_610_p2[0:0] === 1'b1) ? select_ln603_fu_602_p3 : select_ln603_1_fu_616_p3);

assign select_ln603_4_fu_1223_p3 = ((and_ln603_1_reg_1774[0:0] === 1'b1) ? shl_ln604_1_fu_1218_p2 : trunc_ln586_1_fu_1210_p1);

assign select_ln603_5_fu_1178_p3 = ((and_ln585_2_fu_1142_p2[0:0] === 1'b1) ? select_ln588_1_fu_1098_p3 : trunc_ln583_1_fu_1064_p1);

assign select_ln603_6_fu_1230_p3 = ((or_ln603_3_reg_1779[0:0] === 1'b1) ? select_ln603_4_fu_1223_p3 : select_ln603_5_reg_1784);

assign select_ln603_8_fu_1489_p3 = ((and_ln603_2_fu_1483_p2[0:0] === 1'b1) ? shl_ln604_2_fu_1417_p2 : trunc_ln586_2_fu_1393_p1);

assign select_ln603_9_fu_1503_p3 = ((and_ln585_4_fu_1459_p2[0:0] === 1'b1) ? select_ln588_2_fu_1405_p3 : trunc_ln583_2_fu_1357_p1);

assign select_ln603_fu_602_p3 = ((and_ln603_fu_596_p2[0:0] === 1'b1) ? shl_ln604_fu_530_p2 : trunc_ln586_fu_506_p1);

assign select_ln885_fu_946_p3 = ((icmp_ln885_reg_1706[0:0] === 1'b1) ? 64'd0 : bitcast_ln729_fu_942_p1);

assign select_ln915_fu_905_p3 = ((tmp_18_reg_1739[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1118_1_fu_1539_p1 = $signed(c_V_fu_1236_p3);

assign sext_ln1118_2_fu_1543_p1 = sample_real_V_load_reg_1794;

assign sext_ln1118_3_fu_1549_p1 = $signed(s_V_reg_1804);

assign sext_ln1118_4_fu_1546_p1 = sample_imag_V_load_reg_1799;

assign sext_ln581_1_fu_1198_p1 = sh_amt_1_reg_1764;

assign sext_ln581_1cast_fu_1214_p1 = sext_ln581_1_fu_1198_p1[15:0];

assign sext_ln581_2_fu_1347_p1 = sh_amt_2_fu_1339_p3;

assign sext_ln581_2cast_fu_1413_p1 = sext_ln581_2_fu_1347_p1[15:0];

assign sext_ln581_fu_460_p1 = sh_amt_fu_452_p3;

assign sext_ln581cast_fu_526_p1 = sext_ln581_fu_460_p1[15:0];

assign sext_ln888_fu_679_p1 = $signed(tmp_V_4_fu_672_p3);

assign sh_amt_1_fu_1050_p3 = ((icmp_ln581_1_fu_1032_p2[0:0] === 1'b1) ? add_ln581_1_fu_1038_p2 : sub_ln581_1_fu_1044_p2);

assign sh_amt_2_fu_1339_p3 = ((icmp_ln581_2_fu_1321_p2[0:0] === 1'b1) ? add_ln581_2_fu_1327_p2 : sub_ln581_2_fu_1333_p2);

assign sh_amt_fu_452_p3 = ((icmp_ln581_fu_434_p2[0:0] === 1'b1) ? add_ln581_fu_440_p2 : sub_ln581_fu_446_p2);

assign shl_ln604_1_fu_1218_p2 = trunc_ln583_1_reg_1769 << sext_ln581_1cast_fu_1214_p1;

assign shl_ln604_2_fu_1417_p2 = trunc_ln583_2_fu_1357_p1 << sext_ln581_2cast_fu_1413_p1;

assign shl_ln604_fu_530_p2 = trunc_ln583_fu_470_p1 << sext_ln581cast_fu_526_p1;

assign shl_ln908_fu_860_p2 = m_fu_822_p1 << zext_ln908_1_fu_856_p1;

assign sub_ln581_1_fu_1044_p2 = (12'd12 - F2_1_fu_1026_p2);

assign sub_ln581_2_fu_1333_p2 = (12'd12 - F2_2_fu_1315_p2);

assign sub_ln581_fu_446_p2 = (12'd12 - F2_fu_428_p2);

assign sub_ln894_fu_717_p2 = (32'd48 - l_reg_1724);

assign sub_ln897_fu_748_p2 = ($signed(6'd38) - $signed(trunc_ln897_fu_744_p1));

assign sub_ln908_fu_850_p2 = (32'd54 - sub_ln894_fu_717_p2);

assign sub_ln915_fu_912_p2 = (11'd36 - trunc_ln893_reg_1729);

assign tmp_13_fu_480_p4 = {{sh_amt_fu_452_p3[11:4]}};

assign tmp_14_fu_510_p3 = ireg_V_fu_363_p1[32'd63];

assign tmp_16_fu_728_p4 = {{lsb_index_fu_722_p2[31:1]}};

assign tmp_17_fu_781_p3 = lsb_index_fu_722_p2[32'd31];

assign tmp_20_fu_1074_p4 = {{sh_amt_1_fu_1050_p3[11:4]}};

assign tmp_21_fu_1090_p3 = ireg_V_1_fu_960_p1[32'd63];

assign tmp_22_fu_1257_p3 = bitcast_ln31_fu_1243_p1[32'd63];

assign tmp_23_fu_1367_p4 = {{sh_amt_2_fu_1339_p3[11:4]}};

assign tmp_24_fu_1397_p3 = ireg_V_2_fu_1251_p2[32'd63];


always @ (p_Result_38_fu_693_p3) begin
    if (p_Result_38_fu_693_p3[0] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd0;
    end else if (p_Result_38_fu_693_p3[1] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd1;
    end else if (p_Result_38_fu_693_p3[2] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd2;
    end else if (p_Result_38_fu_693_p3[3] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd3;
    end else if (p_Result_38_fu_693_p3[4] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd4;
    end else if (p_Result_38_fu_693_p3[5] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd5;
    end else if (p_Result_38_fu_693_p3[6] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd6;
    end else if (p_Result_38_fu_693_p3[7] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd7;
    end else if (p_Result_38_fu_693_p3[8] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd8;
    end else if (p_Result_38_fu_693_p3[9] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd9;
    end else if (p_Result_38_fu_693_p3[10] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd10;
    end else if (p_Result_38_fu_693_p3[11] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd11;
    end else if (p_Result_38_fu_693_p3[12] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd12;
    end else if (p_Result_38_fu_693_p3[13] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd13;
    end else if (p_Result_38_fu_693_p3[14] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd14;
    end else if (p_Result_38_fu_693_p3[15] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd15;
    end else if (p_Result_38_fu_693_p3[16] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd16;
    end else if (p_Result_38_fu_693_p3[17] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd17;
    end else if (p_Result_38_fu_693_p3[18] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd18;
    end else if (p_Result_38_fu_693_p3[19] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd19;
    end else if (p_Result_38_fu_693_p3[20] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd20;
    end else if (p_Result_38_fu_693_p3[21] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd21;
    end else if (p_Result_38_fu_693_p3[22] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd22;
    end else if (p_Result_38_fu_693_p3[23] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd23;
    end else if (p_Result_38_fu_693_p3[24] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd24;
    end else if (p_Result_38_fu_693_p3[25] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd25;
    end else if (p_Result_38_fu_693_p3[26] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd26;
    end else if (p_Result_38_fu_693_p3[27] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd27;
    end else if (p_Result_38_fu_693_p3[28] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd28;
    end else if (p_Result_38_fu_693_p3[29] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd29;
    end else if (p_Result_38_fu_693_p3[30] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd30;
    end else if (p_Result_38_fu_693_p3[31] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd31;
    end else if (p_Result_38_fu_693_p3[32] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd32;
    end else if (p_Result_38_fu_693_p3[33] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd33;
    end else if (p_Result_38_fu_693_p3[34] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd34;
    end else if (p_Result_38_fu_693_p3[35] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd35;
    end else if (p_Result_38_fu_693_p3[36] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd36;
    end else if (p_Result_38_fu_693_p3[37] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd37;
    end else if (p_Result_38_fu_693_p3[38] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd38;
    end else if (p_Result_38_fu_693_p3[39] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd39;
    end else if (p_Result_38_fu_693_p3[40] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd40;
    end else if (p_Result_38_fu_693_p3[41] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd41;
    end else if (p_Result_38_fu_693_p3[42] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd42;
    end else if (p_Result_38_fu_693_p3[43] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd43;
    end else if (p_Result_38_fu_693_p3[44] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd44;
    end else if (p_Result_38_fu_693_p3[45] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd45;
    end else if (p_Result_38_fu_693_p3[46] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd46;
    end else if (p_Result_38_fu_693_p3[47] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd47;
    end else if (p_Result_38_fu_693_p3[48] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd48;
    end else if (p_Result_38_fu_693_p3[49] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd49;
    end else if (p_Result_38_fu_693_p3[50] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd50;
    end else if (p_Result_38_fu_693_p3[51] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd51;
    end else if (p_Result_38_fu_693_p3[52] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd52;
    end else if (p_Result_38_fu_693_p3[53] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd53;
    end else if (p_Result_38_fu_693_p3[54] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd54;
    end else if (p_Result_38_fu_693_p3[55] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd55;
    end else if (p_Result_38_fu_693_p3[56] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd56;
    end else if (p_Result_38_fu_693_p3[57] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd57;
    end else if (p_Result_38_fu_693_p3[58] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd58;
    end else if (p_Result_38_fu_693_p3[59] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd59;
    end else if (p_Result_38_fu_693_p3[60] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd60;
    end else if (p_Result_38_fu_693_p3[61] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd61;
    end else if (p_Result_38_fu_693_p3[62] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd62;
    end else if (p_Result_38_fu_693_p3[63] == 1'b1) begin
        tmp_2_fu_701_p3 = 64'd63;
    end else begin
        tmp_2_fu_701_p3 = 64'd64;
    end
end

assign tmp_3_fu_1283_p3 = {{1'd1}, {trunc_ln565_2_fu_1279_p1}};

assign tmp_4_fu_396_p3 = {{1'd1}, {trunc_ln565_fu_392_p1}};

assign tmp_6_fu_923_p3 = {{p_Result_37_reg_1711}, {add_ln915_fu_917_p2}};

assign tmp_7_fu_994_p3 = {{1'd1}, {trunc_ln565_1_fu_990_p1}};

assign tmp_V_4_fu_672_p3 = ((p_Result_37_fu_660_p3[0:0] === 1'b1) ? tmp_V_fu_667_p2 : mul_ln1118_fu_1618_p2);

assign tmp_V_fu_667_p2 = ($signed(24'd0) - $signed(mul_ln1118_fu_1618_p2));

assign trunc_ln31_fu_1247_p1 = bitcast_ln31_fu_1243_p1[62:0];

assign trunc_ln556_1_fu_964_p1 = ireg_V_1_fu_960_p1[62:0];

assign trunc_ln556_fu_366_p1 = ireg_V_fu_363_p1[62:0];

assign trunc_ln565_1_fu_990_p1 = ireg_V_1_fu_960_p1[51:0];

assign trunc_ln565_2_fu_1279_p1 = ireg_V_2_fu_1251_p2[51:0];

assign trunc_ln565_fu_392_p1 = ireg_V_fu_363_p1[51:0];

assign trunc_ln583_1_fu_1064_p1 = man_V_5_fu_1012_p3[15:0];

assign trunc_ln583_2_fu_1357_p1 = man_V_8_fu_1301_p3[15:0];

assign trunc_ln583_fu_470_p1 = man_V_2_fu_414_p3[15:0];

assign trunc_ln586_1_fu_1210_p1 = ashr_ln586_1_fu_1205_p2[15:0];

assign trunc_ln586_2_fu_1393_p1 = ashr_ln586_2_fu_1387_p2[15:0];

assign trunc_ln586_fu_506_p1 = ashr_ln586_fu_500_p2[15:0];

assign trunc_ln893_fu_713_p1 = tmp_2_fu_701_p3[10:0];

assign trunc_ln897_fu_744_p1 = sub_ln894_fu_717_p2[5:0];

assign w_V_fu_644_p3 = ((or_ln603_2_fu_638_p2[0:0] === 1'b1) ? select_ln603_2_fu_630_p3 : 16'd0);

assign xor_ln571_1_fu_1106_p2 = (icmp_ln571_1_fu_1020_p2 ^ 1'd1);

assign xor_ln571_2_fu_1423_p2 = (icmp_ln571_2_fu_1309_p2 ^ 1'd1);

assign xor_ln571_fu_536_p2 = (icmp_ln571_fu_422_p2 ^ 1'd1);

assign xor_ln581_1_fu_1160_p2 = (or_ln581_1_fu_1154_p2 ^ 1'd1);

assign xor_ln581_2_fu_1477_p2 = (or_ln581_2_fu_1471_p2 ^ 1'd1);

assign xor_ln581_fu_590_p2 = (or_ln581_fu_584_p2 ^ 1'd1);

assign xor_ln582_1_fu_1124_p2 = (or_ln582_1_fu_1118_p2 ^ 1'd1);

assign xor_ln582_2_fu_1441_p2 = (or_ln582_2_fu_1435_p2 ^ 1'd1);

assign xor_ln582_fu_554_p2 = (or_ln582_fu_548_p2 ^ 1'd1);

assign xor_ln585_1_fu_1136_p2 = (icmp_ln585_1_fu_1068_p2 ^ 1'd1);

assign xor_ln585_2_fu_1453_p2 = (icmp_ln585_2_fu_1361_p2 ^ 1'd1);

assign xor_ln585_fu_566_p2 = (icmp_ln585_fu_474_p2 ^ 1'd1);

assign xor_ln899_fu_789_p2 = (tmp_17_fu_781_p3 ^ 1'd1);

assign zext_ln1118_fu_342_p1 = tmp_V_2_reg_258;

assign zext_ln19_fu_336_p1 = tmp_V_2_reg_258;

assign zext_ln35_fu_954_p1 = j_0_reg_269_pp0_iter11_reg;

assign zext_ln42_fu_1612_p1 = i_1_reg_281;

assign zext_ln461_1_fu_986_p1 = exp_tmp_V_1_fu_976_p4;

assign zext_ln461_2_fu_1275_p1 = exp_tmp_V_2_fu_1265_p4;

assign zext_ln461_fu_388_p1 = exp_tmp_V_fu_378_p4;

assign zext_ln586_1_fu_1201_p1 = $unsigned(sext_ln581_1_fu_1198_p1);

assign zext_ln586_2_fu_1383_p1 = $unsigned(sext_ln581_2_fu_1347_p1);

assign zext_ln586_fu_496_p1 = $unsigned(sext_ln581_fu_460_p1);

assign zext_ln897_fu_754_p1 = sub_ln897_fu_748_p2;

assign zext_ln908_1_fu_856_p1 = sub_ln908_fu_850_p2;

assign zext_ln908_2_fu_846_p1 = lshr_ln908_fu_841_p2;

assign zext_ln908_fu_837_p1 = add_ln908_fu_831_p2;

assign zext_ln911_fu_874_p1 = or_ln_fu_814_p3;

always @ (posedge ap_clk) begin
    zext_ln1118_reg_1672[23:9] <= 15'b000000000000000;
    zext_ln42_reg_1837[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //dft
