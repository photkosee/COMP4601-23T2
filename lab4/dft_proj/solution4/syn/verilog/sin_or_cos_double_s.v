// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sin_or_cos_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        t_in,
        do_cos,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv32_0 = 32'd0;




input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [63:0] t_in;
input   do_cos;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] ref_4oPi_table_256_V_address0;
reg    ref_4oPi_table_256_V_ce0;
wire   [255:0] ref_4oPi_table_256_V_q0;
wire   [7:0] fourth_order_double_4_address0;
reg    fourth_order_double_4_ce0;
wire   [58:0] fourth_order_double_4_q0;
wire   [7:0] fourth_order_double_5_address0;
reg    fourth_order_double_5_ce0;
wire   [51:0] fourth_order_double_5_q0;
wire   [7:0] fourth_order_double_6_address0;
reg    fourth_order_double_6_ce0;
wire   [43:0] fourth_order_double_6_q0;
wire   [7:0] fourth_order_double_7_address0;
reg    fourth_order_double_7_ce0;
wire   [32:0] fourth_order_double_7_q0;
wire   [7:0] fourth_order_double_s_address0;
reg    fourth_order_double_s_ce0;
wire   [24:0] fourth_order_double_s_q0;
reg   [0:0] do_cos_read_reg_1542;
reg   [0:0] do_cos_read_reg_1542_pp0_iter1_reg;
reg   [0:0] do_cos_read_reg_1542_pp0_iter2_reg;
reg   [0:0] do_cos_read_reg_1542_pp0_iter3_reg;
reg   [0:0] do_cos_read_reg_1542_pp0_iter4_reg;
reg   [0:0] do_cos_read_reg_1542_pp0_iter5_reg;
reg   [0:0] do_cos_read_reg_1542_pp0_iter6_reg;
reg   [0:0] do_cos_read_reg_1542_pp0_iter7_reg;
reg   [0:0] do_cos_read_reg_1542_pp0_iter8_reg;
reg   [0:0] do_cos_read_reg_1542_pp0_iter9_reg;
reg   [0:0] p_Result_s_reg_1549;
reg   [0:0] p_Result_s_reg_1549_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_1549_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_1549_pp0_iter3_reg;
reg   [0:0] p_Result_s_reg_1549_pp0_iter4_reg;
wire   [10:0] tmp_V_fu_320_p4;
reg   [10:0] tmp_V_reg_1555;
reg   [10:0] tmp_V_reg_1555_pp0_iter1_reg;
reg   [10:0] tmp_V_reg_1555_pp0_iter2_reg;
reg   [10:0] tmp_V_reg_1555_pp0_iter3_reg;
wire   [51:0] tmp_V_1_fu_330_p1;
reg   [51:0] tmp_V_1_reg_1562;
reg   [51:0] tmp_V_1_reg_1562_pp0_iter1_reg;
wire   [0:0] closepath_fu_334_p2;
reg   [0:0] closepath_reg_1568;
reg   [0:0] closepath_reg_1568_pp0_iter1_reg;
reg   [0:0] closepath_reg_1568_pp0_iter2_reg;
reg   [0:0] closepath_reg_1568_pp0_iter3_reg;
wire   [6:0] trunc_ln601_fu_369_p1;
reg   [6:0] trunc_ln601_reg_1579;
reg   [169:0] ret_V_14_reg_1584;
wire   [0:0] icmp_ln833_1_fu_412_p2;
reg   [0:0] icmp_ln833_1_reg_1599;
reg   [0:0] icmp_ln833_1_reg_1599_pp0_iter3_reg;
reg   [0:0] icmp_ln833_1_reg_1599_pp0_iter4_reg;
reg   [0:0] icmp_ln833_1_reg_1599_pp0_iter5_reg;
reg   [0:0] icmp_ln833_1_reg_1599_pp0_iter6_reg;
reg   [0:0] icmp_ln833_1_reg_1599_pp0_iter7_reg;
reg   [0:0] icmp_ln833_1_reg_1599_pp0_iter8_reg;
reg   [0:0] icmp_ln833_1_reg_1599_pp0_iter9_reg;
reg   [123:0] p_Val2_36_reg_1605;
reg   [2:0] trunc_ln_i_reg_1611;
wire   [2:0] p_Val2_37_fu_449_p3;
reg   [2:0] p_Val2_37_reg_1616;
reg   [62:0] Mx_V_reg_1622;
reg   [62:0] Mx_V_reg_1622_pp0_iter5_reg;
reg   [62:0] Mx_V_reg_1622_pp0_iter6_reg;
reg   [62:0] Mx_V_reg_1622_pp0_iter7_reg;
wire  signed [10:0] Ex_V_fu_543_p2;
reg  signed [10:0] Ex_V_reg_1629;
reg  signed [10:0] Ex_V_reg_1629_pp0_iter5_reg;
reg  signed [10:0] Ex_V_reg_1629_pp0_iter6_reg;
reg  signed [10:0] Ex_V_reg_1629_pp0_iter7_reg;
reg  signed [10:0] Ex_V_reg_1629_pp0_iter8_reg;
reg  signed [10:0] Ex_V_reg_1629_pp0_iter9_reg;
wire   [0:0] isNeg_fu_553_p3;
reg   [0:0] isNeg_reg_1634;
wire   [11:0] ush_fu_567_p3;
reg   [11:0] ush_reg_1639;
wire   [0:0] icmp_ln833_fu_575_p2;
reg   [0:0] icmp_ln833_reg_1644;
reg   [0:0] icmp_ln833_reg_1644_pp0_iter5_reg;
reg   [0:0] icmp_ln833_reg_1644_pp0_iter6_reg;
reg   [0:0] icmp_ln833_reg_1644_pp0_iter7_reg;
reg   [0:0] icmp_ln833_reg_1644_pp0_iter8_reg;
reg   [0:0] icmp_ln833_reg_1644_pp0_iter9_reg;
wire   [0:0] icmp_ln833_2_fu_580_p2;
reg   [0:0] icmp_ln833_2_reg_1650;
reg   [0:0] icmp_ln833_2_reg_1650_pp0_iter5_reg;
reg   [0:0] icmp_ln833_2_reg_1650_pp0_iter6_reg;
reg   [0:0] icmp_ln833_2_reg_1650_pp0_iter7_reg;
reg   [0:0] icmp_ln833_2_reg_1650_pp0_iter8_reg;
reg   [0:0] icmp_ln833_2_reg_1650_pp0_iter9_reg;
wire   [0:0] cos_basis_fu_636_p3;
reg   [0:0] cos_basis_reg_1658;
reg   [0:0] cos_basis_reg_1658_pp0_iter6_reg;
reg   [0:0] cos_basis_reg_1658_pp0_iter7_reg;
reg   [0:0] cos_basis_reg_1658_pp0_iter8_reg;
reg   [0:0] cos_basis_reg_1658_pp0_iter9_reg;
wire   [55:0] B_V_fu_653_p1;
reg   [55:0] B_V_reg_1664;
wire   [97:0] r_V_5_fu_667_p1;
reg   [97:0] r_V_5_reg_1669;
reg   [48:0] B_squared_V_reg_1674;
wire   [63:0] zext_ln498_fu_706_p1;
reg   [63:0] zext_ln498_reg_1680;
wire   [0:0] and_ln300_fu_802_p2;
reg   [0:0] and_ln300_reg_1697;
reg   [0:0] and_ln300_reg_1697_pp0_iter6_reg;
reg   [0:0] and_ln300_reg_1697_pp0_iter7_reg;
reg   [0:0] and_ln300_reg_1697_pp0_iter8_reg;
reg   [0:0] and_ln300_reg_1697_pp0_iter9_reg;
wire   [0:0] p_Repl2_2_fu_822_p3;
reg   [0:0] p_Repl2_2_reg_1703;
reg   [0:0] p_Repl2_2_reg_1703_pp0_iter6_reg;
reg   [0:0] p_Repl2_2_reg_1703_pp0_iter7_reg;
reg   [0:0] p_Repl2_2_reg_1703_pp0_iter8_reg;
reg   [0:0] p_Repl2_2_reg_1703_pp0_iter9_reg;
reg   [41:0] B_third_power_V_reg_1708;
reg   [34:0] B_fourth_power_V_reg_1713;
reg   [55:0] trunc_ln1_reg_1723;
reg   [47:0] trunc_ln662_1_reg_1728;
wire   [63:0] ret_V_fu_1000_p2;
reg   [63:0] ret_V_reg_1743;
reg   [62:0] result_V_reg_1748;
reg   [15:0] p_Result_1_i_reg_1754;
reg   [15:0] p_Result_13_1_i_reg_1759;
reg   [15:0] p_Result_13_2_i_reg_1764;
reg   [15:0] p_Result_13_2_i_reg_1764_pp0_iter9_reg;
reg   [14:0] p_Result_i_49_reg_1769;
reg   [14:0] p_Result_i_49_reg_1769_pp0_iter9_reg;
reg   [31:0] tmp_i_i2_fu_1123_p3;
reg   [31:0] tmp_i_i2_reg_1774;
reg   [31:0] tmp_i2_i_fu_1141_p3;
reg   [31:0] tmp_i2_i_reg_1780;
wire   [62:0] shl_ln1253_fu_1153_p2;
reg   [62:0] shl_ln1253_reg_1787;
wire   [0:0] icmp_ln1452_fu_1158_p2;
reg   [0:0] icmp_ln1452_reg_1793;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln635_fu_364_p1;
wire   [63:0] p_Val2_s_fu_308_p1;
wire   [10:0] add_ln114_1_fu_340_p2;
wire   [10:0] addr_V_fu_346_p3;
wire   [3:0] p_Result_i_i_fu_354_p4;
wire   [255:0] zext_ln744_fu_373_p1;
wire   [255:0] r_V_17_fu_376_p2;
wire   [52:0] p_Result_20_fu_392_p3;
wire   [169:0] grp_fu_406_p0;
wire   [52:0] grp_fu_406_p1;
wire   [222:0] grp_fu_406_p2;
wire   [10:0] add_ln114_fu_437_p2;
wire   [0:0] trunc_ln745_fu_455_p1;
wire   [123:0] Mx_bits_V_1_fu_459_p2;
wire   [123:0] p_Val2_7_fu_464_p3;
wire   [60:0] p_Result_i_i_48_fu_471_p4;
wire   [61:0] p_Result_21_fu_481_p3;
reg   [61:0] p_Result_8_fu_489_p4;
wire   [63:0] p_Result_22_fu_499_p3;
reg   [63:0] tmp_i_i_fu_507_p3;
wire   [5:0] Mx_zeros_V_fu_515_p1;
wire   [123:0] zext_ln1253_fu_519_p1;
wire   [123:0] r_V_18_fu_523_p2;
wire   [10:0] select_ln482_fu_442_p3;
wire   [10:0] zext_ln655_fu_539_p1;
wire  signed [11:0] sext_ln1334_fu_549_p1;
wire   [11:0] sub_ln1311_fu_561_p2;
wire  signed [31:0] sext_ln1311_fu_585_p1;
wire   [62:0] zext_ln1287_fu_588_p1;
wire   [62:0] r_V_fu_592_p2;
wire   [62:0] r_V_3_fu_597_p2;
wire   [0:0] tmp_1_fu_609_p10;
wire   [0:0] xor_ln271_fu_630_p2;
wire   [62:0] r_V_19_fu_602_p3;
wire   [48:0] B_trunc_V_fu_657_p4;
wire   [48:0] r_V_20_fu_671_p0;
wire   [48:0] r_V_20_fu_671_p1;
wire   [97:0] r_V_20_fu_671_p2;
wire   [0:0] xor_ln29_fu_687_p2;
wire   [0:0] sin_basis_fu_692_p2;
wire   [6:0] p_Result_i_fu_643_p4;
wire   [7:0] p_Result_23_fu_698_p3;
wire   [3:0] p_Result_29_fu_712_p3;
wire   [0:0] tmp_fu_718_p18;
wire   [0:0] tmp_2_fu_756_p18;
wire   [0:0] select_ln271_fu_794_p3;
wire   [0:0] xor_ln311_fu_811_p2;
wire   [0:0] and_ln307_fu_806_p2;
wire   [0:0] and_ln311_fu_816_p2;
wire   [48:0] r_V_21_fu_833_p0;
wire   [48:0] r_V_21_fu_833_p1;
wire   [97:0] r_V_8_fu_830_p1;
wire   [97:0] r_V_21_fu_833_p2;
wire   [48:0] r_V_22_fu_848_p0;
wire   [48:0] r_V_22_fu_848_p1;
wire   [97:0] r_V_22_fu_848_p2;
wire   [55:0] r_V_23_fu_871_p0;
wire  signed [51:0] r_V_23_fu_871_p1;
wire   [107:0] r_V_23_fu_871_p2;
wire   [48:0] r_V_24_fu_894_p0;
wire  signed [43:0] r_V_24_fu_894_p1;
wire   [92:0] r_V_24_fu_894_p2;
wire   [41:0] r_V_25_fu_925_p0;
wire   [32:0] r_V_25_fu_925_p1;
wire   [74:0] r_V_25_fu_925_p2;
wire   [34:0] r_V_26_fu_948_p0;
wire   [24:0] r_V_26_fu_948_p1;
wire   [59:0] r_V_26_fu_948_p2;
wire   [62:0] t1_V_fu_910_p3;
wire  signed [63:0] lhs_V_1_fu_964_p1;
wire  signed [63:0] rhs_V_2_fu_968_p1;
wire   [63:0] ret_V_16_fu_971_p2;
wire  signed [63:0] sext_ln657_fu_977_p1;
wire   [36:0] tmp_3_fu_931_p4;
wire   [63:0] ret_V_17_fu_980_p2;
wire   [63:0] zext_ln657_fu_986_p1;
wire   [28:0] tmp_4_fu_954_p4;
wire   [63:0] ret_V_18_fu_990_p2;
wire   [63:0] zext_ln657_1_fu_996_p1;
wire   [62:0] select_ln272_1_fu_1006_p3;
wire  signed [63:0] r_V_27_fu_1019_p0;
wire   [62:0] r_V_27_fu_1019_p1;
wire   [125:0] r_V_27_fu_1019_p2;
wire   [16:0] tmp_i_fu_1075_p3;
wire   [16:0] tmp_4_i_fu_1094_p3;
wire   [31:0] p_Val2_27_fu_1082_p5;
reg   [31:0] p_Result_25_fu_1113_p4;
wire   [31:0] p_Val2_28_fu_1101_p5;
reg   [31:0] p_Result_26_fu_1131_p4;
wire   [62:0] zext_ln1287_1_fu_1149_p1;
wire   [10:0] select_ln272_fu_1163_p3;
wire   [16:0] tmp_5_i_fu_1173_p3;
wire   [15:0] tmp_6_i_fu_1192_p3;
wire   [31:0] p_Val2_29_fu_1180_p5;
reg   [31:0] p_Result_27_fu_1211_p4;
wire   [31:0] p_Result_24_fu_1199_p5;
reg   [31:0] p_Result_28_fu_1229_p4;
wire   [62:0] zext_ln1287_2_fu_1257_p1;
wire   [31:0] add_ln442_fu_1252_p2;
reg   [31:0] tmp_i4_i_fu_1221_p3;
wire   [62:0] shl_ln1253_1_fu_1260_p2;
wire   [62:0] zext_ln1287_3_fu_1276_p1;
wire   [31:0] add_ln442_1_fu_1270_p2;
reg   [31:0] tmp_i6_i_fu_1239_p3;
wire   [62:0] shl_ln1253_2_fu_1280_p2;
wire   [62:0] zext_ln1287_4_fu_1298_p1;
wire   [0:0] icmp_ln444_1_fu_1265_p2;
wire   [0:0] icmp_ln444_fu_1247_p2;
wire   [0:0] xor_ln444_fu_1308_p2;
wire   [0:0] icmp_ln444_2_fu_1286_p2;
wire   [0:0] and_ln444_1_fu_1320_p2;
wire   [0:0] and_ln444_2_fu_1326_p2;
wire   [0:0] and_ln444_fu_1314_p2;
wire   [31:0] add_ln442_2_fu_1292_p2;
wire   [0:0] or_ln444_fu_1332_p2;
wire   [31:0] select_ln444_fu_1338_p3;
wire   [31:0] select_ln444_1_fu_1346_p3;
wire  signed [11:0] rhs_V_fu_1169_p1;
wire   [11:0] add_ln452_fu_1361_p2;
wire  signed [31:0] sext_ln452_fu_1367_p1;
wire   [31:0] select_ln444_2_fu_1353_p3;
wire   [31:0] newexp_fu_1371_p2;
wire   [0:0] tmp_11_fu_1377_p3;
wire   [62:0] shl_ln1253_3_fu_1302_p2;
wire   [51:0] tmp_5_fu_1394_p4;
wire   [51:0] tmp_6_fu_1404_p4;
wire   [51:0] tmp_7_fu_1422_p4;
wire   [51:0] tmp_8_fu_1432_p4;
wire   [51:0] select_ln444_3_fu_1414_p3;
wire   [51:0] select_ln444_4_fu_1441_p3;
wire   [0:0] or_ln453_fu_1385_p2;
wire   [51:0] select_ln444_5_fu_1449_p3;
wire   [0:0] or_ln311_fu_1479_p2;
wire   [10:0] select_ln311_1_fu_1472_p3;
wire   [10:0] empty_fu_1390_p1;
wire   [10:0] select_ln307_fu_1465_p3;
wire   [10:0] select_ln311_fu_1484_p3;
wire   [0:0] and_ln300_1_fu_1499_p2;
wire   [0:0] xor_ln300_fu_1503_p2;
wire   [0:0] or_ln300_fu_1517_p2;
wire   [51:0] select_ln300_2_fu_1509_p3;
wire   [51:0] significand_V_fu_1457_p3;
wire   [10:0] ret_V_12_fu_1492_p3;
wire   [51:0] ret_V_13_fu_1521_p3;
wire   [63:0] p_Result_30_fu_1529_p4;
reg    grp_fu_406_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to9;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [222:0] grp_fu_406_p00;
wire   [222:0] grp_fu_406_p10;
wire   [107:0] r_V_23_fu_871_p00;
wire   [92:0] r_V_24_fu_894_p00;
wire   [74:0] r_V_25_fu_925_p00;
wire   [74:0] r_V_25_fu_925_p10;
wire   [59:0] r_V_26_fu_948_p00;
wire   [59:0] r_V_26_fu_948_p10;
wire   [125:0] r_V_27_fu_1019_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
end

sin_or_cos_doublebkb #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_256_V_address0),
    .ce0(ref_4oPi_table_256_V_ce0),
    .q0(ref_4oPi_table_256_V_q0)
);

sin_or_cos_doublecud #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_4_address0),
    .ce0(fourth_order_double_4_ce0),
    .q0(fourth_order_double_4_q0)
);

sin_or_cos_doubledEe #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_5_address0),
    .ce0(fourth_order_double_5_ce0),
    .q0(fourth_order_double_5_q0)
);

sin_or_cos_doubleeOg #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_6_address0),
    .ce0(fourth_order_double_6_ce0),
    .q0(fourth_order_double_6_q0)
);

sin_or_cos_doublefYi #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_7_address0),
    .ce0(fourth_order_double_7_ce0),
    .q0(fourth_order_double_7_q0)
);

sin_or_cos_doubleg8j #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_s_address0),
    .ce0(fourth_order_double_s_ce0),
    .q0(fourth_order_double_s_q0)
);

dft_mul_170ns_53nhbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 170 ),
    .din1_WIDTH( 53 ),
    .dout_WIDTH( 223 ))
dft_mul_170ns_53nhbi_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_406_p0),
    .din1(grp_fu_406_p1),
    .ce(grp_fu_406_ce),
    .dout(grp_fu_406_p2)
);

dft_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
dft_mux_83_1_1_1_U2(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(p_Val2_37_reg_1616),
    .dout(tmp_1_fu_609_p10)
);

dft_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
dft_mux_164_1_1_1_U3(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_29_fu_712_p3),
    .dout(tmp_fu_718_p18)
);

dft_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
dft_mux_164_1_1_1_U4(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_29_fu_712_p3),
    .dout(tmp_2_fu_756_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_V_reg_1664 <= B_V_fu_653_p1;
        B_fourth_power_V_reg_1713 <= {{r_V_22_fu_848_p2[97:63]}};
        B_squared_V_reg_1674 <= {{r_V_20_fu_671_p2[97:49]}};
        B_third_power_V_reg_1708 <= {{r_V_21_fu_833_p2[97:56]}};
        Ex_V_reg_1629 <= Ex_V_fu_543_p2;
        Ex_V_reg_1629_pp0_iter5_reg <= Ex_V_reg_1629;
        Ex_V_reg_1629_pp0_iter6_reg <= Ex_V_reg_1629_pp0_iter5_reg;
        Ex_V_reg_1629_pp0_iter7_reg <= Ex_V_reg_1629_pp0_iter6_reg;
        Ex_V_reg_1629_pp0_iter8_reg <= Ex_V_reg_1629_pp0_iter7_reg;
        Ex_V_reg_1629_pp0_iter9_reg <= Ex_V_reg_1629_pp0_iter8_reg;
        Mx_V_reg_1622 <= {{r_V_18_fu_523_p2[123:61]}};
        Mx_V_reg_1622_pp0_iter5_reg <= Mx_V_reg_1622;
        Mx_V_reg_1622_pp0_iter6_reg <= Mx_V_reg_1622_pp0_iter5_reg;
        Mx_V_reg_1622_pp0_iter7_reg <= Mx_V_reg_1622_pp0_iter6_reg;
        and_ln300_reg_1697 <= and_ln300_fu_802_p2;
        and_ln300_reg_1697_pp0_iter6_reg <= and_ln300_reg_1697;
        and_ln300_reg_1697_pp0_iter7_reg <= and_ln300_reg_1697_pp0_iter6_reg;
        and_ln300_reg_1697_pp0_iter8_reg <= and_ln300_reg_1697_pp0_iter7_reg;
        and_ln300_reg_1697_pp0_iter9_reg <= and_ln300_reg_1697_pp0_iter8_reg;
        closepath_reg_1568_pp0_iter2_reg <= closepath_reg_1568_pp0_iter1_reg;
        closepath_reg_1568_pp0_iter3_reg <= closepath_reg_1568_pp0_iter2_reg;
        cos_basis_reg_1658 <= cos_basis_fu_636_p3;
        cos_basis_reg_1658_pp0_iter6_reg <= cos_basis_reg_1658;
        cos_basis_reg_1658_pp0_iter7_reg <= cos_basis_reg_1658_pp0_iter6_reg;
        cos_basis_reg_1658_pp0_iter8_reg <= cos_basis_reg_1658_pp0_iter7_reg;
        cos_basis_reg_1658_pp0_iter9_reg <= cos_basis_reg_1658_pp0_iter8_reg;
        do_cos_read_reg_1542_pp0_iter2_reg <= do_cos_read_reg_1542_pp0_iter1_reg;
        do_cos_read_reg_1542_pp0_iter3_reg <= do_cos_read_reg_1542_pp0_iter2_reg;
        do_cos_read_reg_1542_pp0_iter4_reg <= do_cos_read_reg_1542_pp0_iter3_reg;
        do_cos_read_reg_1542_pp0_iter5_reg <= do_cos_read_reg_1542_pp0_iter4_reg;
        do_cos_read_reg_1542_pp0_iter6_reg <= do_cos_read_reg_1542_pp0_iter5_reg;
        do_cos_read_reg_1542_pp0_iter7_reg <= do_cos_read_reg_1542_pp0_iter6_reg;
        do_cos_read_reg_1542_pp0_iter8_reg <= do_cos_read_reg_1542_pp0_iter7_reg;
        do_cos_read_reg_1542_pp0_iter9_reg <= do_cos_read_reg_1542_pp0_iter8_reg;
        icmp_ln1452_reg_1793 <= icmp_ln1452_fu_1158_p2;
        icmp_ln833_1_reg_1599 <= icmp_ln833_1_fu_412_p2;
        icmp_ln833_1_reg_1599_pp0_iter3_reg <= icmp_ln833_1_reg_1599;
        icmp_ln833_1_reg_1599_pp0_iter4_reg <= icmp_ln833_1_reg_1599_pp0_iter3_reg;
        icmp_ln833_1_reg_1599_pp0_iter5_reg <= icmp_ln833_1_reg_1599_pp0_iter4_reg;
        icmp_ln833_1_reg_1599_pp0_iter6_reg <= icmp_ln833_1_reg_1599_pp0_iter5_reg;
        icmp_ln833_1_reg_1599_pp0_iter7_reg <= icmp_ln833_1_reg_1599_pp0_iter6_reg;
        icmp_ln833_1_reg_1599_pp0_iter8_reg <= icmp_ln833_1_reg_1599_pp0_iter7_reg;
        icmp_ln833_1_reg_1599_pp0_iter9_reg <= icmp_ln833_1_reg_1599_pp0_iter8_reg;
        icmp_ln833_2_reg_1650 <= icmp_ln833_2_fu_580_p2;
        icmp_ln833_2_reg_1650_pp0_iter5_reg <= icmp_ln833_2_reg_1650;
        icmp_ln833_2_reg_1650_pp0_iter6_reg <= icmp_ln833_2_reg_1650_pp0_iter5_reg;
        icmp_ln833_2_reg_1650_pp0_iter7_reg <= icmp_ln833_2_reg_1650_pp0_iter6_reg;
        icmp_ln833_2_reg_1650_pp0_iter8_reg <= icmp_ln833_2_reg_1650_pp0_iter7_reg;
        icmp_ln833_2_reg_1650_pp0_iter9_reg <= icmp_ln833_2_reg_1650_pp0_iter8_reg;
        icmp_ln833_reg_1644 <= icmp_ln833_fu_575_p2;
        icmp_ln833_reg_1644_pp0_iter5_reg <= icmp_ln833_reg_1644;
        icmp_ln833_reg_1644_pp0_iter6_reg <= icmp_ln833_reg_1644_pp0_iter5_reg;
        icmp_ln833_reg_1644_pp0_iter7_reg <= icmp_ln833_reg_1644_pp0_iter6_reg;
        icmp_ln833_reg_1644_pp0_iter8_reg <= icmp_ln833_reg_1644_pp0_iter7_reg;
        icmp_ln833_reg_1644_pp0_iter9_reg <= icmp_ln833_reg_1644_pp0_iter8_reg;
        isNeg_reg_1634 <= Ex_V_fu_543_p2[32'd10];
        p_Repl2_2_reg_1703 <= p_Repl2_2_fu_822_p3;
        p_Repl2_2_reg_1703_pp0_iter6_reg <= p_Repl2_2_reg_1703;
        p_Repl2_2_reg_1703_pp0_iter7_reg <= p_Repl2_2_reg_1703_pp0_iter6_reg;
        p_Repl2_2_reg_1703_pp0_iter8_reg <= p_Repl2_2_reg_1703_pp0_iter7_reg;
        p_Repl2_2_reg_1703_pp0_iter9_reg <= p_Repl2_2_reg_1703_pp0_iter8_reg;
        p_Result_13_1_i_reg_1759 <= {{r_V_27_fu_1019_p2[109:94]}};
        p_Result_13_2_i_reg_1764 <= {{r_V_27_fu_1019_p2[93:78]}};
        p_Result_13_2_i_reg_1764_pp0_iter9_reg <= p_Result_13_2_i_reg_1764;
        p_Result_1_i_reg_1754 <= {{r_V_27_fu_1019_p2[125:110]}};
        p_Result_i_49_reg_1769 <= {{r_V_27_fu_1019_p2[77:63]}};
        p_Result_i_49_reg_1769_pp0_iter9_reg <= p_Result_i_49_reg_1769;
        p_Result_s_reg_1549_pp0_iter2_reg <= p_Result_s_reg_1549_pp0_iter1_reg;
        p_Result_s_reg_1549_pp0_iter3_reg <= p_Result_s_reg_1549_pp0_iter2_reg;
        p_Result_s_reg_1549_pp0_iter4_reg <= p_Result_s_reg_1549_pp0_iter3_reg;
        p_Val2_36_reg_1605 <= {{grp_fu_406_p2[166:43]}};
        p_Val2_37_reg_1616 <= p_Val2_37_fu_449_p3;
        r_V_5_reg_1669[48 : 0] <= r_V_5_fu_667_p1[48 : 0];
        result_V_reg_1748 <= {{r_V_27_fu_1019_p2[125:63]}};
        ret_V_reg_1743 <= ret_V_fu_1000_p2;
        shl_ln1253_reg_1787 <= shl_ln1253_fu_1153_p2;
        tmp_V_reg_1555_pp0_iter2_reg <= tmp_V_reg_1555_pp0_iter1_reg;
        tmp_V_reg_1555_pp0_iter3_reg <= tmp_V_reg_1555_pp0_iter2_reg;
        tmp_i2_i_reg_1780 <= tmp_i2_i_fu_1141_p3;
        tmp_i_i2_reg_1774 <= tmp_i_i2_fu_1123_p3;
        trunc_ln1_reg_1723 <= {{r_V_23_fu_871_p2[107:52]}};
        trunc_ln662_1_reg_1728 <= {{r_V_24_fu_894_p2[92:45]}};
        ush_reg_1639 <= ush_fu_567_p3;
        zext_ln498_reg_1680[7 : 0] <= zext_ln498_fu_706_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        closepath_reg_1568 <= closepath_fu_334_p2;
        closepath_reg_1568_pp0_iter1_reg <= closepath_reg_1568;
        do_cos_read_reg_1542 <= do_cos;
        do_cos_read_reg_1542_pp0_iter1_reg <= do_cos_read_reg_1542;
        p_Result_s_reg_1549 <= p_Val2_s_fu_308_p1[32'd63];
        p_Result_s_reg_1549_pp0_iter1_reg <= p_Result_s_reg_1549;
        ret_V_14_reg_1584 <= {{r_V_17_fu_376_p2[255:86]}};
        tmp_V_1_reg_1562 <= tmp_V_1_fu_330_p1;
        tmp_V_1_reg_1562_pp0_iter1_reg <= tmp_V_1_reg_1562;
        tmp_V_reg_1555 <= {{p_Val2_s_fu_308_p1[62:52]}};
        tmp_V_reg_1555_pp0_iter1_reg <= tmp_V_reg_1555;
        trunc_ln601_reg_1579 <= trunc_ln601_fu_369_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (closepath_reg_1568_pp0_iter2_reg == 1'd0))) begin
        trunc_ln_i_reg_1611 <= {{grp_fu_406_p2[169:167]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to9 = 1'b1;
    end else begin
        ap_idle_pp0_0to9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        fourth_order_double_4_ce0 = 1'b1;
    end else begin
        fourth_order_double_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        fourth_order_double_5_ce0 = 1'b1;
    end else begin
        fourth_order_double_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        fourth_order_double_6_ce0 = 1'b1;
    end else begin
        fourth_order_double_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        fourth_order_double_7_ce0 = 1'b1;
    end else begin
        fourth_order_double_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        fourth_order_double_s_ce0 = 1'b1;
    end else begin
        fourth_order_double_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_406_ce = 1'b1;
    end else begin
        grp_fu_406_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ref_4oPi_table_256_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_V_fu_653_p1 = r_V_19_fu_602_p3[55:0];

assign B_trunc_V_fu_657_p4 = {{r_V_19_fu_602_p3[55:7]}};

assign Ex_V_fu_543_p2 = (select_ln482_fu_442_p3 - zext_ln655_fu_539_p1);

assign Mx_bits_V_1_fu_459_p2 = (124'd0 - p_Val2_36_reg_1605);

assign Mx_zeros_V_fu_515_p1 = tmp_i_i_fu_507_p3[5:0];

assign add_ln114_1_fu_340_p2 = ($signed(11'd1101) + $signed(tmp_V_fu_320_p4));

assign add_ln114_fu_437_p2 = ($signed(11'd1027) + $signed(tmp_V_reg_1555_pp0_iter3_reg));

assign add_ln442_1_fu_1270_p2 = (add_ln442_fu_1252_p2 + tmp_i4_i_fu_1221_p3);

assign add_ln442_2_fu_1292_p2 = (add_ln442_1_fu_1270_p2 + tmp_i6_i_fu_1239_p3);

assign add_ln442_fu_1252_p2 = (32'd16 + tmp_i2_i_reg_1780);

assign add_ln452_fu_1361_p2 = ($signed(12'd1023) + $signed(rhs_V_fu_1169_p1));

assign addr_V_fu_346_p3 = ((closepath_fu_334_p2[0:0] === 1'b1) ? 11'd74 : add_ln114_1_fu_340_p2);

assign and_ln300_1_fu_1499_p2 = (icmp_ln833_reg_1644_pp0_iter9_reg & icmp_ln833_1_reg_1599_pp0_iter9_reg);

assign and_ln300_fu_802_p2 = (icmp_ln833_reg_1644 & icmp_ln833_1_reg_1599_pp0_iter4_reg);

assign and_ln307_fu_806_p2 = (xor_ln29_fu_687_p2 & p_Result_s_reg_1549_pp0_iter4_reg);

assign and_ln311_fu_816_p2 = (xor_ln311_fu_811_p2 & select_ln271_fu_794_p3);

assign and_ln444_1_fu_1320_p2 = (icmp_ln444_2_fu_1286_p2 & icmp_ln444_1_fu_1265_p2);

assign and_ln444_2_fu_1326_p2 = (icmp_ln444_fu_1247_p2 & and_ln444_1_fu_1320_p2);

assign and_ln444_fu_1314_p2 = (xor_ln444_fu_1308_p2 & icmp_ln444_fu_1247_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = p_Result_30_fu_1529_p4;

assign closepath_fu_334_p2 = ((tmp_V_fu_320_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign cos_basis_fu_636_p3 = ((do_cos_read_reg_1542_pp0_iter4_reg[0:0] === 1'b1) ? xor_ln271_fu_630_p2 : tmp_1_fu_609_p10);

assign empty_fu_1390_p1 = newexp_fu_1371_p2[10:0];

assign fourth_order_double_4_address0 = zext_ln498_reg_1680;

assign fourth_order_double_5_address0 = zext_ln498_fu_706_p1;

assign fourth_order_double_6_address0 = zext_ln498_fu_706_p1;

assign fourth_order_double_7_address0 = zext_ln498_reg_1680;

assign fourth_order_double_s_address0 = zext_ln498_reg_1680;

assign grp_fu_406_p0 = grp_fu_406_p00;

assign grp_fu_406_p00 = ret_V_14_reg_1584;

assign grp_fu_406_p1 = grp_fu_406_p10;

assign grp_fu_406_p10 = p_Result_20_fu_392_p3;

assign icmp_ln1452_fu_1158_p2 = ((result_V_reg_1748 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_1_fu_1265_p2 = ((tmp_i2_i_reg_1780 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln444_2_fu_1286_p2 = ((tmp_i4_i_fu_1221_p3 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_1247_p2 = ((tmp_i_i2_reg_1774 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln833_1_fu_412_p2 = ((tmp_V_1_reg_1562_pp0_iter1_reg == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln833_2_fu_580_p2 = ((tmp_V_reg_1555_pp0_iter3_reg == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln833_fu_575_p2 = ((tmp_V_reg_1555_pp0_iter3_reg == 11'd0) ? 1'b1 : 1'b0);

assign isNeg_fu_553_p3 = Ex_V_fu_543_p2[32'd10];

assign lhs_V_1_fu_964_p1 = $signed(t1_V_fu_910_p3);

assign newexp_fu_1371_p2 = ($signed(sext_ln452_fu_1367_p1) - $signed(select_ln444_2_fu_1353_p3));

assign or_ln300_fu_1517_p2 = (icmp_ln833_2_reg_1650_pp0_iter9_reg | and_ln300_reg_1697_pp0_iter9_reg);

assign or_ln311_fu_1479_p2 = (or_ln453_fu_1385_p2 | icmp_ln833_2_reg_1650_pp0_iter9_reg);

assign or_ln444_fu_1332_p2 = (and_ln444_fu_1314_p2 | and_ln444_2_fu_1326_p2);

assign or_ln453_fu_1385_p2 = (tmp_11_fu_1377_p3 | icmp_ln1452_reg_1793);

assign p_Repl2_2_fu_822_p3 = ((and_ln300_fu_802_p2[0:0] === 1'b1) ? and_ln307_fu_806_p2 : and_ln311_fu_816_p2);

assign p_Result_20_fu_392_p3 = {{1'd1}, {tmp_V_1_reg_1562_pp0_iter1_reg}};

assign p_Result_21_fu_481_p3 = {{p_Result_i_i_48_fu_471_p4}, {1'd1}};

assign p_Result_22_fu_499_p3 = {{2'd3}, {p_Result_8_fu_489_p4}};

assign p_Result_23_fu_698_p3 = {{sin_basis_fu_692_p2}, {p_Result_i_fu_643_p4}};

assign p_Result_24_fu_1199_p5 = {{tmp_6_i_fu_1192_p3}, {ap_const_lv32_0[15:0]}};

integer ap_tvar_int_0;

always @ (p_Val2_27_fu_1082_p5) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_25_fu_1113_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_25_fu_1113_p4[ap_tvar_int_0] = p_Val2_27_fu_1082_p5[31 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (p_Val2_28_fu_1101_p5) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_26_fu_1131_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_26_fu_1131_p4[ap_tvar_int_1] = p_Val2_28_fu_1101_p5[31 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Val2_29_fu_1180_p5) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_27_fu_1211_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_27_fu_1211_p4[ap_tvar_int_2] = p_Val2_29_fu_1180_p5[31 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (p_Result_24_fu_1199_p5) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            p_Result_28_fu_1229_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_28_fu_1229_p4[ap_tvar_int_3] = p_Result_24_fu_1199_p5[31 - ap_tvar_int_3];
        end
    end
end

assign p_Result_29_fu_712_p3 = {{p_Result_s_reg_1549_pp0_iter4_reg}, {p_Val2_37_reg_1616}};

assign p_Result_30_fu_1529_p4 = {{{p_Repl2_2_reg_1703_pp0_iter9_reg}, {ret_V_12_fu_1492_p3}}, {ret_V_13_fu_1521_p3}};

integer ap_tvar_int_4;

always @ (p_Result_21_fu_481_p3) begin
    for (ap_tvar_int_4 = 62 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 61 - 0) begin
            p_Result_8_fu_489_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_8_fu_489_p4[ap_tvar_int_4] = p_Result_21_fu_481_p3[61 - ap_tvar_int_4];
        end
    end
end

assign p_Result_i_fu_643_p4 = {{r_V_19_fu_602_p3[62:56]}};

assign p_Result_i_i_48_fu_471_p4 = {{p_Val2_7_fu_464_p3[123:63]}};

assign p_Result_i_i_fu_354_p4 = {{addr_V_fu_346_p3[10:7]}};

assign p_Val2_27_fu_1082_p5 = {{tmp_i_fu_1075_p3}, {ap_const_lv32_0[14:0]}};

assign p_Val2_28_fu_1101_p5 = {{tmp_4_i_fu_1094_p3}, {ap_const_lv32_0[14:0]}};

assign p_Val2_29_fu_1180_p5 = {{tmp_5_i_fu_1173_p3}, {ap_const_lv32_0[14:0]}};

assign p_Val2_37_fu_449_p3 = ((closepath_reg_1568_pp0_iter3_reg[0:0] === 1'b1) ? 3'd0 : trunc_ln_i_reg_1611);

assign p_Val2_7_fu_464_p3 = ((trunc_ln745_fu_455_p1[0:0] === 1'b1) ? Mx_bits_V_1_fu_459_p2 : p_Val2_36_reg_1605);

assign p_Val2_s_fu_308_p1 = t_in;

assign r_V_17_fu_376_p2 = ref_4oPi_table_256_V_q0 << zext_ln744_fu_373_p1;

assign r_V_18_fu_523_p2 = p_Val2_7_fu_464_p3 << zext_ln1253_fu_519_p1;

assign r_V_19_fu_602_p3 = ((isNeg_reg_1634[0:0] === 1'b1) ? r_V_fu_592_p2 : r_V_3_fu_597_p2);

assign r_V_20_fu_671_p0 = r_V_5_fu_667_p1;

assign r_V_20_fu_671_p1 = r_V_5_fu_667_p1;

assign r_V_20_fu_671_p2 = (r_V_20_fu_671_p0 * r_V_20_fu_671_p1);

assign r_V_21_fu_833_p0 = r_V_5_reg_1669;

assign r_V_21_fu_833_p1 = r_V_8_fu_830_p1;

assign r_V_21_fu_833_p2 = (r_V_21_fu_833_p0 * r_V_21_fu_833_p1);

assign r_V_22_fu_848_p0 = r_V_8_fu_830_p1;

assign r_V_22_fu_848_p1 = r_V_8_fu_830_p1;

assign r_V_22_fu_848_p2 = (r_V_22_fu_848_p0 * r_V_22_fu_848_p1);

assign r_V_23_fu_871_p0 = r_V_23_fu_871_p00;

assign r_V_23_fu_871_p00 = B_V_reg_1664;

assign r_V_23_fu_871_p1 = fourth_order_double_5_q0;

assign r_V_23_fu_871_p2 = ($signed({{1'b0}, {r_V_23_fu_871_p0}}) * $signed(r_V_23_fu_871_p1));

assign r_V_24_fu_894_p0 = r_V_24_fu_894_p00;

assign r_V_24_fu_894_p00 = B_squared_V_reg_1674;

assign r_V_24_fu_894_p1 = fourth_order_double_6_q0;

assign r_V_24_fu_894_p2 = ($signed({{1'b0}, {r_V_24_fu_894_p0}}) * $signed(r_V_24_fu_894_p1));

assign r_V_25_fu_925_p0 = r_V_25_fu_925_p00;

assign r_V_25_fu_925_p00 = B_third_power_V_reg_1708;

assign r_V_25_fu_925_p1 = r_V_25_fu_925_p10;

assign r_V_25_fu_925_p10 = fourth_order_double_7_q0;

assign r_V_25_fu_925_p2 = (r_V_25_fu_925_p0 * r_V_25_fu_925_p1);

assign r_V_26_fu_948_p0 = r_V_26_fu_948_p00;

assign r_V_26_fu_948_p00 = B_fourth_power_V_reg_1713;

assign r_V_26_fu_948_p1 = r_V_26_fu_948_p10;

assign r_V_26_fu_948_p10 = fourth_order_double_s_q0;

assign r_V_26_fu_948_p2 = (r_V_26_fu_948_p0 * r_V_26_fu_948_p1);

assign r_V_27_fu_1019_p0 = ret_V_reg_1743;

assign r_V_27_fu_1019_p1 = r_V_27_fu_1019_p10;

assign r_V_27_fu_1019_p10 = select_ln272_1_fu_1006_p3;

assign r_V_27_fu_1019_p2 = ($signed(r_V_27_fu_1019_p0) * $signed({{1'b0}, {r_V_27_fu_1019_p1}}));

assign r_V_3_fu_597_p2 = Mx_V_reg_1622 << zext_ln1287_fu_588_p1;

assign r_V_5_fu_667_p1 = B_trunc_V_fu_657_p4;

assign r_V_8_fu_830_p1 = B_squared_V_reg_1674;

assign r_V_fu_592_p2 = Mx_V_reg_1622 >> zext_ln1287_fu_588_p1;

assign ref_4oPi_table_256_V_address0 = zext_ln635_fu_364_p1;

assign ret_V_12_fu_1492_p3 = ((and_ln300_reg_1697_pp0_iter9_reg[0:0] === 1'b1) ? select_ln307_fu_1465_p3 : select_ln311_fu_1484_p3);

assign ret_V_13_fu_1521_p3 = ((or_ln300_fu_1517_p2[0:0] === 1'b1) ? select_ln300_2_fu_1509_p3 : significand_V_fu_1457_p3);

assign ret_V_16_fu_971_p2 = ($signed(lhs_V_1_fu_964_p1) + $signed(rhs_V_2_fu_968_p1));

assign ret_V_17_fu_980_p2 = ($signed(ret_V_16_fu_971_p2) + $signed(sext_ln657_fu_977_p1));

assign ret_V_18_fu_990_p2 = (ret_V_17_fu_980_p2 + zext_ln657_fu_986_p1);

assign ret_V_fu_1000_p2 = (ret_V_18_fu_990_p2 + zext_ln657_1_fu_996_p1);

assign rhs_V_2_fu_968_p1 = $signed(trunc_ln1_reg_1723);

assign rhs_V_fu_1169_p1 = $signed(select_ln272_fu_1163_p3);

assign select_ln271_fu_794_p3 = ((cos_basis_fu_636_p3[0:0] === 1'b1) ? tmp_fu_718_p18 : tmp_2_fu_756_p18);

assign select_ln272_1_fu_1006_p3 = ((cos_basis_reg_1658_pp0_iter7_reg[0:0] === 1'b1) ? 63'd9223372036854775807 : Mx_V_reg_1622_pp0_iter7_reg);

assign select_ln272_fu_1163_p3 = ((cos_basis_reg_1658_pp0_iter9_reg[0:0] === 1'b1) ? 11'd0 : Ex_V_reg_1629_pp0_iter9_reg);

assign select_ln300_2_fu_1509_p3 = ((xor_ln300_fu_1503_p2[0:0] === 1'b1) ? 52'd4503599627370495 : 52'd0);

assign select_ln307_fu_1465_p3 = ((do_cos_read_reg_1542_pp0_iter9_reg[0:0] === 1'b1) ? 11'd1023 : 11'd0);

assign select_ln311_1_fu_1472_p3 = ((icmp_ln833_2_reg_1650_pp0_iter9_reg[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign select_ln311_fu_1484_p3 = ((or_ln311_fu_1479_p2[0:0] === 1'b1) ? select_ln311_1_fu_1472_p3 : empty_fu_1390_p1);

assign select_ln444_1_fu_1346_p3 = ((icmp_ln444_fu_1247_p2[0:0] === 1'b1) ? add_ln442_1_fu_1270_p2 : tmp_i_i2_reg_1774);

assign select_ln444_2_fu_1353_p3 = ((or_ln444_fu_1332_p2[0:0] === 1'b1) ? select_ln444_fu_1338_p3 : select_ln444_1_fu_1346_p3);

assign select_ln444_3_fu_1414_p3 = ((and_ln444_2_fu_1326_p2[0:0] === 1'b1) ? tmp_5_fu_1394_p4 : tmp_6_fu_1404_p4);

assign select_ln444_4_fu_1441_p3 = ((icmp_ln444_fu_1247_p2[0:0] === 1'b1) ? tmp_7_fu_1422_p4 : tmp_8_fu_1432_p4);

assign select_ln444_5_fu_1449_p3 = ((or_ln444_fu_1332_p2[0:0] === 1'b1) ? select_ln444_3_fu_1414_p3 : select_ln444_4_fu_1441_p3);

assign select_ln444_fu_1338_p3 = ((and_ln444_2_fu_1326_p2[0:0] === 1'b1) ? add_ln442_2_fu_1292_p2 : add_ln442_fu_1252_p2);

assign select_ln482_fu_442_p3 = ((closepath_reg_1568_pp0_iter3_reg[0:0] === 1'b1) ? add_ln114_fu_437_p2 : 11'd0);

assign sext_ln1311_fu_585_p1 = $signed(ush_reg_1639);

assign sext_ln1334_fu_549_p1 = Ex_V_fu_543_p2;

assign sext_ln452_fu_1367_p1 = $signed(add_ln452_fu_1361_p2);

assign sext_ln657_fu_977_p1 = $signed(trunc_ln662_1_reg_1728);

assign shl_ln1253_1_fu_1260_p2 = shl_ln1253_reg_1787 << zext_ln1287_2_fu_1257_p1;

assign shl_ln1253_2_fu_1280_p2 = shl_ln1253_1_fu_1260_p2 << zext_ln1287_3_fu_1276_p1;

assign shl_ln1253_3_fu_1302_p2 = shl_ln1253_2_fu_1280_p2 << zext_ln1287_4_fu_1298_p1;

assign shl_ln1253_fu_1153_p2 = result_V_reg_1748 << zext_ln1287_1_fu_1149_p1;

assign significand_V_fu_1457_p3 = ((or_ln453_fu_1385_p2[0:0] === 1'b1) ? 52'd0 : select_ln444_5_fu_1449_p3);

assign sin_basis_fu_692_p2 = (xor_ln29_fu_687_p2 ^ tmp_1_fu_609_p10);

assign sub_ln1311_fu_561_p2 = ($signed(12'd0) - $signed(sext_ln1334_fu_549_p1));

assign t1_V_fu_910_p3 = {{fourth_order_double_4_q0}, {4'd0}};

assign tmp_11_fu_1377_p3 = newexp_fu_1371_p2[32'd31];

assign tmp_3_fu_931_p4 = {{r_V_25_fu_925_p2[74:38]}};

assign tmp_4_fu_954_p4 = {{r_V_26_fu_948_p2[59:31]}};

assign tmp_4_i_fu_1094_p3 = {{p_Result_13_1_i_reg_1759}, {1'd1}};

assign tmp_5_fu_1394_p4 = {{shl_ln1253_3_fu_1302_p2[61:10]}};

assign tmp_5_i_fu_1173_p3 = {{p_Result_13_2_i_reg_1764_pp0_iter9_reg}, {1'd1}};

assign tmp_6_fu_1404_p4 = {{shl_ln1253_1_fu_1260_p2[61:10]}};

assign tmp_6_i_fu_1192_p3 = {{p_Result_i_49_reg_1769_pp0_iter9_reg}, {1'd1}};

assign tmp_7_fu_1422_p4 = {{shl_ln1253_2_fu_1280_p2[61:10]}};

assign tmp_8_fu_1432_p4 = {{shl_ln1253_reg_1787[61:10]}};

assign tmp_V_1_fu_330_p1 = p_Val2_s_fu_308_p1[51:0];

assign tmp_V_fu_320_p4 = {{p_Val2_s_fu_308_p1[62:52]}};


always @ (p_Result_26_fu_1131_p4) begin
    if (p_Result_26_fu_1131_p4[0] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd0;
    end else if (p_Result_26_fu_1131_p4[1] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd1;
    end else if (p_Result_26_fu_1131_p4[2] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd2;
    end else if (p_Result_26_fu_1131_p4[3] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd3;
    end else if (p_Result_26_fu_1131_p4[4] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd4;
    end else if (p_Result_26_fu_1131_p4[5] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd5;
    end else if (p_Result_26_fu_1131_p4[6] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd6;
    end else if (p_Result_26_fu_1131_p4[7] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd7;
    end else if (p_Result_26_fu_1131_p4[8] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd8;
    end else if (p_Result_26_fu_1131_p4[9] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd9;
    end else if (p_Result_26_fu_1131_p4[10] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd10;
    end else if (p_Result_26_fu_1131_p4[11] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd11;
    end else if (p_Result_26_fu_1131_p4[12] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd12;
    end else if (p_Result_26_fu_1131_p4[13] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd13;
    end else if (p_Result_26_fu_1131_p4[14] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd14;
    end else if (p_Result_26_fu_1131_p4[15] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd15;
    end else if (p_Result_26_fu_1131_p4[16] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd16;
    end else if (p_Result_26_fu_1131_p4[17] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd17;
    end else if (p_Result_26_fu_1131_p4[18] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd18;
    end else if (p_Result_26_fu_1131_p4[19] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd19;
    end else if (p_Result_26_fu_1131_p4[20] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd20;
    end else if (p_Result_26_fu_1131_p4[21] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd21;
    end else if (p_Result_26_fu_1131_p4[22] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd22;
    end else if (p_Result_26_fu_1131_p4[23] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd23;
    end else if (p_Result_26_fu_1131_p4[24] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd24;
    end else if (p_Result_26_fu_1131_p4[25] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd25;
    end else if (p_Result_26_fu_1131_p4[26] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd26;
    end else if (p_Result_26_fu_1131_p4[27] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd27;
    end else if (p_Result_26_fu_1131_p4[28] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd28;
    end else if (p_Result_26_fu_1131_p4[29] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd29;
    end else if (p_Result_26_fu_1131_p4[30] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd30;
    end else if (p_Result_26_fu_1131_p4[31] == 1'b1) begin
        tmp_i2_i_fu_1141_p3 = 32'd31;
    end else begin
        tmp_i2_i_fu_1141_p3 = 32'd32;
    end
end


always @ (p_Result_27_fu_1211_p4) begin
    if (p_Result_27_fu_1211_p4[0] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd0;
    end else if (p_Result_27_fu_1211_p4[1] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd1;
    end else if (p_Result_27_fu_1211_p4[2] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd2;
    end else if (p_Result_27_fu_1211_p4[3] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd3;
    end else if (p_Result_27_fu_1211_p4[4] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd4;
    end else if (p_Result_27_fu_1211_p4[5] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd5;
    end else if (p_Result_27_fu_1211_p4[6] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd6;
    end else if (p_Result_27_fu_1211_p4[7] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd7;
    end else if (p_Result_27_fu_1211_p4[8] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd8;
    end else if (p_Result_27_fu_1211_p4[9] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd9;
    end else if (p_Result_27_fu_1211_p4[10] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd10;
    end else if (p_Result_27_fu_1211_p4[11] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd11;
    end else if (p_Result_27_fu_1211_p4[12] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd12;
    end else if (p_Result_27_fu_1211_p4[13] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd13;
    end else if (p_Result_27_fu_1211_p4[14] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd14;
    end else if (p_Result_27_fu_1211_p4[15] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd15;
    end else if (p_Result_27_fu_1211_p4[16] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd16;
    end else if (p_Result_27_fu_1211_p4[17] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd17;
    end else if (p_Result_27_fu_1211_p4[18] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd18;
    end else if (p_Result_27_fu_1211_p4[19] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd19;
    end else if (p_Result_27_fu_1211_p4[20] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd20;
    end else if (p_Result_27_fu_1211_p4[21] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd21;
    end else if (p_Result_27_fu_1211_p4[22] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd22;
    end else if (p_Result_27_fu_1211_p4[23] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd23;
    end else if (p_Result_27_fu_1211_p4[24] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd24;
    end else if (p_Result_27_fu_1211_p4[25] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd25;
    end else if (p_Result_27_fu_1211_p4[26] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd26;
    end else if (p_Result_27_fu_1211_p4[27] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd27;
    end else if (p_Result_27_fu_1211_p4[28] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd28;
    end else if (p_Result_27_fu_1211_p4[29] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd29;
    end else if (p_Result_27_fu_1211_p4[30] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd30;
    end else if (p_Result_27_fu_1211_p4[31] == 1'b1) begin
        tmp_i4_i_fu_1221_p3 = 32'd31;
    end else begin
        tmp_i4_i_fu_1221_p3 = 32'd32;
    end
end


always @ (p_Result_28_fu_1229_p4) begin
    if (p_Result_28_fu_1229_p4[0] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd0;
    end else if (p_Result_28_fu_1229_p4[1] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd1;
    end else if (p_Result_28_fu_1229_p4[2] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd2;
    end else if (p_Result_28_fu_1229_p4[3] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd3;
    end else if (p_Result_28_fu_1229_p4[4] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd4;
    end else if (p_Result_28_fu_1229_p4[5] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd5;
    end else if (p_Result_28_fu_1229_p4[6] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd6;
    end else if (p_Result_28_fu_1229_p4[7] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd7;
    end else if (p_Result_28_fu_1229_p4[8] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd8;
    end else if (p_Result_28_fu_1229_p4[9] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd9;
    end else if (p_Result_28_fu_1229_p4[10] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd10;
    end else if (p_Result_28_fu_1229_p4[11] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd11;
    end else if (p_Result_28_fu_1229_p4[12] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd12;
    end else if (p_Result_28_fu_1229_p4[13] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd13;
    end else if (p_Result_28_fu_1229_p4[14] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd14;
    end else if (p_Result_28_fu_1229_p4[15] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd15;
    end else if (p_Result_28_fu_1229_p4[16] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd16;
    end else if (p_Result_28_fu_1229_p4[17] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd17;
    end else if (p_Result_28_fu_1229_p4[18] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd18;
    end else if (p_Result_28_fu_1229_p4[19] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd19;
    end else if (p_Result_28_fu_1229_p4[20] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd20;
    end else if (p_Result_28_fu_1229_p4[21] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd21;
    end else if (p_Result_28_fu_1229_p4[22] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd22;
    end else if (p_Result_28_fu_1229_p4[23] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd23;
    end else if (p_Result_28_fu_1229_p4[24] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd24;
    end else if (p_Result_28_fu_1229_p4[25] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd25;
    end else if (p_Result_28_fu_1229_p4[26] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd26;
    end else if (p_Result_28_fu_1229_p4[27] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd27;
    end else if (p_Result_28_fu_1229_p4[28] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd28;
    end else if (p_Result_28_fu_1229_p4[29] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd29;
    end else if (p_Result_28_fu_1229_p4[30] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd30;
    end else if (p_Result_28_fu_1229_p4[31] == 1'b1) begin
        tmp_i6_i_fu_1239_p3 = 32'd31;
    end else begin
        tmp_i6_i_fu_1239_p3 = 32'd32;
    end
end

assign tmp_i_fu_1075_p3 = {{p_Result_1_i_reg_1754}, {1'd1}};


always @ (p_Result_25_fu_1113_p4) begin
    if (p_Result_25_fu_1113_p4[0] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd0;
    end else if (p_Result_25_fu_1113_p4[1] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd1;
    end else if (p_Result_25_fu_1113_p4[2] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd2;
    end else if (p_Result_25_fu_1113_p4[3] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd3;
    end else if (p_Result_25_fu_1113_p4[4] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd4;
    end else if (p_Result_25_fu_1113_p4[5] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd5;
    end else if (p_Result_25_fu_1113_p4[6] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd6;
    end else if (p_Result_25_fu_1113_p4[7] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd7;
    end else if (p_Result_25_fu_1113_p4[8] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd8;
    end else if (p_Result_25_fu_1113_p4[9] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd9;
    end else if (p_Result_25_fu_1113_p4[10] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd10;
    end else if (p_Result_25_fu_1113_p4[11] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd11;
    end else if (p_Result_25_fu_1113_p4[12] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd12;
    end else if (p_Result_25_fu_1113_p4[13] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd13;
    end else if (p_Result_25_fu_1113_p4[14] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd14;
    end else if (p_Result_25_fu_1113_p4[15] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd15;
    end else if (p_Result_25_fu_1113_p4[16] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd16;
    end else if (p_Result_25_fu_1113_p4[17] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd17;
    end else if (p_Result_25_fu_1113_p4[18] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd18;
    end else if (p_Result_25_fu_1113_p4[19] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd19;
    end else if (p_Result_25_fu_1113_p4[20] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd20;
    end else if (p_Result_25_fu_1113_p4[21] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd21;
    end else if (p_Result_25_fu_1113_p4[22] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd22;
    end else if (p_Result_25_fu_1113_p4[23] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd23;
    end else if (p_Result_25_fu_1113_p4[24] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd24;
    end else if (p_Result_25_fu_1113_p4[25] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd25;
    end else if (p_Result_25_fu_1113_p4[26] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd26;
    end else if (p_Result_25_fu_1113_p4[27] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd27;
    end else if (p_Result_25_fu_1113_p4[28] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd28;
    end else if (p_Result_25_fu_1113_p4[29] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd29;
    end else if (p_Result_25_fu_1113_p4[30] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd30;
    end else if (p_Result_25_fu_1113_p4[31] == 1'b1) begin
        tmp_i_i2_fu_1123_p3 = 32'd31;
    end else begin
        tmp_i_i2_fu_1123_p3 = 32'd32;
    end
end


always @ (p_Result_22_fu_499_p3) begin
    if (p_Result_22_fu_499_p3[0] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd0;
    end else if (p_Result_22_fu_499_p3[1] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd1;
    end else if (p_Result_22_fu_499_p3[2] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd2;
    end else if (p_Result_22_fu_499_p3[3] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd3;
    end else if (p_Result_22_fu_499_p3[4] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd4;
    end else if (p_Result_22_fu_499_p3[5] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd5;
    end else if (p_Result_22_fu_499_p3[6] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd6;
    end else if (p_Result_22_fu_499_p3[7] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd7;
    end else if (p_Result_22_fu_499_p3[8] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd8;
    end else if (p_Result_22_fu_499_p3[9] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd9;
    end else if (p_Result_22_fu_499_p3[10] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd10;
    end else if (p_Result_22_fu_499_p3[11] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd11;
    end else if (p_Result_22_fu_499_p3[12] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd12;
    end else if (p_Result_22_fu_499_p3[13] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd13;
    end else if (p_Result_22_fu_499_p3[14] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd14;
    end else if (p_Result_22_fu_499_p3[15] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd15;
    end else if (p_Result_22_fu_499_p3[16] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd16;
    end else if (p_Result_22_fu_499_p3[17] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd17;
    end else if (p_Result_22_fu_499_p3[18] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd18;
    end else if (p_Result_22_fu_499_p3[19] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd19;
    end else if (p_Result_22_fu_499_p3[20] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd20;
    end else if (p_Result_22_fu_499_p3[21] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd21;
    end else if (p_Result_22_fu_499_p3[22] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd22;
    end else if (p_Result_22_fu_499_p3[23] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd23;
    end else if (p_Result_22_fu_499_p3[24] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd24;
    end else if (p_Result_22_fu_499_p3[25] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd25;
    end else if (p_Result_22_fu_499_p3[26] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd26;
    end else if (p_Result_22_fu_499_p3[27] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd27;
    end else if (p_Result_22_fu_499_p3[28] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd28;
    end else if (p_Result_22_fu_499_p3[29] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd29;
    end else if (p_Result_22_fu_499_p3[30] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd30;
    end else if (p_Result_22_fu_499_p3[31] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd31;
    end else if (p_Result_22_fu_499_p3[32] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd32;
    end else if (p_Result_22_fu_499_p3[33] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd33;
    end else if (p_Result_22_fu_499_p3[34] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd34;
    end else if (p_Result_22_fu_499_p3[35] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd35;
    end else if (p_Result_22_fu_499_p3[36] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd36;
    end else if (p_Result_22_fu_499_p3[37] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd37;
    end else if (p_Result_22_fu_499_p3[38] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd38;
    end else if (p_Result_22_fu_499_p3[39] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd39;
    end else if (p_Result_22_fu_499_p3[40] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd40;
    end else if (p_Result_22_fu_499_p3[41] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd41;
    end else if (p_Result_22_fu_499_p3[42] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd42;
    end else if (p_Result_22_fu_499_p3[43] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd43;
    end else if (p_Result_22_fu_499_p3[44] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd44;
    end else if (p_Result_22_fu_499_p3[45] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd45;
    end else if (p_Result_22_fu_499_p3[46] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd46;
    end else if (p_Result_22_fu_499_p3[47] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd47;
    end else if (p_Result_22_fu_499_p3[48] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd48;
    end else if (p_Result_22_fu_499_p3[49] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd49;
    end else if (p_Result_22_fu_499_p3[50] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd50;
    end else if (p_Result_22_fu_499_p3[51] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd51;
    end else if (p_Result_22_fu_499_p3[52] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd52;
    end else if (p_Result_22_fu_499_p3[53] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd53;
    end else if (p_Result_22_fu_499_p3[54] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd54;
    end else if (p_Result_22_fu_499_p3[55] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd55;
    end else if (p_Result_22_fu_499_p3[56] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd56;
    end else if (p_Result_22_fu_499_p3[57] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd57;
    end else if (p_Result_22_fu_499_p3[58] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd58;
    end else if (p_Result_22_fu_499_p3[59] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd59;
    end else if (p_Result_22_fu_499_p3[60] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd60;
    end else if (p_Result_22_fu_499_p3[61] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd61;
    end else if (p_Result_22_fu_499_p3[62] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd62;
    end else if (p_Result_22_fu_499_p3[63] == 1'b1) begin
        tmp_i_i_fu_507_p3 = 64'd63;
    end else begin
        tmp_i_i_fu_507_p3 = 64'd64;
    end
end

assign trunc_ln601_fu_369_p1 = addr_V_fu_346_p3[6:0];

assign trunc_ln745_fu_455_p1 = p_Val2_37_fu_449_p3[0:0];

assign ush_fu_567_p3 = ((isNeg_fu_553_p3[0:0] === 1'b1) ? sub_ln1311_fu_561_p2 : sext_ln1334_fu_549_p1);

assign xor_ln271_fu_630_p2 = (tmp_1_fu_609_p10 ^ 1'd1);

assign xor_ln29_fu_687_p2 = (do_cos_read_reg_1542_pp0_iter4_reg ^ 1'd1);

assign xor_ln300_fu_1503_p2 = (1'd1 ^ and_ln300_1_fu_1499_p2);

assign xor_ln311_fu_811_p2 = (icmp_ln833_2_reg_1650 ^ 1'd1);

assign xor_ln444_fu_1308_p2 = (icmp_ln444_1_fu_1265_p2 ^ 1'd1);

assign zext_ln1253_fu_519_p1 = Mx_zeros_V_fu_515_p1;

assign zext_ln1287_1_fu_1149_p1 = tmp_i_i2_fu_1123_p3;

assign zext_ln1287_2_fu_1257_p1 = tmp_i2_i_reg_1780;

assign zext_ln1287_3_fu_1276_p1 = tmp_i4_i_fu_1221_p3;

assign zext_ln1287_4_fu_1298_p1 = tmp_i6_i_fu_1239_p3;

assign zext_ln1287_fu_588_p1 = $unsigned(sext_ln1311_fu_585_p1);

assign zext_ln498_fu_706_p1 = p_Result_23_fu_698_p3;

assign zext_ln635_fu_364_p1 = p_Result_i_i_fu_354_p4;

assign zext_ln655_fu_539_p1 = Mx_zeros_V_fu_515_p1;

assign zext_ln657_1_fu_996_p1 = tmp_4_fu_954_p4;

assign zext_ln657_fu_986_p1 = tmp_3_fu_931_p4;

assign zext_ln744_fu_373_p1 = trunc_ln601_reg_1579;

always @ (posedge ap_clk) begin
    r_V_5_reg_1669[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln498_reg_1680[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //sin_or_cos_double_s
