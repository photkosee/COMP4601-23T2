// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrix_vector_HH_
#define _matrix_vector_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct matrix_vector : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > M_address0;
    sc_out< sc_logic > M_ce0;
    sc_in< sc_lv<32> > M_q0;
    sc_out< sc_lv<3> > V_In_address0;
    sc_out< sc_logic > V_In_ce0;
    sc_in< sc_lv<32> > V_In_q0;
    sc_out< sc_lv<3> > V_Out_address0;
    sc_out< sc_logic > V_Out_ce0;
    sc_out< sc_logic > V_Out_we0;
    sc_out< sc_lv<32> > V_Out_d0;


    // Module declarations
    matrix_vector(sc_module_name name);
    SC_HAS_PROCESS(matrix_vector);

    ~matrix_vector();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_fu_120_p2;
    sc_signal< sc_lv<4> > i_reg_188;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln11_fu_126_p1;
    sc_signal< sc_lv<64> > zext_ln11_reg_193;
    sc_signal< sc_lv<1> > icmp_ln7_fu_114_p2;
    sc_signal< sc_lv<8> > zext_ln10_fu_138_p1;
    sc_signal< sc_lv<8> > zext_ln10_reg_198;
    sc_signal< sc_lv<4> > j_fu_148_p2;
    sc_signal< sc_lv<4> > j_reg_206;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln10_fu_142_p2;
    sc_signal< sc_lv<32> > sum_fu_179_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > i_0_reg_79;
    sc_signal< sc_lv<4> > j_0_reg_90;
    sc_signal< sc_lv<32> > sum_0_reg_101;
    sc_signal< sc_lv<64> > zext_ln11_3_fu_168_p1;
    sc_signal< sc_lv<64> > zext_ln11_1_fu_154_p1;
    sc_signal< sc_lv<7> > tmp_1_fu_130_p3;
    sc_signal< sc_lv<8> > zext_ln11_2_fu_159_p1;
    sc_signal< sc_lv<8> > add_ln11_fu_163_p2;
    sc_signal< sc_lv<32> > mul_ln11_fu_173_p0;
    sc_signal< sc_lv<32> > mul_ln11_fu_173_p1;
    sc_signal< sc_lv<32> > mul_ln11_fu_173_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_M_address0();
    void thread_M_ce0();
    void thread_V_In_address0();
    void thread_V_In_ce0();
    void thread_V_Out_address0();
    void thread_V_Out_ce0();
    void thread_V_Out_d0();
    void thread_V_Out_we0();
    void thread_add_ln11_fu_163_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_120_p2();
    void thread_icmp_ln10_fu_142_p2();
    void thread_icmp_ln7_fu_114_p2();
    void thread_j_fu_148_p2();
    void thread_mul_ln11_fu_173_p0();
    void thread_mul_ln11_fu_173_p1();
    void thread_mul_ln11_fu_173_p2();
    void thread_sum_fu_179_p2();
    void thread_tmp_1_fu_130_p3();
    void thread_zext_ln10_fu_138_p1();
    void thread_zext_ln11_1_fu_154_p1();
    void thread_zext_ln11_2_fu_159_p1();
    void thread_zext_ln11_3_fu_168_p1();
    void thread_zext_ln11_fu_126_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
