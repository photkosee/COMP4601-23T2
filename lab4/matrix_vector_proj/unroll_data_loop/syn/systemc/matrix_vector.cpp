// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrix_vector.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrix_vector::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrix_vector::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> matrix_vector::ap_ST_fsm_state1 = "1";
const sc_lv<17> matrix_vector::ap_ST_fsm_state2 = "10";
const sc_lv<17> matrix_vector::ap_ST_fsm_state3 = "100";
const sc_lv<17> matrix_vector::ap_ST_fsm_state4 = "1000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state5 = "10000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state6 = "100000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> matrix_vector::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> matrix_vector::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> matrix_vector::ap_const_lv32_1 = "1";
const sc_lv<32> matrix_vector::ap_const_lv32_2 = "10";
const sc_lv<32> matrix_vector::ap_const_lv32_3 = "11";
const sc_lv<32> matrix_vector::ap_const_lv32_4 = "100";
const sc_lv<32> matrix_vector::ap_const_lv32_5 = "101";
const sc_lv<32> matrix_vector::ap_const_lv32_6 = "110";
const sc_lv<32> matrix_vector::ap_const_lv32_7 = "111";
const sc_lv<32> matrix_vector::ap_const_lv32_8 = "1000";
const sc_lv<32> matrix_vector::ap_const_lv32_9 = "1001";
const sc_lv<32> matrix_vector::ap_const_lv32_A = "1010";
const sc_lv<32> matrix_vector::ap_const_lv32_B = "1011";
const sc_lv<32> matrix_vector::ap_const_lv32_C = "1100";
const sc_lv<32> matrix_vector::ap_const_lv32_D = "1101";
const sc_lv<32> matrix_vector::ap_const_lv32_E = "1110";
const sc_lv<32> matrix_vector::ap_const_lv32_F = "1111";
const sc_lv<32> matrix_vector::ap_const_lv32_10 = "10000";
const sc_lv<4> matrix_vector::ap_const_lv4_0 = "0000";
const sc_lv<1> matrix_vector::ap_const_lv1_1 = "1";
const sc_lv<64> matrix_vector::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> matrix_vector::ap_const_lv64_1 = "1";
const sc_lv<64> matrix_vector::ap_const_lv64_2 = "10";
const sc_lv<64> matrix_vector::ap_const_lv64_3 = "11";
const sc_lv<64> matrix_vector::ap_const_lv64_4 = "100";
const sc_lv<64> matrix_vector::ap_const_lv64_5 = "101";
const sc_lv<64> matrix_vector::ap_const_lv64_6 = "110";
const sc_lv<64> matrix_vector::ap_const_lv64_7 = "111";
const sc_lv<4> matrix_vector::ap_const_lv4_8 = "1000";
const sc_lv<4> matrix_vector::ap_const_lv4_1 = "1";
const sc_lv<60> matrix_vector::ap_const_lv60_1 = "1";
const sc_lv<60> matrix_vector::ap_const_lv60_2 = "10";
const sc_lv<6> matrix_vector::ap_const_lv6_28 = "101000";
const sc_lv<60> matrix_vector::ap_const_lv60_3 = "11";
const bool matrix_vector::ap_const_boolean_1 = true;

matrix_vector::matrix_vector(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_M_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( zext_ln11_fu_491_p1 );
    sensitive << ( zext_ln11_8_fu_526_p1 );
    sensitive << ( tmp_8_fu_554_p3 );
    sensitive << ( zext_ln11_9_fu_596_p1 );
    sensitive << ( tmp_9_fu_624_p3 );
    sensitive << ( zext_ln11_11_fu_666_p1 );
    sensitive << ( tmp_s_fu_694_p3 );
    sensitive << ( zext_ln11_12_fu_736_p1 );

    SC_METHOD(thread_M_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_V_In_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( zext_ln11_fu_491_p1 );
    sensitive << ( zext_ln11_1_fu_515_p1 );
    sensitive << ( zext_ln11_2_fu_549_p1 );
    sensitive << ( zext_ln11_3_fu_581_p1 );
    sensitive << ( zext_ln11_4_fu_619_p1 );
    sensitive << ( zext_ln11_5_fu_651_p1 );
    sensitive << ( zext_ln11_6_fu_689_p1 );
    sensitive << ( zext_ln11_7_fu_721_p1 );

    SC_METHOD(thread_V_In_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_V_Out_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_V_Out_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_V_Out_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( sum_0_0_reg_286 );
    sensitive << ( sum_0_1_reg_310 );
    sensitive << ( sum_0_2_reg_334 );
    sensitive << ( sum_0_3_reg_358 );
    sensitive << ( sum_0_4_reg_382 );
    sensitive << ( sum_0_5_reg_406 );
    sensitive << ( sum_0_6_reg_430 );
    sensitive << ( sum_0_7_reg_454 );

    SC_METHOD(thread_V_Out_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln10_fu_479_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln10_1_fu_503_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln10_2_fu_537_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln10_3_fu_569_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln10_4_fu_607_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln10_5_fu_639_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln10_6_fu_677_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln10_7_fu_709_p2 );

    SC_METHOD(thread_add_ln10_1_fu_509_p2);
    sensitive << ( j_0_1_reg_299 );

    SC_METHOD(thread_add_ln10_2_fu_543_p2);
    sensitive << ( j_0_2_reg_323 );

    SC_METHOD(thread_add_ln10_3_fu_575_p2);
    sensitive << ( j_0_3_reg_347 );

    SC_METHOD(thread_add_ln10_4_fu_613_p2);
    sensitive << ( j_0_4_reg_371 );

    SC_METHOD(thread_add_ln10_5_fu_645_p2);
    sensitive << ( j_0_5_reg_395 );

    SC_METHOD(thread_add_ln10_6_fu_683_p2);
    sensitive << ( j_0_6_reg_419 );

    SC_METHOD(thread_add_ln10_7_fu_715_p2);
    sensitive << ( j_0_7_reg_443 );

    SC_METHOD(thread_add_ln10_fu_485_p2);
    sensitive << ( j_0_0_reg_275 );

    SC_METHOD(thread_add_ln11_1_fu_531_p2);
    sensitive << ( sum_0_1_reg_310 );
    sensitive << ( grp_fu_473_p2 );

    SC_METHOD(thread_add_ln11_2_fu_563_p2);
    sensitive << ( sum_0_2_reg_334 );
    sensitive << ( grp_fu_467_p2 );

    SC_METHOD(thread_add_ln11_3_fu_601_p2);
    sensitive << ( sum_0_3_reg_358 );
    sensitive << ( grp_fu_467_p2 );

    SC_METHOD(thread_add_ln11_4_fu_633_p2);
    sensitive << ( sum_0_4_reg_382 );
    sensitive << ( grp_fu_467_p2 );

    SC_METHOD(thread_add_ln11_5_fu_671_p2);
    sensitive << ( sum_0_5_reg_406 );
    sensitive << ( grp_fu_473_p2 );

    SC_METHOD(thread_add_ln11_6_fu_703_p2);
    sensitive << ( sum_0_6_reg_430 );
    sensitive << ( grp_fu_467_p2 );

    SC_METHOD(thread_add_ln11_7_fu_741_p2);
    sensitive << ( sum_0_7_reg_454 );
    sensitive << ( grp_fu_467_p2 );

    SC_METHOD(thread_add_ln11_8_fu_660_p2);
    sensitive << ( zext_ln11_10_fu_656_p1 );

    SC_METHOD(thread_add_ln11_fu_497_p2);
    sensitive << ( sum_0_0_reg_286 );
    sensitive << ( grp_fu_467_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln10_7_fu_709_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln10_7_fu_709_p2 );

    SC_METHOD(thread_grp_fu_467_p0);
    sensitive << ( V_In_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_fu_467_p1);
    sensitive << ( M_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_fu_467_p2);
    sensitive << ( grp_fu_467_p0 );
    sensitive << ( grp_fu_467_p1 );

    SC_METHOD(thread_grp_fu_473_p0);
    sensitive << ( M_q0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_473_p1);
    sensitive << ( V_In_q0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_473_p2);
    sensitive << ( grp_fu_473_p0 );
    sensitive << ( grp_fu_473_p1 );

    SC_METHOD(thread_icmp_ln10_1_fu_503_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_0_1_reg_299 );

    SC_METHOD(thread_icmp_ln10_2_fu_537_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j_0_2_reg_323 );

    SC_METHOD(thread_icmp_ln10_3_fu_569_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( j_0_3_reg_347 );

    SC_METHOD(thread_icmp_ln10_4_fu_607_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( j_0_4_reg_371 );

    SC_METHOD(thread_icmp_ln10_5_fu_639_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( j_0_5_reg_395 );

    SC_METHOD(thread_icmp_ln10_6_fu_677_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( j_0_6_reg_419 );

    SC_METHOD(thread_icmp_ln10_7_fu_709_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( j_0_7_reg_443 );

    SC_METHOD(thread_icmp_ln10_fu_479_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_0_0_reg_275 );

    SC_METHOD(thread_sext_ln11_1_fu_732_p1);
    sensitive << ( xor_ln11_2_fu_726_p2 );

    SC_METHOD(thread_sext_ln11_fu_592_p1);
    sensitive << ( xor_ln11_1_fu_586_p2 );

    SC_METHOD(thread_tmp_8_fu_554_p3);
    sensitive << ( j_0_2_reg_323 );

    SC_METHOD(thread_tmp_9_fu_624_p3);
    sensitive << ( j_0_4_reg_371 );

    SC_METHOD(thread_tmp_s_fu_694_p3);
    sensitive << ( j_0_6_reg_419 );

    SC_METHOD(thread_xor_ln11_1_fu_586_p2);
    sensitive << ( j_0_3_reg_347 );

    SC_METHOD(thread_xor_ln11_2_fu_726_p2);
    sensitive << ( j_0_7_reg_443 );

    SC_METHOD(thread_xor_ln11_fu_520_p2);
    sensitive << ( j_0_1_reg_299 );

    SC_METHOD(thread_zext_ln11_10_fu_656_p1);
    sensitive << ( j_0_5_reg_395 );

    SC_METHOD(thread_zext_ln11_11_fu_666_p1);
    sensitive << ( add_ln11_8_fu_660_p2 );

    SC_METHOD(thread_zext_ln11_12_fu_736_p1);
    sensitive << ( sext_ln11_1_fu_732_p1 );

    SC_METHOD(thread_zext_ln11_1_fu_515_p1);
    sensitive << ( j_0_1_reg_299 );

    SC_METHOD(thread_zext_ln11_2_fu_549_p1);
    sensitive << ( j_0_2_reg_323 );

    SC_METHOD(thread_zext_ln11_3_fu_581_p1);
    sensitive << ( j_0_3_reg_347 );

    SC_METHOD(thread_zext_ln11_4_fu_619_p1);
    sensitive << ( j_0_4_reg_371 );

    SC_METHOD(thread_zext_ln11_5_fu_651_p1);
    sensitive << ( j_0_5_reg_395 );

    SC_METHOD(thread_zext_ln11_6_fu_689_p1);
    sensitive << ( j_0_6_reg_419 );

    SC_METHOD(thread_zext_ln11_7_fu_721_p1);
    sensitive << ( j_0_7_reg_443 );

    SC_METHOD(thread_zext_ln11_8_fu_526_p1);
    sensitive << ( xor_ln11_fu_520_p2 );

    SC_METHOD(thread_zext_ln11_9_fu_596_p1);
    sensitive << ( sext_ln11_fu_592_p1 );

    SC_METHOD(thread_zext_ln11_fu_491_p1);
    sensitive << ( j_0_0_reg_275 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln10_fu_479_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln10_1_fu_503_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln10_2_fu_537_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln10_3_fu_569_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln10_4_fu_607_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln10_5_fu_639_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln10_6_fu_677_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln10_7_fu_709_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrix_vector_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, M_address0, "(port)M_address0");
    sc_trace(mVcdFile, M_ce0, "(port)M_ce0");
    sc_trace(mVcdFile, M_q0, "(port)M_q0");
    sc_trace(mVcdFile, V_In_address0, "(port)V_In_address0");
    sc_trace(mVcdFile, V_In_ce0, "(port)V_In_ce0");
    sc_trace(mVcdFile, V_In_q0, "(port)V_In_q0");
    sc_trace(mVcdFile, V_Out_address0, "(port)V_Out_address0");
    sc_trace(mVcdFile, V_Out_ce0, "(port)V_Out_ce0");
    sc_trace(mVcdFile, V_Out_we0, "(port)V_Out_we0");
    sc_trace(mVcdFile, V_Out_d0, "(port)V_Out_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln10_fu_485_p2, "add_ln10_fu_485_p2");
    sc_trace(mVcdFile, add_ln10_reg_750, "add_ln10_reg_750");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln10_fu_479_p2, "icmp_ln10_fu_479_p2");
    sc_trace(mVcdFile, add_ln11_fu_497_p2, "add_ln11_fu_497_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln10_1_fu_509_p2, "add_ln10_1_fu_509_p2");
    sc_trace(mVcdFile, add_ln10_1_reg_773, "add_ln10_1_reg_773");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln10_1_fu_503_p2, "icmp_ln10_1_fu_503_p2");
    sc_trace(mVcdFile, add_ln11_1_fu_531_p2, "add_ln11_1_fu_531_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln10_2_fu_543_p2, "add_ln10_2_fu_543_p2");
    sc_trace(mVcdFile, add_ln10_2_reg_796, "add_ln10_2_reg_796");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln10_2_fu_537_p2, "icmp_ln10_2_fu_537_p2");
    sc_trace(mVcdFile, add_ln11_2_fu_563_p2, "add_ln11_2_fu_563_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, add_ln10_3_fu_575_p2, "add_ln10_3_fu_575_p2");
    sc_trace(mVcdFile, add_ln10_3_reg_819, "add_ln10_3_reg_819");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln10_3_fu_569_p2, "icmp_ln10_3_fu_569_p2");
    sc_trace(mVcdFile, add_ln11_3_fu_601_p2, "add_ln11_3_fu_601_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, add_ln10_4_fu_613_p2, "add_ln10_4_fu_613_p2");
    sc_trace(mVcdFile, add_ln10_4_reg_842, "add_ln10_4_reg_842");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln10_4_fu_607_p2, "icmp_ln10_4_fu_607_p2");
    sc_trace(mVcdFile, add_ln11_4_fu_633_p2, "add_ln11_4_fu_633_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, add_ln10_5_fu_645_p2, "add_ln10_5_fu_645_p2");
    sc_trace(mVcdFile, add_ln10_5_reg_865, "add_ln10_5_reg_865");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, icmp_ln10_5_fu_639_p2, "icmp_ln10_5_fu_639_p2");
    sc_trace(mVcdFile, add_ln11_5_fu_671_p2, "add_ln11_5_fu_671_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, add_ln10_6_fu_683_p2, "add_ln10_6_fu_683_p2");
    sc_trace(mVcdFile, add_ln10_6_reg_888, "add_ln10_6_reg_888");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, icmp_ln10_6_fu_677_p2, "icmp_ln10_6_fu_677_p2");
    sc_trace(mVcdFile, add_ln11_6_fu_703_p2, "add_ln11_6_fu_703_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, add_ln10_7_fu_715_p2, "add_ln10_7_fu_715_p2");
    sc_trace(mVcdFile, add_ln10_7_reg_911, "add_ln10_7_reg_911");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, icmp_ln10_7_fu_709_p2, "icmp_ln10_7_fu_709_p2");
    sc_trace(mVcdFile, add_ln11_7_fu_741_p2, "add_ln11_7_fu_741_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, j_0_0_reg_275, "j_0_0_reg_275");
    sc_trace(mVcdFile, sum_0_0_reg_286, "sum_0_0_reg_286");
    sc_trace(mVcdFile, j_0_1_reg_299, "j_0_1_reg_299");
    sc_trace(mVcdFile, sum_0_1_reg_310, "sum_0_1_reg_310");
    sc_trace(mVcdFile, j_0_2_reg_323, "j_0_2_reg_323");
    sc_trace(mVcdFile, sum_0_2_reg_334, "sum_0_2_reg_334");
    sc_trace(mVcdFile, j_0_3_reg_347, "j_0_3_reg_347");
    sc_trace(mVcdFile, sum_0_3_reg_358, "sum_0_3_reg_358");
    sc_trace(mVcdFile, j_0_4_reg_371, "j_0_4_reg_371");
    sc_trace(mVcdFile, sum_0_4_reg_382, "sum_0_4_reg_382");
    sc_trace(mVcdFile, j_0_5_reg_395, "j_0_5_reg_395");
    sc_trace(mVcdFile, sum_0_5_reg_406, "sum_0_5_reg_406");
    sc_trace(mVcdFile, j_0_6_reg_419, "j_0_6_reg_419");
    sc_trace(mVcdFile, sum_0_6_reg_430, "sum_0_6_reg_430");
    sc_trace(mVcdFile, j_0_7_reg_443, "j_0_7_reg_443");
    sc_trace(mVcdFile, sum_0_7_reg_454, "sum_0_7_reg_454");
    sc_trace(mVcdFile, zext_ln11_fu_491_p1, "zext_ln11_fu_491_p1");
    sc_trace(mVcdFile, zext_ln11_8_fu_526_p1, "zext_ln11_8_fu_526_p1");
    sc_trace(mVcdFile, zext_ln11_1_fu_515_p1, "zext_ln11_1_fu_515_p1");
    sc_trace(mVcdFile, tmp_8_fu_554_p3, "tmp_8_fu_554_p3");
    sc_trace(mVcdFile, zext_ln11_2_fu_549_p1, "zext_ln11_2_fu_549_p1");
    sc_trace(mVcdFile, zext_ln11_9_fu_596_p1, "zext_ln11_9_fu_596_p1");
    sc_trace(mVcdFile, zext_ln11_3_fu_581_p1, "zext_ln11_3_fu_581_p1");
    sc_trace(mVcdFile, tmp_9_fu_624_p3, "tmp_9_fu_624_p3");
    sc_trace(mVcdFile, zext_ln11_4_fu_619_p1, "zext_ln11_4_fu_619_p1");
    sc_trace(mVcdFile, zext_ln11_11_fu_666_p1, "zext_ln11_11_fu_666_p1");
    sc_trace(mVcdFile, zext_ln11_5_fu_651_p1, "zext_ln11_5_fu_651_p1");
    sc_trace(mVcdFile, tmp_s_fu_694_p3, "tmp_s_fu_694_p3");
    sc_trace(mVcdFile, zext_ln11_6_fu_689_p1, "zext_ln11_6_fu_689_p1");
    sc_trace(mVcdFile, zext_ln11_12_fu_736_p1, "zext_ln11_12_fu_736_p1");
    sc_trace(mVcdFile, zext_ln11_7_fu_721_p1, "zext_ln11_7_fu_721_p1");
    sc_trace(mVcdFile, grp_fu_467_p0, "grp_fu_467_p0");
    sc_trace(mVcdFile, grp_fu_467_p1, "grp_fu_467_p1");
    sc_trace(mVcdFile, grp_fu_473_p0, "grp_fu_473_p0");
    sc_trace(mVcdFile, grp_fu_473_p1, "grp_fu_473_p1");
    sc_trace(mVcdFile, grp_fu_467_p2, "grp_fu_467_p2");
    sc_trace(mVcdFile, xor_ln11_fu_520_p2, "xor_ln11_fu_520_p2");
    sc_trace(mVcdFile, grp_fu_473_p2, "grp_fu_473_p2");
    sc_trace(mVcdFile, xor_ln11_1_fu_586_p2, "xor_ln11_1_fu_586_p2");
    sc_trace(mVcdFile, sext_ln11_fu_592_p1, "sext_ln11_fu_592_p1");
    sc_trace(mVcdFile, zext_ln11_10_fu_656_p1, "zext_ln11_10_fu_656_p1");
    sc_trace(mVcdFile, add_ln11_8_fu_660_p2, "add_ln11_8_fu_660_p2");
    sc_trace(mVcdFile, xor_ln11_2_fu_726_p2, "xor_ln11_2_fu_726_p2");
    sc_trace(mVcdFile, sext_ln11_1_fu_732_p1, "sext_ln11_1_fu_732_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matrix_vector.hdltvin.dat");
    mHdltvoutHandle.open("matrix_vector.hdltvout.dat");
}

matrix_vector::~matrix_vector() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void matrix_vector::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_0_0_reg_275 = add_ln10_reg_750.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_0_reg_275 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_0_1_reg_299 = add_ln10_1_reg_773.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_479_p2.read(), ap_const_lv1_1))) {
        j_0_1_reg_299 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_0_2_reg_323 = add_ln10_2_reg_796.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_1_fu_503_p2.read(), ap_const_lv1_1))) {
        j_0_2_reg_323 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_0_3_reg_347 = add_ln10_3_reg_819.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_2_fu_537_p2.read(), ap_const_lv1_1))) {
        j_0_3_reg_347 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_0_4_reg_371 = add_ln10_4_reg_842.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_3_fu_569_p2.read(), ap_const_lv1_1))) {
        j_0_4_reg_371 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j_0_5_reg_395 = add_ln10_5_reg_865.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_4_fu_607_p2.read(), ap_const_lv1_1))) {
        j_0_5_reg_395 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        j_0_6_reg_419 = add_ln10_6_reg_888.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_5_fu_639_p2.read(), ap_const_lv1_1))) {
        j_0_6_reg_419 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        j_0_7_reg_443 = add_ln10_7_reg_911.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_6_fu_677_p2.read(), ap_const_lv1_1))) {
        j_0_7_reg_443 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sum_0_0_reg_286 = add_ln11_fu_497_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sum_0_0_reg_286 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sum_0_1_reg_310 = add_ln11_1_fu_531_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_479_p2.read(), ap_const_lv1_1))) {
        sum_0_1_reg_310 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sum_0_2_reg_334 = add_ln11_2_fu_563_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_1_fu_503_p2.read(), ap_const_lv1_1))) {
        sum_0_2_reg_334 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        sum_0_3_reg_358 = add_ln11_3_fu_601_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_2_fu_537_p2.read(), ap_const_lv1_1))) {
        sum_0_3_reg_358 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        sum_0_4_reg_382 = add_ln11_4_fu_633_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_3_fu_569_p2.read(), ap_const_lv1_1))) {
        sum_0_4_reg_382 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        sum_0_5_reg_406 = add_ln11_5_fu_671_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_4_fu_607_p2.read(), ap_const_lv1_1))) {
        sum_0_5_reg_406 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        sum_0_6_reg_430 = add_ln11_6_fu_703_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_5_fu_639_p2.read(), ap_const_lv1_1))) {
        sum_0_6_reg_430 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        sum_0_7_reg_454 = add_ln11_7_fu_741_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_6_fu_677_p2.read(), ap_const_lv1_1))) {
        sum_0_7_reg_454 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln10_1_reg_773 = add_ln10_1_fu_509_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        add_ln10_2_reg_796 = add_ln10_2_fu_543_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        add_ln10_3_reg_819 = add_ln10_3_fu_575_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        add_ln10_4_reg_842 = add_ln10_4_fu_613_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        add_ln10_5_reg_865 = add_ln10_5_fu_645_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        add_ln10_6_reg_888 = add_ln10_6_fu_683_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        add_ln10_7_reg_911 = add_ln10_7_fu_715_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln10_reg_750 = add_ln10_fu_485_p2.read();
    }
}

void matrix_vector::thread_M_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        M_address0 =  (sc_lv<6>) (zext_ln11_12_fu_736_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        M_address0 =  (sc_lv<6>) (tmp_s_fu_694_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        M_address0 =  (sc_lv<6>) (zext_ln11_11_fu_666_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        M_address0 =  (sc_lv<6>) (tmp_9_fu_624_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        M_address0 =  (sc_lv<6>) (zext_ln11_9_fu_596_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        M_address0 =  (sc_lv<6>) (tmp_8_fu_554_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        M_address0 =  (sc_lv<6>) (zext_ln11_8_fu_526_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        M_address0 =  (sc_lv<6>) (zext_ln11_fu_491_p1.read());
    } else {
        M_address0 = "XXXXXX";
    }
}

void matrix_vector::thread_M_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        M_ce0 = ap_const_logic_1;
    } else {
        M_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_V_In_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        V_In_address0 =  (sc_lv<3>) (zext_ln11_7_fu_721_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        V_In_address0 =  (sc_lv<3>) (zext_ln11_6_fu_689_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        V_In_address0 =  (sc_lv<3>) (zext_ln11_5_fu_651_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        V_In_address0 =  (sc_lv<3>) (zext_ln11_4_fu_619_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        V_In_address0 =  (sc_lv<3>) (zext_ln11_3_fu_581_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        V_In_address0 =  (sc_lv<3>) (zext_ln11_2_fu_549_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        V_In_address0 =  (sc_lv<3>) (zext_ln11_1_fu_515_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        V_In_address0 =  (sc_lv<3>) (zext_ln11_fu_491_p1.read());
    } else {
        V_In_address0 =  (sc_lv<3>) ("XXX");
    }
}

void matrix_vector::thread_V_In_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        V_In_ce0 = ap_const_logic_1;
    } else {
        V_In_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_V_Out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        V_Out_address0 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        V_Out_address0 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        V_Out_address0 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        V_Out_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        V_Out_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        V_Out_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        V_Out_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        V_Out_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        V_Out_address0 =  (sc_lv<3>) ("XXX");
    }
}

void matrix_vector::thread_V_Out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        V_Out_ce0 = ap_const_logic_1;
    } else {
        V_Out_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_V_Out_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        V_Out_d0 = sum_0_7_reg_454.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        V_Out_d0 = sum_0_6_reg_430.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        V_Out_d0 = sum_0_5_reg_406.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        V_Out_d0 = sum_0_4_reg_382.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        V_Out_d0 = sum_0_3_reg_358.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        V_Out_d0 = sum_0_2_reg_334.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        V_Out_d0 = sum_0_1_reg_310.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        V_Out_d0 = sum_0_0_reg_286.read();
    } else {
        V_Out_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void matrix_vector::thread_V_Out_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln10_fu_479_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln10_1_fu_503_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln10_2_fu_537_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(icmp_ln10_3_fu_569_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(icmp_ln10_4_fu_607_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(icmp_ln10_5_fu_639_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(icmp_ln10_6_fu_677_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(icmp_ln10_7_fu_709_p2.read(), ap_const_lv1_1)))) {
        V_Out_we0 = ap_const_logic_1;
    } else {
        V_Out_we0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_add_ln10_1_fu_509_p2() {
    add_ln10_1_fu_509_p2 = (!j_0_1_reg_299.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_1_reg_299.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_vector::thread_add_ln10_2_fu_543_p2() {
    add_ln10_2_fu_543_p2 = (!j_0_2_reg_323.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_2_reg_323.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_vector::thread_add_ln10_3_fu_575_p2() {
    add_ln10_3_fu_575_p2 = (!j_0_3_reg_347.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_3_reg_347.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_vector::thread_add_ln10_4_fu_613_p2() {
    add_ln10_4_fu_613_p2 = (!j_0_4_reg_371.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_4_reg_371.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_vector::thread_add_ln10_5_fu_645_p2() {
    add_ln10_5_fu_645_p2 = (!j_0_5_reg_395.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_5_reg_395.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_vector::thread_add_ln10_6_fu_683_p2() {
    add_ln10_6_fu_683_p2 = (!j_0_6_reg_419.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_6_reg_419.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_vector::thread_add_ln10_7_fu_715_p2() {
    add_ln10_7_fu_715_p2 = (!j_0_7_reg_443.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_7_reg_443.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_vector::thread_add_ln10_fu_485_p2() {
    add_ln10_fu_485_p2 = (!j_0_0_reg_275.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_0_reg_275.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_vector::thread_add_ln11_1_fu_531_p2() {
    add_ln11_1_fu_531_p2 = (!sum_0_1_reg_310.read().is_01() || !grp_fu_473_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(sum_0_1_reg_310.read()) + sc_biguint<32>(grp_fu_473_p2.read()));
}

void matrix_vector::thread_add_ln11_2_fu_563_p2() {
    add_ln11_2_fu_563_p2 = (!grp_fu_467_p2.read().is_01() || !sum_0_2_reg_334.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_467_p2.read()) + sc_biguint<32>(sum_0_2_reg_334.read()));
}

void matrix_vector::thread_add_ln11_3_fu_601_p2() {
    add_ln11_3_fu_601_p2 = (!grp_fu_467_p2.read().is_01() || !sum_0_3_reg_358.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_467_p2.read()) + sc_biguint<32>(sum_0_3_reg_358.read()));
}

void matrix_vector::thread_add_ln11_4_fu_633_p2() {
    add_ln11_4_fu_633_p2 = (!grp_fu_467_p2.read().is_01() || !sum_0_4_reg_382.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_467_p2.read()) + sc_biguint<32>(sum_0_4_reg_382.read()));
}

void matrix_vector::thread_add_ln11_5_fu_671_p2() {
    add_ln11_5_fu_671_p2 = (!sum_0_5_reg_406.read().is_01() || !grp_fu_473_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(sum_0_5_reg_406.read()) + sc_biguint<32>(grp_fu_473_p2.read()));
}

void matrix_vector::thread_add_ln11_6_fu_703_p2() {
    add_ln11_6_fu_703_p2 = (!grp_fu_467_p2.read().is_01() || !sum_0_6_reg_430.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_467_p2.read()) + sc_biguint<32>(sum_0_6_reg_430.read()));
}

void matrix_vector::thread_add_ln11_7_fu_741_p2() {
    add_ln11_7_fu_741_p2 = (!grp_fu_467_p2.read().is_01() || !sum_0_7_reg_454.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_467_p2.read()) + sc_biguint<32>(sum_0_7_reg_454.read()));
}

void matrix_vector::thread_add_ln11_8_fu_660_p2() {
    add_ln11_8_fu_660_p2 = (!zext_ln11_10_fu_656_p1.read().is_01() || !ap_const_lv6_28.is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln11_10_fu_656_p1.read()) + sc_bigint<6>(ap_const_lv6_28));
}

void matrix_vector::thread_add_ln11_fu_497_p2() {
    add_ln11_fu_497_p2 = (!grp_fu_467_p2.read().is_01() || !sum_0_0_reg_286.read().is_01())? sc_lv<32>(): (sc_biguint<32>(grp_fu_467_p2.read()) + sc_biguint<32>(sum_0_0_reg_286.read()));
}

void matrix_vector::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrix_vector::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void matrix_vector::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void matrix_vector::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void matrix_vector::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void matrix_vector::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void matrix_vector::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void matrix_vector::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void matrix_vector::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void matrix_vector::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void matrix_vector::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void matrix_vector::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void matrix_vector::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void matrix_vector::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void matrix_vector::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void matrix_vector::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void matrix_vector::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void matrix_vector::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_7_fu_709_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrix_vector::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrix_vector::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_7_fu_709_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrix_vector::thread_grp_fu_467_p0() {
    grp_fu_467_p0 = V_In_q0.read();
}

void matrix_vector::thread_grp_fu_467_p1() {
    grp_fu_467_p1 = M_q0.read();
}

void matrix_vector::thread_grp_fu_467_p2() {
    grp_fu_467_p2 = (!grp_fu_467_p0.read().is_01() || !grp_fu_467_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(grp_fu_467_p0.read()) * sc_bigint<32>(grp_fu_467_p1.read());
}

void matrix_vector::thread_grp_fu_473_p0() {
    grp_fu_473_p0 = M_q0.read();
}

void matrix_vector::thread_grp_fu_473_p1() {
    grp_fu_473_p1 = V_In_q0.read();
}

void matrix_vector::thread_grp_fu_473_p2() {
    grp_fu_473_p2 = (!grp_fu_473_p0.read().is_01() || !grp_fu_473_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(grp_fu_473_p0.read()) * sc_bigint<32>(grp_fu_473_p1.read());
}

void matrix_vector::thread_icmp_ln10_1_fu_503_p2() {
    icmp_ln10_1_fu_503_p2 = (!j_0_1_reg_299.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_1_reg_299.read() == ap_const_lv4_8);
}

void matrix_vector::thread_icmp_ln10_2_fu_537_p2() {
    icmp_ln10_2_fu_537_p2 = (!j_0_2_reg_323.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_2_reg_323.read() == ap_const_lv4_8);
}

void matrix_vector::thread_icmp_ln10_3_fu_569_p2() {
    icmp_ln10_3_fu_569_p2 = (!j_0_3_reg_347.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_3_reg_347.read() == ap_const_lv4_8);
}

void matrix_vector::thread_icmp_ln10_4_fu_607_p2() {
    icmp_ln10_4_fu_607_p2 = (!j_0_4_reg_371.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_4_reg_371.read() == ap_const_lv4_8);
}

void matrix_vector::thread_icmp_ln10_5_fu_639_p2() {
    icmp_ln10_5_fu_639_p2 = (!j_0_5_reg_395.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_5_reg_395.read() == ap_const_lv4_8);
}

void matrix_vector::thread_icmp_ln10_6_fu_677_p2() {
    icmp_ln10_6_fu_677_p2 = (!j_0_6_reg_419.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_6_reg_419.read() == ap_const_lv4_8);
}

void matrix_vector::thread_icmp_ln10_7_fu_709_p2() {
    icmp_ln10_7_fu_709_p2 = (!j_0_7_reg_443.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_7_reg_443.read() == ap_const_lv4_8);
}

void matrix_vector::thread_icmp_ln10_fu_479_p2() {
    icmp_ln10_fu_479_p2 = (!j_0_0_reg_275.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_0_0_reg_275.read() == ap_const_lv4_8);
}

void matrix_vector::thread_sext_ln11_1_fu_732_p1() {
    sext_ln11_1_fu_732_p1 = esl_sext<6,4>(xor_ln11_2_fu_726_p2.read());
}

void matrix_vector::thread_sext_ln11_fu_592_p1() {
    sext_ln11_fu_592_p1 = esl_sext<5,4>(xor_ln11_1_fu_586_p2.read());
}

void matrix_vector::thread_tmp_8_fu_554_p3() {
    tmp_8_fu_554_p3 = esl_concat<60,4>(ap_const_lv60_1, j_0_2_reg_323.read());
}

void matrix_vector::thread_tmp_9_fu_624_p3() {
    tmp_9_fu_624_p3 = esl_concat<60,4>(ap_const_lv60_2, j_0_4_reg_371.read());
}

void matrix_vector::thread_tmp_s_fu_694_p3() {
    tmp_s_fu_694_p3 = esl_concat<60,4>(ap_const_lv60_3, j_0_6_reg_419.read());
}

void matrix_vector::thread_xor_ln11_1_fu_586_p2() {
    xor_ln11_1_fu_586_p2 = (j_0_3_reg_347.read() ^ ap_const_lv4_8);
}

void matrix_vector::thread_xor_ln11_2_fu_726_p2() {
    xor_ln11_2_fu_726_p2 = (j_0_7_reg_443.read() ^ ap_const_lv4_8);
}

void matrix_vector::thread_xor_ln11_fu_520_p2() {
    xor_ln11_fu_520_p2 = (j_0_1_reg_299.read() ^ ap_const_lv4_8);
}

void matrix_vector::thread_zext_ln11_10_fu_656_p1() {
    zext_ln11_10_fu_656_p1 = esl_zext<6,4>(j_0_5_reg_395.read());
}

void matrix_vector::thread_zext_ln11_11_fu_666_p1() {
    zext_ln11_11_fu_666_p1 = esl_zext<64,6>(add_ln11_8_fu_660_p2.read());
}

void matrix_vector::thread_zext_ln11_12_fu_736_p1() {
    zext_ln11_12_fu_736_p1 = esl_zext<64,6>(sext_ln11_1_fu_732_p1.read());
}

void matrix_vector::thread_zext_ln11_1_fu_515_p1() {
    zext_ln11_1_fu_515_p1 = esl_zext<64,4>(j_0_1_reg_299.read());
}

void matrix_vector::thread_zext_ln11_2_fu_549_p1() {
    zext_ln11_2_fu_549_p1 = esl_zext<64,4>(j_0_2_reg_323.read());
}

void matrix_vector::thread_zext_ln11_3_fu_581_p1() {
    zext_ln11_3_fu_581_p1 = esl_zext<64,4>(j_0_3_reg_347.read());
}

void matrix_vector::thread_zext_ln11_4_fu_619_p1() {
    zext_ln11_4_fu_619_p1 = esl_zext<64,4>(j_0_4_reg_371.read());
}

void matrix_vector::thread_zext_ln11_5_fu_651_p1() {
    zext_ln11_5_fu_651_p1 = esl_zext<64,4>(j_0_5_reg_395.read());
}

void matrix_vector::thread_zext_ln11_6_fu_689_p1() {
    zext_ln11_6_fu_689_p1 = esl_zext<64,4>(j_0_6_reg_419.read());
}

void matrix_vector::thread_zext_ln11_7_fu_721_p1() {
    zext_ln11_7_fu_721_p1 = esl_zext<64,4>(j_0_7_reg_443.read());
}

void matrix_vector::thread_zext_ln11_8_fu_526_p1() {
    zext_ln11_8_fu_526_p1 = esl_zext<64,4>(xor_ln11_fu_520_p2.read());
}

void matrix_vector::thread_zext_ln11_9_fu_596_p1() {
    zext_ln11_9_fu_596_p1 = esl_zext<64,5>(sext_ln11_fu_592_p1.read());
}

void matrix_vector::thread_zext_ln11_fu_491_p1() {
    zext_ln11_fu_491_p1 = esl_zext<64,4>(j_0_0_reg_275.read());
}

void matrix_vector::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_479_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln10_1_fu_503_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln10_2_fu_537_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(icmp_ln10_3_fu_569_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln10_4_fu_607_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(icmp_ln10_5_fu_639_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(icmp_ln10_6_fu_677_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(icmp_ln10_7_fu_709_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

void matrix_vector::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_address0\" :  \"" << M_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_ce0\" :  \"" << M_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_q0\" :  \"" << M_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_In_address0\" :  \"" << V_In_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_In_ce0\" :  \"" << V_In_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"V_In_q0\" :  \"" << V_In_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_Out_address0\" :  \"" << V_Out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_Out_ce0\" :  \"" << V_Out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_Out_we0\" :  \"" << V_Out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_Out_d0\" :  \"" << V_Out_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

