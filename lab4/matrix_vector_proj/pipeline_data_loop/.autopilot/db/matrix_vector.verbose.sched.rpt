

================================================================
== Vivado HLS Report for 'matrix_vector'
================================================================
* Date:           Wed Jun 21 12:10:31 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        matrix_vector_proj
* Solution:       pipeline_data_loop
* Product family: zynquplus
* Target device:  xqzu5ev-ffrb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 8.00 ns | 6.435 ns |   1.00 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       35|       35| 0.280 us | 0.280 us |   35|   35|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- data_loop  |       33|       33|         6|          4|          1|     8|    yes   |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 4, D = 6, States = { 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 8 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 2 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i32]* %M) nounwind, !map !7"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %V_In) nounwind, !map !13"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %V_Out) nounwind, !map !18"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @matrix_vector_str) nounwind"   --->   Operation 12 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%V_In_addr = getelementptr [8 x i32]* %V_In, i64 0, i64 0" [matrix_vector_base.c:11]   --->   Operation 13 'getelementptr' 'V_In_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%V_In_addr_1 = getelementptr [8 x i32]* %V_In, i64 0, i64 1" [matrix_vector_base.c:11]   --->   Operation 14 'getelementptr' 'V_In_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%V_In_addr_2 = getelementptr [8 x i32]* %V_In, i64 0, i64 2" [matrix_vector_base.c:11]   --->   Operation 15 'getelementptr' 'V_In_addr_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%V_In_addr_3 = getelementptr [8 x i32]* %V_In, i64 0, i64 3" [matrix_vector_base.c:11]   --->   Operation 16 'getelementptr' 'V_In_addr_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%V_In_addr_4 = getelementptr [8 x i32]* %V_In, i64 0, i64 4" [matrix_vector_base.c:11]   --->   Operation 17 'getelementptr' 'V_In_addr_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%V_In_addr_5 = getelementptr [8 x i32]* %V_In, i64 0, i64 5" [matrix_vector_base.c:11]   --->   Operation 18 'getelementptr' 'V_In_addr_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%V_In_addr_6 = getelementptr [8 x i32]* %V_In, i64 0, i64 6" [matrix_vector_base.c:11]   --->   Operation 19 'getelementptr' 'V_In_addr_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%V_In_addr_7 = getelementptr [8 x i32]* %V_In, i64 0, i64 7" [matrix_vector_base.c:11]   --->   Operation 20 'getelementptr' 'V_In_addr_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.75ns)   --->   "br label %1" [matrix_vector_base.c:7]   --->   Operation 21 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 1.35>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ 0, %0 ], [ %i, %data_loop ]"   --->   Operation 22 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.88ns)   --->   "%icmp_ln7 = icmp eq i4 %i_0, -8" [matrix_vector_base.c:7]   --->   Operation 23 'icmp' 'icmp_ln7' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind"   --->   Operation 24 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.86ns)   --->   "%i = add i4 %i_0, 1" [matrix_vector_base.c:7]   --->   Operation 25 'add' 'i' <Predicate = true> <Delay = 0.86> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %icmp_ln7, label %2, label %data_loop" [matrix_vector_base.c:7]   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_1 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_0, i3 0)" [matrix_vector_base.c:11]   --->   Operation 27 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln11_1 = zext i7 %tmp_1 to i64" [matrix_vector_base.c:11]   --->   Operation 28 'zext' 'zext_ln11_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%M_addr = getelementptr [64 x i32]* %M, i64 0, i64 %zext_ln11_1" [matrix_vector_base.c:11]   --->   Operation 29 'getelementptr' 'M_addr' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%or_ln11 = or i7 %tmp_1, 1" [matrix_vector_base.c:11]   --->   Operation 30 'or' 'or_ln11' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_2 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %or_ln11)" [matrix_vector_base.c:11]   --->   Operation 31 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%M_addr_1 = getelementptr [64 x i32]* %M, i64 0, i64 %tmp_2" [matrix_vector_base.c:11]   --->   Operation 32 'getelementptr' 'M_addr_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_2 : Operation 33 [2/2] (0.79ns)   --->   "%V_In_load = load i32* %V_In_addr, align 4" [matrix_vector_base.c:11]   --->   Operation 33 'load' 'V_In_load' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 34 [2/2] (1.35ns)   --->   "%M_load = load i32* %M_addr, align 4" [matrix_vector_base.c:11]   --->   Operation 34 'load' 'M_load' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 35 [2/2] (0.79ns)   --->   "%V_In_load_1 = load i32* %V_In_addr_1, align 4" [matrix_vector_base.c:11]   --->   Operation 35 'load' 'V_In_load_1' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 36 [2/2] (1.35ns)   --->   "%M_load_1 = load i32* %M_addr_1, align 4" [matrix_vector_base.c:11]   --->   Operation 36 'load' 'M_load_1' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 3 <SV = 2> <Delay = 6.43>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%or_ln11_1 = or i7 %tmp_1, 2" [matrix_vector_base.c:11]   --->   Operation 37 'or' 'or_ln11_1' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_3 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %or_ln11_1)" [matrix_vector_base.c:11]   --->   Operation 38 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%M_addr_2 = getelementptr [64 x i32]* %M, i64 0, i64 %tmp_3" [matrix_vector_base.c:11]   --->   Operation 39 'getelementptr' 'M_addr_2' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%or_ln11_2 = or i7 %tmp_1, 3" [matrix_vector_base.c:11]   --->   Operation 40 'or' 'or_ln11_2' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_4 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %or_ln11_2)" [matrix_vector_base.c:11]   --->   Operation 41 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%M_addr_3 = getelementptr [64 x i32]* %M, i64 0, i64 %tmp_4" [matrix_vector_base.c:11]   --->   Operation 42 'getelementptr' 'M_addr_3' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_3 : Operation 43 [1/2] (0.79ns)   --->   "%V_In_load = load i32* %V_In_addr, align 4" [matrix_vector_base.c:11]   --->   Operation 43 'load' 'V_In_load' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 44 [1/2] (1.35ns)   --->   "%M_load = load i32* %M_addr, align 4" [matrix_vector_base.c:11]   --->   Operation 44 'load' 'M_load' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 45 [1/1] (3.88ns)   --->   "%mul_ln11 = mul nsw i32 %M_load, %V_In_load" [matrix_vector_base.c:11]   --->   Operation 45 'mul' 'mul_ln11' <Predicate = (!icmp_ln7)> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/2] (0.79ns)   --->   "%V_In_load_1 = load i32* %V_In_addr_1, align 4" [matrix_vector_base.c:11]   --->   Operation 46 'load' 'V_In_load_1' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 47 [1/2] (1.35ns)   --->   "%M_load_1 = load i32* %M_addr_1, align 4" [matrix_vector_base.c:11]   --->   Operation 47 'load' 'M_load_1' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 48 [1/1] (3.88ns)   --->   "%mul_ln11_1 = mul nsw i32 %M_load_1, %V_In_load_1" [matrix_vector_base.c:11]   --->   Operation 48 'mul' 'mul_ln11_1' <Predicate = (!icmp_ln7)> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [2/2] (0.79ns)   --->   "%V_In_load_2 = load i32* %V_In_addr_2, align 4" [matrix_vector_base.c:11]   --->   Operation 49 'load' 'V_In_load_2' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 50 [2/2] (1.35ns)   --->   "%M_load_2 = load i32* %M_addr_2, align 4" [matrix_vector_base.c:11]   --->   Operation 50 'load' 'M_load_2' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 51 [2/2] (0.79ns)   --->   "%V_In_load_3 = load i32* %V_In_addr_3, align 4" [matrix_vector_base.c:11]   --->   Operation 51 'load' 'V_In_load_3' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 52 [2/2] (1.35ns)   --->   "%M_load_3 = load i32* %M_addr_3, align 4" [matrix_vector_base.c:11]   --->   Operation 52 'load' 'M_load_3' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 53 [1/1] (1.20ns)   --->   "%add_ln11 = add i32 %mul_ln11_1, %mul_ln11" [matrix_vector_base.c:11]   --->   Operation 53 'add' 'add_ln11' <Predicate = (!icmp_ln7)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.12>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%or_ln11_3 = or i7 %tmp_1, 4" [matrix_vector_base.c:11]   --->   Operation 54 'or' 'or_ln11_3' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_5 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %or_ln11_3)" [matrix_vector_base.c:11]   --->   Operation 55 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%M_addr_4 = getelementptr [64 x i32]* %M, i64 0, i64 %tmp_5" [matrix_vector_base.c:11]   --->   Operation 56 'getelementptr' 'M_addr_4' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%or_ln11_4 = or i7 %tmp_1, 5" [matrix_vector_base.c:11]   --->   Operation 57 'or' 'or_ln11_4' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_6 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %or_ln11_4)" [matrix_vector_base.c:11]   --->   Operation 58 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%M_addr_5 = getelementptr [64 x i32]* %M, i64 0, i64 %tmp_6" [matrix_vector_base.c:11]   --->   Operation 59 'getelementptr' 'M_addr_5' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_4 : Operation 60 [1/2] (0.79ns)   --->   "%V_In_load_2 = load i32* %V_In_addr_2, align 4" [matrix_vector_base.c:11]   --->   Operation 60 'load' 'V_In_load_2' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 61 [1/2] (1.35ns)   --->   "%M_load_2 = load i32* %M_addr_2, align 4" [matrix_vector_base.c:11]   --->   Operation 61 'load' 'M_load_2' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 62 [1/1] (3.88ns)   --->   "%mul_ln11_2 = mul nsw i32 %M_load_2, %V_In_load_2" [matrix_vector_base.c:11]   --->   Operation 62 'mul' 'mul_ln11_2' <Predicate = (!icmp_ln7)> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/2] (0.79ns)   --->   "%V_In_load_3 = load i32* %V_In_addr_3, align 4" [matrix_vector_base.c:11]   --->   Operation 63 'load' 'V_In_load_3' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 64 [1/2] (1.35ns)   --->   "%M_load_3 = load i32* %M_addr_3, align 4" [matrix_vector_base.c:11]   --->   Operation 64 'load' 'M_load_3' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 65 [1/1] (3.88ns)   --->   "%mul_ln11_3 = mul nsw i32 %M_load_3, %V_In_load_3" [matrix_vector_base.c:11]   --->   Operation 65 'mul' 'mul_ln11_3' <Predicate = (!icmp_ln7)> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 66 [2/2] (0.79ns)   --->   "%V_In_load_4 = load i32* %V_In_addr_4, align 4" [matrix_vector_base.c:11]   --->   Operation 66 'load' 'V_In_load_4' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 67 [2/2] (1.35ns)   --->   "%M_load_4 = load i32* %M_addr_4, align 4" [matrix_vector_base.c:11]   --->   Operation 67 'load' 'M_load_4' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 68 [2/2] (0.79ns)   --->   "%V_In_load_5 = load i32* %V_In_addr_5, align 4" [matrix_vector_base.c:11]   --->   Operation 68 'load' 'V_In_load_5' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 69 [2/2] (1.35ns)   --->   "%M_load_5 = load i32* %M_addr_5, align 4" [matrix_vector_base.c:11]   --->   Operation 69 'load' 'M_load_5' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 70 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln11_1 = add i32 %mul_ln11_3, %mul_ln11_2" [matrix_vector_base.c:11]   --->   Operation 70 'add' 'add_ln11_1' <Predicate = (!icmp_ln7)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 71 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%add_ln11_2 = add i32 %add_ln11, %add_ln11_1" [matrix_vector_base.c:11]   --->   Operation 71 'add' 'add_ln11_2' <Predicate = (!icmp_ln7)> <Delay = 0.88> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 6.43>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%or_ln11_5 = or i7 %tmp_1, 6" [matrix_vector_base.c:11]   --->   Operation 72 'or' 'or_ln11_5' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_7 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %or_ln11_5)" [matrix_vector_base.c:11]   --->   Operation 73 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%M_addr_6 = getelementptr [64 x i32]* %M, i64 0, i64 %tmp_7" [matrix_vector_base.c:11]   --->   Operation 74 'getelementptr' 'M_addr_6' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%or_ln11_6 = or i7 %tmp_1, 7" [matrix_vector_base.c:11]   --->   Operation 75 'or' 'or_ln11_6' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_8 = call i64 @_ssdm_op_BitConcatenate.i64.i57.i7(i57 0, i7 %or_ln11_6)" [matrix_vector_base.c:11]   --->   Operation 76 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%M_addr_7 = getelementptr [64 x i32]* %M, i64 0, i64 %tmp_8" [matrix_vector_base.c:11]   --->   Operation 77 'getelementptr' 'M_addr_7' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_5 : Operation 78 [1/2] (0.79ns)   --->   "%V_In_load_4 = load i32* %V_In_addr_4, align 4" [matrix_vector_base.c:11]   --->   Operation 78 'load' 'V_In_load_4' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 79 [1/2] (1.35ns)   --->   "%M_load_4 = load i32* %M_addr_4, align 4" [matrix_vector_base.c:11]   --->   Operation 79 'load' 'M_load_4' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 80 [1/1] (3.88ns)   --->   "%mul_ln11_4 = mul nsw i32 %M_load_4, %V_In_load_4" [matrix_vector_base.c:11]   --->   Operation 80 'mul' 'mul_ln11_4' <Predicate = (!icmp_ln7)> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/2] (0.79ns)   --->   "%V_In_load_5 = load i32* %V_In_addr_5, align 4" [matrix_vector_base.c:11]   --->   Operation 81 'load' 'V_In_load_5' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 82 [1/2] (1.35ns)   --->   "%M_load_5 = load i32* %M_addr_5, align 4" [matrix_vector_base.c:11]   --->   Operation 82 'load' 'M_load_5' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 83 [1/1] (3.88ns)   --->   "%mul_ln11_5 = mul nsw i32 %M_load_5, %V_In_load_5" [matrix_vector_base.c:11]   --->   Operation 83 'mul' 'mul_ln11_5' <Predicate = (!icmp_ln7)> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 84 [2/2] (0.79ns)   --->   "%V_In_load_6 = load i32* %V_In_addr_6, align 4" [matrix_vector_base.c:11]   --->   Operation 84 'load' 'V_In_load_6' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 85 [2/2] (1.35ns)   --->   "%M_load_6 = load i32* %M_addr_6, align 4" [matrix_vector_base.c:11]   --->   Operation 85 'load' 'M_load_6' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 86 [2/2] (0.79ns)   --->   "%V_In_load_7 = load i32* %V_In_addr_7, align 4" [matrix_vector_base.c:11]   --->   Operation 86 'load' 'V_In_load_7' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 87 [2/2] (1.35ns)   --->   "%M_load_7 = load i32* %M_addr_7, align 4" [matrix_vector_base.c:11]   --->   Operation 87 'load' 'M_load_7' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 88 [1/1] (1.20ns)   --->   "%add_ln11_3 = add i32 %mul_ln11_5, %mul_ln11_4" [matrix_vector_base.c:11]   --->   Operation 88 'add' 'add_ln11_3' <Predicate = (!icmp_ln7)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.43>
ST_6 : Operation 89 [1/2] (0.79ns)   --->   "%V_In_load_6 = load i32* %V_In_addr_6, align 4" [matrix_vector_base.c:11]   --->   Operation 89 'load' 'V_In_load_6' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 90 [1/2] (1.35ns)   --->   "%M_load_6 = load i32* %M_addr_6, align 4" [matrix_vector_base.c:11]   --->   Operation 90 'load' 'M_load_6' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 91 [1/1] (3.88ns)   --->   "%mul_ln11_6 = mul nsw i32 %M_load_6, %V_In_load_6" [matrix_vector_base.c:11]   --->   Operation 91 'mul' 'mul_ln11_6' <Predicate = (!icmp_ln7)> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 92 [1/2] (0.79ns)   --->   "%V_In_load_7 = load i32* %V_In_addr_7, align 4" [matrix_vector_base.c:11]   --->   Operation 92 'load' 'V_In_load_7' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 93 [1/2] (1.35ns)   --->   "%M_load_7 = load i32* %M_addr_7, align 4" [matrix_vector_base.c:11]   --->   Operation 93 'load' 'M_load_7' <Predicate = (!icmp_ln7)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 94 [1/1] (3.88ns)   --->   "%mul_ln11_7 = mul nsw i32 %M_load_7, %V_In_load_7" [matrix_vector_base.c:11]   --->   Operation 94 'mul' 'mul_ln11_7' <Predicate = (!icmp_ln7)> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 95 [1/1] (1.20ns)   --->   "%add_ln11_4 = add i32 %mul_ln11_7, %mul_ln11_6" [matrix_vector_base.c:11]   --->   Operation 95 'add' 'add_ln11_4' <Predicate = (!icmp_ln7)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 1.67>
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str) nounwind" [matrix_vector_base.c:7]   --->   Operation 96 'specloopname' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str) nounwind" [matrix_vector_base.c:7]   --->   Operation 97 'specregionbegin' 'tmp' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [matrix_vector_base.c:8]   --->   Operation 98 'specpipeline' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i4 %i_0 to i64" [matrix_vector_base.c:11]   --->   Operation 99 'zext' 'zext_ln11' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 100 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln11_5 = add i32 %add_ln11_3, %add_ln11_4" [matrix_vector_base.c:11]   --->   Operation 100 'add' 'add_ln11_5' <Predicate = (!icmp_ln7)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 101 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%add_ln11_6 = add nsw i32 %add_ln11_2, %add_ln11_5" [matrix_vector_base.c:11]   --->   Operation 101 'add' 'add_ln11_6' <Predicate = (!icmp_ln7)> <Delay = 0.88> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "%V_Out_addr = getelementptr [8 x i32]* %V_Out, i64 0, i64 %zext_ln11" [matrix_vector_base.c:13]   --->   Operation 102 'getelementptr' 'V_Out_addr' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 103 [1/1] (0.79ns)   --->   "store i32 %add_ln11_6, i32* %V_Out_addr, align 4" [matrix_vector_base.c:13]   --->   Operation 103 'store' <Predicate = (!icmp_ln7)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str, i32 %tmp) nounwind" [matrix_vector_base.c:14]   --->   Operation 104 'specregionend' 'empty_2' <Predicate = (!icmp_ln7)> <Delay = 0.00>
ST_7 : Operation 105 [1/1] (0.00ns)   --->   "br label %1" [matrix_vector_base.c:7]   --->   Operation 105 'br' <Predicate = (!icmp_ln7)> <Delay = 0.00>

State 8 <SV = 2> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "ret void" [matrix_vector_base.c:15]   --->   Operation 106 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', matrix_vector_base.c:7) [18]  (0.755 ns)

 <State 2>: 1.35ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', matrix_vector_base.c:7) [18]  (0 ns)
	'getelementptr' operation ('M_addr', matrix_vector_base.c:11) [30]  (0 ns)
	'load' operation ('M_load', matrix_vector_base.c:11) on array 'M' [53]  (1.35 ns)

 <State 3>: 6.44ns
The critical path consists of the following:
	'load' operation ('M_load', matrix_vector_base.c:11) on array 'M' [53]  (1.35 ns)
	'mul' operation ('mul_ln11', matrix_vector_base.c:11) [54]  (3.88 ns)
	'add' operation ('add_ln11', matrix_vector_base.c:11) [76]  (1.2 ns)

 <State 4>: 6.12ns
The critical path consists of the following:
	'load' operation ('M_load_2', matrix_vector_base.c:11) on array 'M' [59]  (1.35 ns)
	'mul' operation ('mul_ln11_2', matrix_vector_base.c:11) [60]  (3.88 ns)
	'add' operation ('add_ln11_1', matrix_vector_base.c:11) [77]  (0 ns)
	'add' operation ('add_ln11_2', matrix_vector_base.c:11) [78]  (0.889 ns)

 <State 5>: 6.44ns
The critical path consists of the following:
	'load' operation ('M_load_4', matrix_vector_base.c:11) on array 'M' [65]  (1.35 ns)
	'mul' operation ('mul_ln11_4', matrix_vector_base.c:11) [66]  (3.88 ns)
	'add' operation ('add_ln11_3', matrix_vector_base.c:11) [79]  (1.2 ns)

 <State 6>: 6.44ns
The critical path consists of the following:
	'load' operation ('M_load_6', matrix_vector_base.c:11) on array 'M' [71]  (1.35 ns)
	'mul' operation ('mul_ln11_6', matrix_vector_base.c:11) [72]  (3.88 ns)
	'add' operation ('add_ln11_4', matrix_vector_base.c:11) [80]  (1.2 ns)

 <State 7>: 1.68ns
The critical path consists of the following:
	'add' operation ('add_ln11_5', matrix_vector_base.c:11) [81]  (0 ns)
	'add' operation ('add_ln11_6', matrix_vector_base.c:11) [82]  (0.889 ns)
	'store' operation ('store_ln13', matrix_vector_base.c:13) of variable 'add_ln11_6', matrix_vector_base.c:11 on array 'V_Out' [84]  (0.79 ns)

 <State 8>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
