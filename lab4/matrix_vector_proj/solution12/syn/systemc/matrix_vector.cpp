// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrix_vector.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrix_vector::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrix_vector::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> matrix_vector::ap_ST_fsm_state1 = "1";
const sc_lv<6> matrix_vector::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> matrix_vector::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<6> matrix_vector::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<6> matrix_vector::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<6> matrix_vector::ap_ST_fsm_state8 = "100000";
const sc_lv<32> matrix_vector::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool matrix_vector::ap_const_boolean_1 = true;
const sc_lv<32> matrix_vector::ap_const_lv32_1 = "1";
const bool matrix_vector::ap_const_boolean_0 = false;
const sc_lv<1> matrix_vector::ap_const_lv1_0 = "0";
const sc_lv<32> matrix_vector::ap_const_lv32_2 = "10";
const sc_lv<32> matrix_vector::ap_const_lv32_3 = "11";
const sc_lv<32> matrix_vector::ap_const_lv32_4 = "100";
const sc_lv<1> matrix_vector::ap_const_lv1_1 = "1";
const sc_lv<4> matrix_vector::ap_const_lv4_0 = "0000";
const sc_lv<64> matrix_vector::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> matrix_vector::ap_const_lv64_1 = "1";
const sc_lv<64> matrix_vector::ap_const_lv64_2 = "10";
const sc_lv<64> matrix_vector::ap_const_lv64_3 = "11";
const sc_lv<64> matrix_vector::ap_const_lv64_4 = "100";
const sc_lv<64> matrix_vector::ap_const_lv64_5 = "101";
const sc_lv<64> matrix_vector::ap_const_lv64_6 = "110";
const sc_lv<64> matrix_vector::ap_const_lv64_7 = "111";
const sc_lv<4> matrix_vector::ap_const_lv4_8 = "1000";
const sc_lv<4> matrix_vector::ap_const_lv4_1 = "1";
const sc_lv<32> matrix_vector::ap_const_lv32_5 = "101";

matrix_vector::matrix_vector(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_M_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln11_fu_287_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_M_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_M_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln11_fu_287_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_M_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_M_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln11_fu_287_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_M_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_M_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln11_fu_287_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_M_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_M_4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln11_fu_287_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_M_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_M_5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln11_fu_287_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_M_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_M_6_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln11_fu_287_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_M_6_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_M_7_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln11_fu_287_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_M_7_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_V_In_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_V_In_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_V_In_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_V_In_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_V_Out_address0);
    sensitive << ( zext_ln11_reg_428_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_V_Out_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_V_Out_d0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( add_ln11_5_fu_367_p2 );
    sensitive << ( add_ln11_2_fu_359_p2 );

    SC_METHOD(thread_V_Out_we0);
    sensitive << ( icmp_ln7_reg_419_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_add_ln11_1_fu_327_p2);
    sensitive << ( mul_ln11_2_fu_317_p2 );
    sensitive << ( mul_ln11_3_fu_322_p2 );

    SC_METHOD(thread_add_ln11_2_fu_359_p2);
    sensitive << ( add_ln11_reg_503 );
    sensitive << ( add_ln11_1_reg_508 );

    SC_METHOD(thread_add_ln11_3_fu_363_p2);
    sensitive << ( mul_ln11_4_reg_513 );
    sensitive << ( mul_ln11_5_reg_518 );

    SC_METHOD(thread_add_ln11_4_fu_353_p2);
    sensitive << ( mul_ln11_6_fu_343_p2 );
    sensitive << ( mul_ln11_7_fu_348_p2 );

    SC_METHOD(thread_add_ln11_5_fu_367_p2);
    sensitive << ( add_ln11_4_reg_523 );
    sensitive << ( add_ln11_3_fu_363_p2 );

    SC_METHOD(thread_add_ln11_fu_311_p2);
    sensitive << ( mul_ln11_fu_299_p2 );
    sensitive << ( mul_ln11_1_fu_305_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln7_fu_275_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_268_p4);
    sensitive << ( i_0_reg_264 );
    sensitive << ( icmp_ln7_reg_419 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_423 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_i_fu_281_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_268_p4 );

    SC_METHOD(thread_icmp_ln7_fu_275_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_268_p4 );

    SC_METHOD(thread_mul_ln11_1_fu_305_p0);
    sensitive << ( V_In_q1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_mul_ln11_1_fu_305_p1);
    sensitive << ( M_1_q0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_mul_ln11_1_fu_305_p2);
    sensitive << ( mul_ln11_1_fu_305_p0 );
    sensitive << ( mul_ln11_1_fu_305_p1 );

    SC_METHOD(thread_mul_ln11_2_fu_317_p0);
    sensitive << ( V_In_q0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_mul_ln11_2_fu_317_p2);
    sensitive << ( M_2_load_reg_473 );
    sensitive << ( mul_ln11_2_fu_317_p0 );

    SC_METHOD(thread_mul_ln11_3_fu_322_p0);
    sensitive << ( V_In_q1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_mul_ln11_3_fu_322_p2);
    sensitive << ( M_3_load_reg_478 );
    sensitive << ( mul_ln11_3_fu_322_p0 );

    SC_METHOD(thread_mul_ln11_4_fu_333_p0);
    sensitive << ( V_In_q0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_mul_ln11_4_fu_333_p2);
    sensitive << ( M_4_load_reg_483 );
    sensitive << ( mul_ln11_4_fu_333_p0 );

    SC_METHOD(thread_mul_ln11_5_fu_338_p0);
    sensitive << ( V_In_q1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_mul_ln11_5_fu_338_p2);
    sensitive << ( M_5_load_reg_488 );
    sensitive << ( mul_ln11_5_fu_338_p0 );

    SC_METHOD(thread_mul_ln11_6_fu_343_p0);
    sensitive << ( V_In_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mul_ln11_6_fu_343_p2);
    sensitive << ( M_6_load_reg_493 );
    sensitive << ( mul_ln11_6_fu_343_p0 );

    SC_METHOD(thread_mul_ln11_7_fu_348_p0);
    sensitive << ( V_In_q1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mul_ln11_7_fu_348_p2);
    sensitive << ( M_7_load_reg_498 );
    sensitive << ( mul_ln11_7_fu_348_p0 );

    SC_METHOD(thread_mul_ln11_fu_299_p0);
    sensitive << ( V_In_q0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_mul_ln11_fu_299_p1);
    sensitive << ( M_0_q0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_mul_ln11_fu_299_p2);
    sensitive << ( mul_ln11_fu_299_p0 );
    sensitive << ( mul_ln11_fu_299_p1 );

    SC_METHOD(thread_zext_ln11_fu_287_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_268_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln7_fu_275_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrix_vector_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, M_0_address0, "(port)M_0_address0");
    sc_trace(mVcdFile, M_0_ce0, "(port)M_0_ce0");
    sc_trace(mVcdFile, M_0_q0, "(port)M_0_q0");
    sc_trace(mVcdFile, M_1_address0, "(port)M_1_address0");
    sc_trace(mVcdFile, M_1_ce0, "(port)M_1_ce0");
    sc_trace(mVcdFile, M_1_q0, "(port)M_1_q0");
    sc_trace(mVcdFile, M_2_address0, "(port)M_2_address0");
    sc_trace(mVcdFile, M_2_ce0, "(port)M_2_ce0");
    sc_trace(mVcdFile, M_2_q0, "(port)M_2_q0");
    sc_trace(mVcdFile, M_3_address0, "(port)M_3_address0");
    sc_trace(mVcdFile, M_3_ce0, "(port)M_3_ce0");
    sc_trace(mVcdFile, M_3_q0, "(port)M_3_q0");
    sc_trace(mVcdFile, M_4_address0, "(port)M_4_address0");
    sc_trace(mVcdFile, M_4_ce0, "(port)M_4_ce0");
    sc_trace(mVcdFile, M_4_q0, "(port)M_4_q0");
    sc_trace(mVcdFile, M_5_address0, "(port)M_5_address0");
    sc_trace(mVcdFile, M_5_ce0, "(port)M_5_ce0");
    sc_trace(mVcdFile, M_5_q0, "(port)M_5_q0");
    sc_trace(mVcdFile, M_6_address0, "(port)M_6_address0");
    sc_trace(mVcdFile, M_6_ce0, "(port)M_6_ce0");
    sc_trace(mVcdFile, M_6_q0, "(port)M_6_q0");
    sc_trace(mVcdFile, M_7_address0, "(port)M_7_address0");
    sc_trace(mVcdFile, M_7_ce0, "(port)M_7_ce0");
    sc_trace(mVcdFile, M_7_q0, "(port)M_7_q0");
    sc_trace(mVcdFile, V_In_address0, "(port)V_In_address0");
    sc_trace(mVcdFile, V_In_ce0, "(port)V_In_ce0");
    sc_trace(mVcdFile, V_In_q0, "(port)V_In_q0");
    sc_trace(mVcdFile, V_In_address1, "(port)V_In_address1");
    sc_trace(mVcdFile, V_In_ce1, "(port)V_In_ce1");
    sc_trace(mVcdFile, V_In_q1, "(port)V_In_q1");
    sc_trace(mVcdFile, V_Out_address0, "(port)V_Out_address0");
    sc_trace(mVcdFile, V_Out_ce0, "(port)V_Out_ce0");
    sc_trace(mVcdFile, V_Out_we0, "(port)V_Out_we0");
    sc_trace(mVcdFile, V_Out_d0, "(port)V_Out_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_0_reg_264, "i_0_reg_264");
    sc_trace(mVcdFile, icmp_ln7_fu_275_p2, "icmp_ln7_fu_275_p2");
    sc_trace(mVcdFile, icmp_ln7_reg_419, "icmp_ln7_reg_419");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln7_reg_419_pp0_iter1_reg, "icmp_ln7_reg_419_pp0_iter1_reg");
    sc_trace(mVcdFile, i_fu_281_p2, "i_fu_281_p2");
    sc_trace(mVcdFile, i_reg_423, "i_reg_423");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln11_fu_287_p1, "zext_ln11_fu_287_p1");
    sc_trace(mVcdFile, zext_ln11_reg_428, "zext_ln11_reg_428");
    sc_trace(mVcdFile, zext_ln11_reg_428_pp0_iter1_reg, "zext_ln11_reg_428_pp0_iter1_reg");
    sc_trace(mVcdFile, M_2_load_reg_473, "M_2_load_reg_473");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter1, "ap_block_state7_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, M_3_load_reg_478, "M_3_load_reg_478");
    sc_trace(mVcdFile, M_4_load_reg_483, "M_4_load_reg_483");
    sc_trace(mVcdFile, M_5_load_reg_488, "M_5_load_reg_488");
    sc_trace(mVcdFile, M_6_load_reg_493, "M_6_load_reg_493");
    sc_trace(mVcdFile, M_7_load_reg_498, "M_7_load_reg_498");
    sc_trace(mVcdFile, add_ln11_fu_311_p2, "add_ln11_fu_311_p2");
    sc_trace(mVcdFile, add_ln11_reg_503, "add_ln11_reg_503");
    sc_trace(mVcdFile, add_ln11_1_fu_327_p2, "add_ln11_1_fu_327_p2");
    sc_trace(mVcdFile, add_ln11_1_reg_508, "add_ln11_1_reg_508");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, mul_ln11_4_fu_333_p2, "mul_ln11_4_fu_333_p2");
    sc_trace(mVcdFile, mul_ln11_4_reg_513, "mul_ln11_4_reg_513");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, mul_ln11_5_fu_338_p2, "mul_ln11_5_fu_338_p2");
    sc_trace(mVcdFile, mul_ln11_5_reg_518, "mul_ln11_5_reg_518");
    sc_trace(mVcdFile, add_ln11_4_fu_353_p2, "add_ln11_4_fu_353_p2");
    sc_trace(mVcdFile, add_ln11_4_reg_523, "add_ln11_4_reg_523");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_268_p4, "ap_phi_mux_i_0_phi_fu_268_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, mul_ln11_fu_299_p0, "mul_ln11_fu_299_p0");
    sc_trace(mVcdFile, mul_ln11_fu_299_p1, "mul_ln11_fu_299_p1");
    sc_trace(mVcdFile, mul_ln11_1_fu_305_p0, "mul_ln11_1_fu_305_p0");
    sc_trace(mVcdFile, mul_ln11_1_fu_305_p1, "mul_ln11_1_fu_305_p1");
    sc_trace(mVcdFile, mul_ln11_fu_299_p2, "mul_ln11_fu_299_p2");
    sc_trace(mVcdFile, mul_ln11_1_fu_305_p2, "mul_ln11_1_fu_305_p2");
    sc_trace(mVcdFile, mul_ln11_2_fu_317_p0, "mul_ln11_2_fu_317_p0");
    sc_trace(mVcdFile, mul_ln11_3_fu_322_p0, "mul_ln11_3_fu_322_p0");
    sc_trace(mVcdFile, mul_ln11_2_fu_317_p2, "mul_ln11_2_fu_317_p2");
    sc_trace(mVcdFile, mul_ln11_3_fu_322_p2, "mul_ln11_3_fu_322_p2");
    sc_trace(mVcdFile, mul_ln11_4_fu_333_p0, "mul_ln11_4_fu_333_p0");
    sc_trace(mVcdFile, mul_ln11_5_fu_338_p0, "mul_ln11_5_fu_338_p0");
    sc_trace(mVcdFile, mul_ln11_6_fu_343_p0, "mul_ln11_6_fu_343_p0");
    sc_trace(mVcdFile, mul_ln11_7_fu_348_p0, "mul_ln11_7_fu_348_p0");
    sc_trace(mVcdFile, mul_ln11_6_fu_343_p2, "mul_ln11_6_fu_343_p2");
    sc_trace(mVcdFile, mul_ln11_7_fu_348_p2, "mul_ln11_7_fu_348_p2");
    sc_trace(mVcdFile, add_ln11_3_fu_363_p2, "add_ln11_3_fu_363_p2");
    sc_trace(mVcdFile, add_ln11_5_fu_367_p2, "add_ln11_5_fu_367_p2");
    sc_trace(mVcdFile, add_ln11_2_fu_359_p2, "add_ln11_2_fu_359_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("matrix_vector.hdltvin.dat");
    mHdltvoutHandle.open("matrix_vector.hdltvout.dat");
}

matrix_vector::~matrix_vector() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void matrix_vector::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln7_reg_419.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_264 = i_reg_423.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_264 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_reg_419.read(), ap_const_lv1_0))) {
        M_2_load_reg_473 = M_2_q0.read();
        M_3_load_reg_478 = M_3_q0.read();
        M_4_load_reg_483 = M_4_q0.read();
        M_5_load_reg_488 = M_5_q0.read();
        M_6_load_reg_493 = M_6_q0.read();
        M_7_load_reg_498 = M_7_q0.read();
        add_ln11_reg_503 = add_ln11_fu_311_p2.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln7_reg_419.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        add_ln11_1_reg_508 = add_ln11_1_fu_327_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_reg_419.read(), ap_const_lv1_0))) {
        add_ln11_4_reg_523 = add_ln11_4_fu_353_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_423 = i_fu_281_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln7_reg_419 = icmp_ln7_fu_275_p2.read();
        icmp_ln7_reg_419_pp0_iter1_reg = icmp_ln7_reg_419.read();
        zext_ln11_reg_428_pp0_iter1_reg = zext_ln11_reg_428.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln7_reg_419.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        mul_ln11_4_reg_513 = mul_ln11_4_fu_333_p2.read();
        mul_ln11_5_reg_518 = mul_ln11_5_fu_338_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_fu_275_p2.read(), ap_const_lv1_0))) {
        zext_ln11_reg_428 = zext_ln11_fu_287_p1.read();
    }
}

void matrix_vector::thread_M_0_address0() {
    M_0_address0 =  (sc_lv<3>) (zext_ln11_fu_287_p1.read());
}

void matrix_vector::thread_M_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        M_0_ce0 = ap_const_logic_1;
    } else {
        M_0_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_M_1_address0() {
    M_1_address0 =  (sc_lv<3>) (zext_ln11_fu_287_p1.read());
}

void matrix_vector::thread_M_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        M_1_ce0 = ap_const_logic_1;
    } else {
        M_1_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_M_2_address0() {
    M_2_address0 =  (sc_lv<3>) (zext_ln11_fu_287_p1.read());
}

void matrix_vector::thread_M_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        M_2_ce0 = ap_const_logic_1;
    } else {
        M_2_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_M_3_address0() {
    M_3_address0 =  (sc_lv<3>) (zext_ln11_fu_287_p1.read());
}

void matrix_vector::thread_M_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        M_3_ce0 = ap_const_logic_1;
    } else {
        M_3_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_M_4_address0() {
    M_4_address0 =  (sc_lv<3>) (zext_ln11_fu_287_p1.read());
}

void matrix_vector::thread_M_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        M_4_ce0 = ap_const_logic_1;
    } else {
        M_4_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_M_5_address0() {
    M_5_address0 =  (sc_lv<3>) (zext_ln11_fu_287_p1.read());
}

void matrix_vector::thread_M_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        M_5_ce0 = ap_const_logic_1;
    } else {
        M_5_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_M_6_address0() {
    M_6_address0 =  (sc_lv<3>) (zext_ln11_fu_287_p1.read());
}

void matrix_vector::thread_M_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        M_6_ce0 = ap_const_logic_1;
    } else {
        M_6_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_M_7_address0() {
    M_7_address0 =  (sc_lv<3>) (zext_ln11_fu_287_p1.read());
}

void matrix_vector::thread_M_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        M_7_ce0 = ap_const_logic_1;
    } else {
        M_7_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_V_In_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            V_In_address0 =  (sc_lv<3>) (ap_const_lv64_6);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            V_In_address0 =  (sc_lv<3>) (ap_const_lv64_4);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            V_In_address0 =  (sc_lv<3>) (ap_const_lv64_2);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            V_In_address0 =  (sc_lv<3>) (ap_const_lv64_0);
        } else {
            V_In_address0 = "XXX";
        }
    } else {
        V_In_address0 = "XXX";
    }
}

void matrix_vector::thread_V_In_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            V_In_address1 =  (sc_lv<3>) (ap_const_lv64_7);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            V_In_address1 =  (sc_lv<3>) (ap_const_lv64_5);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            V_In_address1 =  (sc_lv<3>) (ap_const_lv64_3);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            V_In_address1 =  (sc_lv<3>) (ap_const_lv64_1);
        } else {
            V_In_address1 = "XXX";
        }
    } else {
        V_In_address1 = "XXX";
    }
}

void matrix_vector::thread_V_In_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        V_In_ce0 = ap_const_logic_1;
    } else {
        V_In_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_V_In_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        V_In_ce1 = ap_const_logic_1;
    } else {
        V_In_ce1 = ap_const_logic_0;
    }
}

void matrix_vector::thread_V_Out_address0() {
    V_Out_address0 =  (sc_lv<3>) (zext_ln11_reg_428_pp0_iter1_reg.read());
}

void matrix_vector::thread_V_Out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        V_Out_ce0 = ap_const_logic_1;
    } else {
        V_Out_ce0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_V_Out_d0() {
    V_Out_d0 = (!add_ln11_5_fu_367_p2.read().is_01() || !add_ln11_2_fu_359_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln11_5_fu_367_p2.read()) + sc_biguint<32>(add_ln11_2_fu_359_p2.read()));
}

void matrix_vector::thread_V_Out_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_reg_419_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        V_Out_we0 = ap_const_logic_1;
    } else {
        V_Out_we0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_add_ln11_1_fu_327_p2() {
    add_ln11_1_fu_327_p2 = (!mul_ln11_2_fu_317_p2.read().is_01() || !mul_ln11_3_fu_322_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln11_2_fu_317_p2.read()) + sc_biguint<32>(mul_ln11_3_fu_322_p2.read()));
}

void matrix_vector::thread_add_ln11_2_fu_359_p2() {
    add_ln11_2_fu_359_p2 = (!add_ln11_1_reg_508.read().is_01() || !add_ln11_reg_503.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln11_1_reg_508.read()) + sc_biguint<32>(add_ln11_reg_503.read()));
}

void matrix_vector::thread_add_ln11_3_fu_363_p2() {
    add_ln11_3_fu_363_p2 = (!mul_ln11_4_reg_513.read().is_01() || !mul_ln11_5_reg_518.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln11_4_reg_513.read()) + sc_biguint<32>(mul_ln11_5_reg_518.read()));
}

void matrix_vector::thread_add_ln11_4_fu_353_p2() {
    add_ln11_4_fu_353_p2 = (!mul_ln11_6_fu_343_p2.read().is_01() || !mul_ln11_7_fu_348_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln11_6_fu_343_p2.read()) + sc_biguint<32>(mul_ln11_7_fu_348_p2.read()));
}

void matrix_vector::thread_add_ln11_5_fu_367_p2() {
    add_ln11_5_fu_367_p2 = (!add_ln11_4_reg_523.read().is_01() || !add_ln11_3_fu_363_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln11_4_reg_523.read()) + sc_biguint<32>(add_ln11_3_fu_363_p2.read()));
}

void matrix_vector::thread_add_ln11_fu_311_p2() {
    add_ln11_fu_311_p2 = (!mul_ln11_fu_299_p2.read().is_01() || !mul_ln11_1_fu_305_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(mul_ln11_fu_299_p2.read()) + sc_biguint<32>(mul_ln11_1_fu_305_p2.read()));
}

void matrix_vector::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void matrix_vector::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void matrix_vector::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void matrix_vector::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void matrix_vector::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrix_vector::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[5];
}

void matrix_vector::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_block_state7_pp0_stage1_iter1() {
    ap_block_state7_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_vector::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln7_fu_275_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void matrix_vector::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrix_vector::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void matrix_vector::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrix_vector::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void matrix_vector::thread_ap_phi_mux_i_0_phi_fu_268_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_reg_419.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_268_p4 = i_reg_423.read();
    } else {
        ap_phi_mux_i_0_phi_fu_268_p4 = i_0_reg_264.read();
    }
}

void matrix_vector::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrix_vector::thread_i_fu_281_p2() {
    i_fu_281_p2 = (!ap_phi_mux_i_0_phi_fu_268_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_i_0_phi_fu_268_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrix_vector::thread_icmp_ln7_fu_275_p2() {
    icmp_ln7_fu_275_p2 = (!ap_phi_mux_i_0_phi_fu_268_p4.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_268_p4.read() == ap_const_lv4_8);
}

void matrix_vector::thread_mul_ln11_1_fu_305_p0() {
    mul_ln11_1_fu_305_p0 = V_In_q1.read();
}

void matrix_vector::thread_mul_ln11_1_fu_305_p1() {
    mul_ln11_1_fu_305_p1 = M_1_q0.read();
}

void matrix_vector::thread_mul_ln11_1_fu_305_p2() {
    mul_ln11_1_fu_305_p2 = (!mul_ln11_1_fu_305_p0.read().is_01() || !mul_ln11_1_fu_305_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln11_1_fu_305_p0.read()) * sc_bigint<32>(mul_ln11_1_fu_305_p1.read());
}

void matrix_vector::thread_mul_ln11_2_fu_317_p0() {
    mul_ln11_2_fu_317_p0 = V_In_q0.read();
}

void matrix_vector::thread_mul_ln11_2_fu_317_p2() {
    mul_ln11_2_fu_317_p2 = (!mul_ln11_2_fu_317_p0.read().is_01() || !M_2_load_reg_473.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln11_2_fu_317_p0.read()) * sc_bigint<32>(M_2_load_reg_473.read());
}

void matrix_vector::thread_mul_ln11_3_fu_322_p0() {
    mul_ln11_3_fu_322_p0 = V_In_q1.read();
}

void matrix_vector::thread_mul_ln11_3_fu_322_p2() {
    mul_ln11_3_fu_322_p2 = (!mul_ln11_3_fu_322_p0.read().is_01() || !M_3_load_reg_478.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln11_3_fu_322_p0.read()) * sc_bigint<32>(M_3_load_reg_478.read());
}

void matrix_vector::thread_mul_ln11_4_fu_333_p0() {
    mul_ln11_4_fu_333_p0 = V_In_q0.read();
}

void matrix_vector::thread_mul_ln11_4_fu_333_p2() {
    mul_ln11_4_fu_333_p2 = (!mul_ln11_4_fu_333_p0.read().is_01() || !M_4_load_reg_483.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln11_4_fu_333_p0.read()) * sc_bigint<32>(M_4_load_reg_483.read());
}

void matrix_vector::thread_mul_ln11_5_fu_338_p0() {
    mul_ln11_5_fu_338_p0 = V_In_q1.read();
}

void matrix_vector::thread_mul_ln11_5_fu_338_p2() {
    mul_ln11_5_fu_338_p2 = (!mul_ln11_5_fu_338_p0.read().is_01() || !M_5_load_reg_488.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln11_5_fu_338_p0.read()) * sc_bigint<32>(M_5_load_reg_488.read());
}

void matrix_vector::thread_mul_ln11_6_fu_343_p0() {
    mul_ln11_6_fu_343_p0 = V_In_q0.read();
}

void matrix_vector::thread_mul_ln11_6_fu_343_p2() {
    mul_ln11_6_fu_343_p2 = (!mul_ln11_6_fu_343_p0.read().is_01() || !M_6_load_reg_493.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln11_6_fu_343_p0.read()) * sc_bigint<32>(M_6_load_reg_493.read());
}

void matrix_vector::thread_mul_ln11_7_fu_348_p0() {
    mul_ln11_7_fu_348_p0 = V_In_q1.read();
}

void matrix_vector::thread_mul_ln11_7_fu_348_p2() {
    mul_ln11_7_fu_348_p2 = (!mul_ln11_7_fu_348_p0.read().is_01() || !M_7_load_reg_498.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln11_7_fu_348_p0.read()) * sc_bigint<32>(M_7_load_reg_498.read());
}

void matrix_vector::thread_mul_ln11_fu_299_p0() {
    mul_ln11_fu_299_p0 = V_In_q0.read();
}

void matrix_vector::thread_mul_ln11_fu_299_p1() {
    mul_ln11_fu_299_p1 = M_0_q0.read();
}

void matrix_vector::thread_mul_ln11_fu_299_p2() {
    mul_ln11_fu_299_p2 = (!mul_ln11_fu_299_p0.read().is_01() || !mul_ln11_fu_299_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln11_fu_299_p0.read()) * sc_bigint<32>(mul_ln11_fu_299_p1.read());
}

void matrix_vector::thread_zext_ln11_fu_287_p1() {
    zext_ln11_fu_287_p1 = esl_zext<64,4>(ap_phi_mux_i_0_phi_fu_268_p4.read());
}

void matrix_vector::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_fu_275_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_fu_275_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void matrix_vector::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_0_address0\" :  \"" << M_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_0_ce0\" :  \"" << M_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_0_q0\" :  \"" << M_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_1_address0\" :  \"" << M_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_1_ce0\" :  \"" << M_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_1_q0\" :  \"" << M_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_2_address0\" :  \"" << M_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_2_ce0\" :  \"" << M_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_2_q0\" :  \"" << M_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_3_address0\" :  \"" << M_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_3_ce0\" :  \"" << M_3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_3_q0\" :  \"" << M_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_4_address0\" :  \"" << M_4_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_4_ce0\" :  \"" << M_4_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_4_q0\" :  \"" << M_4_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_5_address0\" :  \"" << M_5_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_5_ce0\" :  \"" << M_5_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_5_q0\" :  \"" << M_5_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_6_address0\" :  \"" << M_6_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_6_ce0\" :  \"" << M_6_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_6_q0\" :  \"" << M_6_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_7_address0\" :  \"" << M_7_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_7_ce0\" :  \"" << M_7_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_7_q0\" :  \"" << M_7_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_In_address0\" :  \"" << V_In_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_In_ce0\" :  \"" << V_In_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"V_In_q0\" :  \"" << V_In_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_In_address1\" :  \"" << V_In_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_In_ce1\" :  \"" << V_In_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"V_In_q1\" :  \"" << V_In_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_Out_address0\" :  \"" << V_Out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_Out_ce0\" :  \"" << V_Out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_Out_we0\" :  \"" << V_Out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"V_Out_d0\" :  \"" << V_Out_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

