

================================================================
== Vivado HLS Report for 'cordic'
================================================================
* Date:           Wed Jun 14 06:40:34 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        cordic_float_prj
* Solution:       solution2
* Product family: zynquplus
* Target device:  xqzu5ev-ffrb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 5.259 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       65|       65| 0.650 us | 0.650 us |   65|   65|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       64|       64|         2|          -|          -|    32|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i12 %theta_V), !map !86"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i12* %s_V), !map !92"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i12* %c_V), !map !96"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @cordic_str) nounwind"   --->   Operation 7 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%theta_V_read = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %theta_V)" [cordic.cpp:8]   --->   Operation 8 'read' 'theta_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.75ns)   --->   "br label %0" [cordic.cpp:18]   --->   Operation 9 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 5.25>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%p_Val2_6 = phi i12 [ %theta_V_read, %ap_fixed_base.exit572 ], [ %sub_ln703, %_ZltILi12ELi2ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEbRK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EEi.exit ]" [cordic.cpp:8]   --->   Operation 10 'phi' 'p_Val2_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%t_V = phi i12 [ 1024, %ap_fixed_base.exit572 ], [ %factor_V, %_ZltILi12ELi2ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEbRK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EEi.exit ]"   --->   Operation 11 'phi' 't_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%p_Val2_4 = phi i12 [ 0, %ap_fixed_base.exit572 ], [ %current_sin_V, %_ZltILi12ELi2ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEbRK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EEi.exit ]"   --->   Operation 12 'phi' 'p_Val2_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%p_Val2_2 = phi i12 [ 621, %ap_fixed_base.exit572 ], [ %current_cos_V, %_ZltILi12ELi2ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEbRK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EEi.exit ]"   --->   Operation 13 'phi' 'p_Val2_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%j_0 = phi i6 [ 0, %ap_fixed_base.exit572 ], [ %j, %_ZltILi12ELi2ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEbRK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EEi.exit ]"   --->   Operation 14 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.87ns)   --->   "%icmp_ln18 = icmp eq i6 %j_0, -32" [cordic.cpp:18]   --->   Operation 15 'icmp' 'icmp_ln18' <Predicate = true> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)"   --->   Operation 16 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.88ns)   --->   "%j = add i6 %j_0, 1" [cordic.cpp:18]   --->   Operation 17 'add' 'j' <Predicate = true> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %icmp_ln18, label %1, label %_ZltILi12ELi2ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEbRK13ap_fixed_baseIXT_EXT0_EXT1_EXT2_EXT3_EXT4_EEi.exit" [cordic.cpp:18]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %p_Val2_6, i32 11)" [cordic.cpp:20]   --->   Operation 19 'bitselect' 'tmp' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%sext_ln1116 = sext i12 %p_Val2_2 to i13" [cordic.cpp:23]   --->   Operation 20 'sext' 'sext_ln1116' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.96ns)   --->   "%sub_ln1118 = sub i13 0, %sext_ln1116" [cordic.cpp:23]   --->   Operation 21 'sub' 'sub_ln1118' <Predicate = (!icmp_ln18)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.48ns)   --->   "%r_V = select i1 %tmp, i13 %sub_ln1118, i13 %sext_ln1116" [cordic.cpp:23]   --->   Operation 22 'select' 'r_V' <Predicate = (!icmp_ln18)> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%sext_ln1116_1 = sext i13 %r_V to i22" [cordic.cpp:23]   --->   Operation 23 'sext' 'sext_ln1116_1' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i12 %t_V to i22" [cordic.cpp:23]   --->   Operation 24 'sext' 'sext_ln1118' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (2.84ns) (root node of the DSP)   --->   "%r_V_4 = mul i22 %sext_ln1116_1, %sext_ln1118" [cordic.cpp:23]   --->   Operation 25 'mul' 'r_V_4' <Predicate = (!icmp_ln18)> <Delay = 2.84> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%cos_shift_V = call i12 @_ssdm_op_PartSelect.i12.i22.i32.i32(i22 %r_V_4, i32 10, i32 21)" [cordic.cpp:23]   --->   Operation 26 'partselect' 'cos_shift_V' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%sext_ln1116_2 = sext i12 %p_Val2_4 to i13" [cordic.cpp:24]   --->   Operation 27 'sext' 'sext_ln1116_2' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.96ns)   --->   "%sub_ln1118_1 = sub i13 0, %sext_ln1116_2" [cordic.cpp:24]   --->   Operation 28 'sub' 'sub_ln1118_1' <Predicate = (!icmp_ln18)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.48ns)   --->   "%r_V_2 = select i1 %tmp, i13 %sub_ln1118_1, i13 %sext_ln1116_2" [cordic.cpp:24]   --->   Operation 29 'select' 'r_V_2' <Predicate = (!icmp_ln18)> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%sext_ln1116_3 = sext i13 %r_V_2 to i22" [cordic.cpp:24]   --->   Operation 30 'sext' 'sext_ln1116_3' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (2.84ns) (root node of the DSP)   --->   "%r_V_5 = mul i22 %sext_ln1116_3, %sext_ln1118" [cordic.cpp:24]   --->   Operation 31 'mul' 'r_V_5' <Predicate = (!icmp_ln18)> <Delay = 2.84> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%sin_shift_V = call i12 @_ssdm_op_PartSelect.i12.i22.i32.i32(i22 %r_V_5, i32 10, i32 21)" [cordic.cpp:24]   --->   Operation 32 'partselect' 'sin_shift_V' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.96ns)   --->   "%current_cos_V = sub i12 %p_Val2_2, %sin_shift_V" [cordic.cpp:27]   --->   Operation 33 'sub' 'current_cos_V' <Predicate = (!icmp_ln18)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.96ns)   --->   "%current_sin_V = add i12 %cos_shift_V, %p_Val2_4" [cordic.cpp:28]   --->   Operation 34 'add' 'current_sin_V' <Predicate = (!icmp_ln18)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i6 %j_0 to i64" [cordic.cpp:31]   --->   Operation 35 'zext' 'zext_ln31' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%cordic_phase_V_addr = getelementptr [64 x i10]* @cordic_phase_V, i64 0, i64 %zext_ln31" [cordic.cpp:31]   --->   Operation 36 'getelementptr' 'cordic_phase_V_addr' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 37 [2/2] (1.35ns)   --->   "%cordic_phase_V_load = load i10* %cordic_phase_V_addr, align 2" [cordic.cpp:31]   --->   Operation 37 'load' 'cordic_phase_V_load' <Predicate = (!icmp_ln18)> <Delay = 1.35> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 64> <ROM>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%sext_ln1148 = sext i12 %t_V to i13" [cordic.cpp:33]   --->   Operation 38 'sext' 'sext_ln1148' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %t_V, i32 11)" [cordic.cpp:33]   --->   Operation 39 'bitselect' 'tmp_1' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.96ns)   --->   "%sub_ln1148 = sub i13 0, %sext_ln1148" [cordic.cpp:33]   --->   Operation 40 'sub' 'sub_ln1148' <Predicate = (!icmp_ln18)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln1148_1 = call i12 @_ssdm_op_PartSelect.i12.i13.i32.i32(i13 %sub_ln1148, i32 1, i32 12)" [cordic.cpp:33]   --->   Operation 41 'partselect' 'trunc_ln1148_1' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln1148_2 = call i11 @_ssdm_op_PartSelect.i11.i12.i32.i32(i12 %t_V, i32 1, i32 11)" [cordic.cpp:33]   --->   Operation 42 'partselect' 'trunc_ln1148_2' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%sext_ln1148_1 = sext i11 %trunc_ln1148_2 to i12" [cordic.cpp:33]   --->   Operation 43 'sext' 'sext_ln1148_1' <Predicate = (!icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.96ns)   --->   "%sub_ln1148_1 = sub i12 0, %trunc_ln1148_1" [cordic.cpp:33]   --->   Operation 44 'sub' 'sub_ln1148_1' <Predicate = (!icmp_ln18)> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.43ns)   --->   "%factor_V = select i1 %tmp_1, i12 %sub_ln1148_1, i12 %sext_ln1148_1" [cordic.cpp:33]   --->   Operation 45 'select' 'factor_V' <Predicate = (!icmp_ln18)> <Delay = 0.43> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i12P(i12* %s_V, i12 %p_Val2_4)" [cordic.cpp:37]   --->   Operation 46 'write' <Predicate = (icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i12P(i12* %c_V, i12 %p_Val2_2)" [cordic.cpp:37]   --->   Operation 47 'write' <Predicate = (icmp_ln18)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "ret void" [cordic.cpp:38]   --->   Operation 48 'ret' <Predicate = (icmp_ln18)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.24>
ST_3 : Operation 49 [1/2] (1.35ns)   --->   "%cordic_phase_V_load = load i10* %cordic_phase_V_addr, align 2" [cordic.cpp:31]   --->   Operation 49 'load' 'cordic_phase_V_load' <Predicate = true> <Delay = 1.35> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 64> <ROM>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln703 = zext i10 %cordic_phase_V_load to i11" [cordic.cpp:31]   --->   Operation 50 'zext' 'zext_ln703' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.93ns)   --->   "%sub_ln703_2 = sub i11 0, %zext_ln703" [cordic.cpp:31]   --->   Operation 51 'sub' 'sub_ln703_2' <Predicate = (tmp)> <Delay = 0.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node sub_ln703)   --->   "%select_ln703 = select i1 %tmp, i11 %sub_ln703_2, i11 %zext_ln703" [cordic.cpp:31]   --->   Operation 52 'select' 'select_ln703' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node sub_ln703)   --->   "%sext_ln703 = sext i11 %select_ln703 to i12" [cordic.cpp:31]   --->   Operation 53 'sext' 'sext_ln703' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.96ns) (out node of the LUT)   --->   "%sub_ln703 = sub i12 %p_Val2_6, %sext_ln703" [cordic.cpp:31]   --->   Operation 54 'sub' 'sub_ln703' <Predicate = true> <Delay = 0.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "br label %0" [cordic.cpp:18]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('__Val2__', cordic.cpp:8) with incoming values : ('ssdm_int<12 + 1024 * 0, true>.V', cordic.cpp:8) ('sub_ln703', cordic.cpp:31) [13]  (0.755 ns)

 <State 2>: 5.26ns
The critical path consists of the following:
	'phi' operation ('current_sin.V') with incoming values : ('current_sin.V', cordic.cpp:28) [15]  (0 ns)
	'sub' operation ('sub_ln1118_1', cordic.cpp:24) [32]  (0.962 ns)
	'select' operation ('r.V', cordic.cpp:24) [33]  (0.49 ns)
	'mul' operation of DSP[35] ('r.V', cordic.cpp:24) [35]  (2.85 ns)
	'sub' operation ('current_cos.V', cordic.cpp:27) [37]  (0.962 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'load' operation ('cordic_phase_V_load', cordic.cpp:31) on array 'cordic_phase_V' [41]  (1.35 ns)
	'sub' operation ('sub_ln703_2', cordic.cpp:31) [43]  (0.934 ns)
	'select' operation ('select_ln703', cordic.cpp:31) [44]  (0 ns)
	'sub' operation ('sub_ln703', cordic.cpp:31) [46]  (0.962 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
