// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _cordic_HH_
#define _cordic_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cordic_fsub_32ns_bkb.h"
#include "cordic_fadd_32ns_cud.h"
#include "cordic_fmul_32ns_dEe.h"
#include "cordic_fcmp_32ns_eOg.h"
#include "cordic_cordic_phase.h"

namespace ap_rtl {

struct cordic : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > theta;
    sc_out< sc_lv<32> > s;
    sc_out< sc_logic > s_ap_vld;
    sc_out< sc_lv<32> > c;
    sc_out< sc_logic > c_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    cordic(sc_module_name name);
    SC_HAS_PROCESS(cordic);

    ~cordic();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    cordic_cordic_phase* cordic_phase_U;
    cordic_fsub_32ns_bkb<1,4,32,32,32>* cordic_fsub_32ns_bkb_U1;
    cordic_fadd_32ns_cud<1,4,32,32,32>* cordic_fadd_32ns_cud_U2;
    cordic_fmul_32ns_dEe<1,3,32,32,32>* cordic_fmul_32ns_dEe_U3;
    cordic_fmul_32ns_dEe<1,3,32,32,32>* cordic_fmul_32ns_dEe_U4;
    cordic_fmul_32ns_dEe<1,3,32,32,32>* cordic_fmul_32ns_dEe_U5;
    cordic_fcmp_32ns_eOg<1,2,32,32,1>* cordic_fcmp_32ns_eOg_U6;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > cordic_phase_address0;
    sc_signal< sc_logic > cordic_phase_ce0;
    sc_signal< sc_lv<32> > cordic_phase_q0;
    sc_signal< sc_lv<32> > grp_fu_153_p2;
    sc_signal< sc_lv<32> > reg_177;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > grp_fu_158_p2;
    sc_signal< sc_lv<32> > reg_183;
    sc_signal< sc_lv<6> > j_fu_195_p2;
    sc_signal< sc_lv<6> > j_reg_264;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln18_fu_189_p2;
    sc_signal< sc_lv<32> > select_ln23_fu_248_p3;
    sc_signal< sc_lv<32> > select_ln23_reg_274;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > cordic_phase_load_reg_281;
    sc_signal< sc_lv<32> > grp_fu_163_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_286;
    sc_signal< sc_lv<32> > factor_reg_291;
    sc_signal< sc_lv<32> > grp_fu_142_p2;
    sc_signal< sc_lv<32> > theta_assign_reg_296;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > grp_fu_148_p2;
    sc_signal< sc_lv<32> > current_sin_0_reg_83;
    sc_signal< sc_lv<32> > current_cos_0_reg_96;
    sc_signal< sc_lv<32> > factor_0_reg_109;
    sc_signal< sc_lv<6> > j_0_reg_121;
    sc_signal< sc_lv<32> > p_0_reg_132;
    sc_signal< sc_lv<64> > zext_ln31_fu_201_p1;
    sc_signal< sc_lv<32> > grp_fu_142_p0;
    sc_signal< sc_lv<32> > grp_fu_142_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > grp_fu_153_p0;
    sc_signal< sc_lv<32> > grp_fu_153_p1;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > grp_fu_158_p0;
    sc_signal< sc_lv<32> > grp_fu_158_p1;
    sc_signal< sc_lv<32> > grp_fu_163_p0;
    sc_signal< sc_lv<32> > grp_fu_163_p1;
    sc_signal< sc_lv<32> > bitcast_ln20_fu_206_p1;
    sc_signal< sc_lv<8> > tmp_fu_210_p4;
    sc_signal< sc_lv<23> > trunc_ln20_fu_220_p1;
    sc_signal< sc_lv<1> > icmp_ln20_1_fu_230_p2;
    sc_signal< sc_lv<1> > icmp_ln20_fu_224_p2;
    sc_signal< sc_lv<1> > or_ln20_fu_236_p2;
    sc_signal< sc_lv<1> > grp_fu_171_p2;
    sc_signal< sc_lv<1> > and_ln20_fu_242_p2;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_state2;
    static const sc_lv<13> ap_ST_fsm_state3;
    static const sc_lv<13> ap_ST_fsm_state4;
    static const sc_lv<13> ap_ST_fsm_state5;
    static const sc_lv<13> ap_ST_fsm_state6;
    static const sc_lv<13> ap_ST_fsm_state7;
    static const sc_lv<13> ap_ST_fsm_state8;
    static const sc_lv<13> ap_ST_fsm_state9;
    static const sc_lv<13> ap_ST_fsm_state10;
    static const sc_lv<13> ap_ST_fsm_state11;
    static const sc_lv<13> ap_ST_fsm_state12;
    static const sc_lv<13> ap_ST_fsm_state13;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_3F1B74BC;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_3F000000;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<32> ap_const_lv32_BF800000;
    static const sc_lv<5> ap_const_lv5_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_and_ln20_fu_242_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln20_fu_206_p1();
    void thread_c();
    void thread_c_ap_vld();
    void thread_cordic_phase_address0();
    void thread_cordic_phase_ce0();
    void thread_grp_fu_142_p0();
    void thread_grp_fu_142_p1();
    void thread_grp_fu_153_p0();
    void thread_grp_fu_153_p1();
    void thread_grp_fu_158_p0();
    void thread_grp_fu_158_p1();
    void thread_grp_fu_163_p0();
    void thread_grp_fu_163_p1();
    void thread_icmp_ln18_fu_189_p2();
    void thread_icmp_ln20_1_fu_230_p2();
    void thread_icmp_ln20_fu_224_p2();
    void thread_j_fu_195_p2();
    void thread_or_ln20_fu_236_p2();
    void thread_s();
    void thread_s_ap_vld();
    void thread_select_ln23_fu_248_p3();
    void thread_tmp_fu_210_p4();
    void thread_trunc_ln20_fu_220_p1();
    void thread_zext_ln31_fu_201_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
