// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cordic.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cordic::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cordic::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> cordic::ap_ST_fsm_state1 = "1";
const sc_lv<3> cordic::ap_ST_fsm_state2 = "10";
const sc_lv<3> cordic::ap_ST_fsm_state3 = "100";
const sc_lv<32> cordic::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> cordic::ap_const_lv32_1 = "1";
const sc_lv<1> cordic::ap_const_lv1_0 = "0";
const sc_lv<32> cordic::ap_const_lv32_2 = "10";
const sc_lv<12> cordic::ap_const_lv12_0 = "000000000000";
const sc_lv<12> cordic::ap_const_lv12_26D = "1001101101";
const sc_lv<6> cordic::ap_const_lv6_0 = "000000";
const sc_lv<1> cordic::ap_const_lv1_1 = "1";
const sc_lv<6> cordic::ap_const_lv6_20 = "100000";
const sc_lv<32> cordic::ap_const_lv32_B = "1011";
const sc_lv<5> cordic::ap_const_lv5_1 = "1";
const sc_lv<5> cordic::ap_const_lv5_2 = "10";
const sc_lv<5> cordic::ap_const_lv5_3 = "11";
const sc_lv<6> cordic::ap_const_lv6_4 = "100";
const bool cordic::ap_const_boolean_1 = true;

cordic::cordic(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cordic_phase_V_U = new cordic_cordic_phabkb("cordic_phase_V_U");
    cordic_phase_V_U->clk(ap_clk);
    cordic_phase_V_U->reset(ap_rst);
    cordic_phase_V_U->address0(cordic_phase_V_address0);
    cordic_phase_V_U->ce0(cordic_phase_V_ce0);
    cordic_phase_V_U->q0(cordic_phase_V_q0);
    cordic_phase_V_U->address1(cordic_phase_V_address1);
    cordic_phase_V_U->ce1(cordic_phase_V_ce1);
    cordic_phase_V_U->q1(cordic_phase_V_q1);
    cordic_phase_V_U->address2(cordic_phase_V_address2);
    cordic_phase_V_U->ce2(cordic_phase_V_ce2);
    cordic_phase_V_U->q2(cordic_phase_V_q2);
    cordic_phase_V_U->address3(cordic_phase_V_address3);
    cordic_phase_V_U->ce3(cordic_phase_V_ce3);
    cordic_phase_V_U->q3(cordic_phase_V_q3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln17_fu_274_p2);
    sensitive << ( sh_assign_0_reg_151 );

    SC_METHOD(thread_add_ln703_10_fu_500_p2);
    sensitive << ( select_ln1496_6_fu_447_p3 );
    sensitive << ( ashr_ln1333_3_fu_474_p2 );

    SC_METHOD(thread_add_ln703_11_fu_516_p2);
    sensitive << ( select_ln1496_7_fu_455_p3 );
    sensitive << ( ashr_ln1333_7_fu_480_p2 );

    SC_METHOD(thread_add_ln703_1_fu_354_p2);
    sensitive << ( select_ln1496_2_fu_296_p3 );
    sensitive << ( zext_ln1265_1_fu_334_p1 );

    SC_METHOD(thread_add_ln703_2_fu_441_p2);
    sensitive << ( select_ln1496_5_fu_376_p3 );
    sensitive << ( zext_ln1265_2_fu_419_p1 );

    SC_METHOD(thread_add_ln703_3_fu_528_p2);
    sensitive << ( select_ln1496_8_fu_463_p3 );
    sensitive << ( zext_ln1265_3_fu_506_p1 );

    SC_METHOD(thread_add_ln703_4_fu_209_p2);
    sensitive << ( p_Val2_0_reg_139 );
    sensitive << ( ashr_ln1333_1_fu_178_p2 );

    SC_METHOD(thread_add_ln703_5_fu_290_p2);
    sensitive << ( theta_V_buf_0_0_reg_117 );
    sensitive << ( zext_ln1265_fu_280_p1 );

    SC_METHOD(thread_add_ln703_6_fu_329_p2);
    sensitive << ( select_ln1496_reg_576 );
    sensitive << ( ashr_ln1333_4_fu_306_p2 );

    SC_METHOD(thread_add_ln703_7_fu_344_p2);
    sensitive << ( select_ln1496_1_reg_583 );
    sensitive << ( ashr_ln1333_5_fu_311_p2 );

    SC_METHOD(thread_add_ln703_8_fu_413_p2);
    sensitive << ( select_ln1496_3_fu_360_p3 );
    sensitive << ( ashr_ln1333_2_fu_387_p2 );

    SC_METHOD(thread_add_ln703_9_fu_429_p2);
    sensitive << ( select_ln1496_4_fu_368_p3 );
    sensitive << ( ashr_ln1333_6_fu_393_p2 );

    SC_METHOD(thread_add_ln703_fu_198_p2);
    sensitive << ( p_Val2_2_0_reg_127 );
    sensitive << ( ashr_ln1333_fu_172_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_166_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_166_p2 );

    SC_METHOD(thread_ashr_ln1333_1_fu_178_p2);
    sensitive << ( p_Val2_2_0_reg_127 );
    sensitive << ( sh_assign_0_cast4_fu_162_p1 );

    SC_METHOD(thread_ashr_ln1333_2_fu_387_p2);
    sensitive << ( select_ln1496_4_fu_368_p3 );
    sensitive << ( zext_ln17_1_fu_384_p1 );

    SC_METHOD(thread_ashr_ln1333_3_fu_474_p2);
    sensitive << ( select_ln1496_7_fu_455_p3 );
    sensitive << ( zext_ln17_2_fu_471_p1 );

    SC_METHOD(thread_ashr_ln1333_4_fu_306_p2);
    sensitive << ( select_ln1496_1_reg_583 );
    sensitive << ( zext_ln17_fu_303_p1 );

    SC_METHOD(thread_ashr_ln1333_5_fu_311_p2);
    sensitive << ( select_ln1496_reg_576 );
    sensitive << ( zext_ln17_fu_303_p1 );

    SC_METHOD(thread_ashr_ln1333_6_fu_393_p2);
    sensitive << ( zext_ln17_1_fu_384_p1 );
    sensitive << ( select_ln1496_3_fu_360_p3 );

    SC_METHOD(thread_ashr_ln1333_7_fu_480_p2);
    sensitive << ( zext_ln17_2_fu_471_p1 );
    sensitive << ( select_ln1496_6_fu_447_p3 );

    SC_METHOD(thread_ashr_ln1333_fu_172_p2);
    sensitive << ( p_Val2_0_reg_139 );
    sensitive << ( sh_assign_0_cast4_fu_162_p1 );

    SC_METHOD(thread_c_V);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_166_p2 );
    sensitive << ( p_Val2_0_reg_139 );

    SC_METHOD(thread_c_V_ap_vld);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_166_p2 );

    SC_METHOD(thread_cordic_phase_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln30_fu_204_p1 );

    SC_METHOD(thread_cordic_phase_V_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln30_1_fu_247_p1 );

    SC_METHOD(thread_cordic_phase_V_address2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln30_2_fu_258_p1 );

    SC_METHOD(thread_cordic_phase_V_address3);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln30_3_fu_269_p1 );

    SC_METHOD(thread_cordic_phase_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_cordic_phase_V_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_cordic_phase_V_ce2);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_cordic_phase_V_ce3);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_empty_2_fu_237_p1);
    sensitive << ( sh_assign_0_reg_151 );

    SC_METHOD(thread_icmp_ln17_fu_166_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sh_assign_0_reg_151 );

    SC_METHOD(thread_or_ln17_1_fu_252_p2);
    sensitive << ( empty_2_fu_237_p1 );

    SC_METHOD(thread_or_ln17_2_fu_263_p2);
    sensitive << ( empty_2_fu_237_p1 );

    SC_METHOD(thread_or_ln17_fu_241_p2);
    sensitive << ( empty_2_fu_237_p1 );

    SC_METHOD(thread_s_V);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_166_p2 );
    sensitive << ( p_Val2_2_0_reg_127 );

    SC_METHOD(thread_s_V_ap_vld);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_166_p2 );

    SC_METHOD(thread_select_ln1496_10_fu_542_p3);
    sensitive << ( tmp_3_fu_486_p3 );
    sensitive << ( add_ln703_11_fu_516_p2 );
    sensitive << ( sub_ln703_10_fu_494_p2 );

    SC_METHOD(thread_select_ln1496_11_fu_550_p3);
    sensitive << ( tmp_3_fu_486_p3 );
    sensitive << ( add_ln703_3_fu_528_p2 );
    sensitive << ( sub_ln703_3_fu_510_p2 );

    SC_METHOD(thread_select_ln1496_1_fu_229_p3);
    sensitive << ( tmp_fu_184_p3 );
    sensitive << ( add_ln703_4_fu_209_p2 );
    sensitive << ( sub_ln703_fu_192_p2 );

    SC_METHOD(thread_select_ln1496_2_fu_296_p3);
    sensitive << ( tmp_reg_566 );
    sensitive << ( add_ln703_5_fu_290_p2 );
    sensitive << ( sub_ln703_4_fu_284_p2 );

    SC_METHOD(thread_select_ln1496_3_fu_360_p3);
    sensitive << ( tmp_1_fu_316_p3 );
    sensitive << ( sub_ln703_7_fu_349_p2 );
    sensitive << ( add_ln703_6_fu_329_p2 );

    SC_METHOD(thread_select_ln1496_4_fu_368_p3);
    sensitive << ( tmp_1_fu_316_p3 );
    sensitive << ( add_ln703_7_fu_344_p2 );
    sensitive << ( sub_ln703_6_fu_324_p2 );

    SC_METHOD(thread_select_ln1496_5_fu_376_p3);
    sensitive << ( tmp_1_fu_316_p3 );
    sensitive << ( add_ln703_1_fu_354_p2 );
    sensitive << ( sub_ln703_1_fu_338_p2 );

    SC_METHOD(thread_select_ln1496_6_fu_447_p3);
    sensitive << ( tmp_2_fu_399_p3 );
    sensitive << ( sub_ln703_9_fu_435_p2 );
    sensitive << ( add_ln703_8_fu_413_p2 );

    SC_METHOD(thread_select_ln1496_7_fu_455_p3);
    sensitive << ( tmp_2_fu_399_p3 );
    sensitive << ( add_ln703_9_fu_429_p2 );
    sensitive << ( sub_ln703_8_fu_407_p2 );

    SC_METHOD(thread_select_ln1496_8_fu_463_p3);
    sensitive << ( tmp_2_fu_399_p3 );
    sensitive << ( add_ln703_2_fu_441_p2 );
    sensitive << ( sub_ln703_2_fu_423_p2 );

    SC_METHOD(thread_select_ln1496_9_fu_534_p3);
    sensitive << ( tmp_3_fu_486_p3 );
    sensitive << ( sub_ln703_11_fu_522_p2 );
    sensitive << ( add_ln703_10_fu_500_p2 );

    SC_METHOD(thread_select_ln1496_fu_221_p3);
    sensitive << ( tmp_fu_184_p3 );
    sensitive << ( sub_ln703_5_fu_215_p2 );
    sensitive << ( add_ln703_fu_198_p2 );

    SC_METHOD(thread_sh_assign_0_cast4_fu_162_p1);
    sensitive << ( sh_assign_0_reg_151 );

    SC_METHOD(thread_sub_ln703_10_fu_494_p2);
    sensitive << ( select_ln1496_7_fu_455_p3 );
    sensitive << ( ashr_ln1333_7_fu_480_p2 );

    SC_METHOD(thread_sub_ln703_11_fu_522_p2);
    sensitive << ( select_ln1496_6_fu_447_p3 );
    sensitive << ( ashr_ln1333_3_fu_474_p2 );

    SC_METHOD(thread_sub_ln703_1_fu_338_p2);
    sensitive << ( select_ln1496_2_fu_296_p3 );
    sensitive << ( zext_ln1265_1_fu_334_p1 );

    SC_METHOD(thread_sub_ln703_2_fu_423_p2);
    sensitive << ( select_ln1496_5_fu_376_p3 );
    sensitive << ( zext_ln1265_2_fu_419_p1 );

    SC_METHOD(thread_sub_ln703_3_fu_510_p2);
    sensitive << ( select_ln1496_8_fu_463_p3 );
    sensitive << ( zext_ln1265_3_fu_506_p1 );

    SC_METHOD(thread_sub_ln703_4_fu_284_p2);
    sensitive << ( theta_V_buf_0_0_reg_117 );
    sensitive << ( zext_ln1265_fu_280_p1 );

    SC_METHOD(thread_sub_ln703_5_fu_215_p2);
    sensitive << ( p_Val2_2_0_reg_127 );
    sensitive << ( ashr_ln1333_fu_172_p2 );

    SC_METHOD(thread_sub_ln703_6_fu_324_p2);
    sensitive << ( select_ln1496_1_reg_583 );
    sensitive << ( ashr_ln1333_5_fu_311_p2 );

    SC_METHOD(thread_sub_ln703_7_fu_349_p2);
    sensitive << ( select_ln1496_reg_576 );
    sensitive << ( ashr_ln1333_4_fu_306_p2 );

    SC_METHOD(thread_sub_ln703_8_fu_407_p2);
    sensitive << ( select_ln1496_4_fu_368_p3 );
    sensitive << ( ashr_ln1333_6_fu_393_p2 );

    SC_METHOD(thread_sub_ln703_9_fu_435_p2);
    sensitive << ( select_ln1496_3_fu_360_p3 );
    sensitive << ( ashr_ln1333_2_fu_387_p2 );

    SC_METHOD(thread_sub_ln703_fu_192_p2);
    sensitive << ( p_Val2_0_reg_139 );
    sensitive << ( ashr_ln1333_1_fu_178_p2 );

    SC_METHOD(thread_tmp_1_fu_316_p3);
    sensitive << ( select_ln1496_2_fu_296_p3 );

    SC_METHOD(thread_tmp_2_fu_399_p3);
    sensitive << ( select_ln1496_5_fu_376_p3 );

    SC_METHOD(thread_tmp_3_fu_486_p3);
    sensitive << ( select_ln1496_8_fu_463_p3 );

    SC_METHOD(thread_tmp_fu_184_p3);
    sensitive << ( theta_V_buf_0_0_reg_117 );

    SC_METHOD(thread_zext_ln1265_1_fu_334_p1);
    sensitive << ( cordic_phase_V_q1 );

    SC_METHOD(thread_zext_ln1265_2_fu_419_p1);
    sensitive << ( cordic_phase_V_q2 );

    SC_METHOD(thread_zext_ln1265_3_fu_506_p1);
    sensitive << ( cordic_phase_V_q3 );

    SC_METHOD(thread_zext_ln1265_fu_280_p1);
    sensitive << ( cordic_phase_V_q0 );

    SC_METHOD(thread_zext_ln17_1_fu_384_p1);
    sensitive << ( or_ln17_1_reg_600 );

    SC_METHOD(thread_zext_ln17_2_fu_471_p1);
    sensitive << ( or_ln17_2_reg_610 );

    SC_METHOD(thread_zext_ln17_fu_303_p1);
    sensitive << ( or_ln17_reg_590 );

    SC_METHOD(thread_zext_ln30_1_fu_247_p1);
    sensitive << ( or_ln17_fu_241_p2 );

    SC_METHOD(thread_zext_ln30_2_fu_258_p1);
    sensitive << ( or_ln17_1_fu_252_p2 );

    SC_METHOD(thread_zext_ln30_3_fu_269_p1);
    sensitive << ( or_ln17_2_fu_263_p2 );

    SC_METHOD(thread_zext_ln30_fu_204_p1);
    sensitive << ( sh_assign_0_reg_151 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_166_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cordic_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, theta_V, "(port)theta_V");
    sc_trace(mVcdFile, s_V, "(port)s_V");
    sc_trace(mVcdFile, s_V_ap_vld, "(port)s_V_ap_vld");
    sc_trace(mVcdFile, c_V, "(port)c_V");
    sc_trace(mVcdFile, c_V_ap_vld, "(port)c_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cordic_phase_V_address0, "cordic_phase_V_address0");
    sc_trace(mVcdFile, cordic_phase_V_ce0, "cordic_phase_V_ce0");
    sc_trace(mVcdFile, cordic_phase_V_q0, "cordic_phase_V_q0");
    sc_trace(mVcdFile, cordic_phase_V_address1, "cordic_phase_V_address1");
    sc_trace(mVcdFile, cordic_phase_V_ce1, "cordic_phase_V_ce1");
    sc_trace(mVcdFile, cordic_phase_V_q1, "cordic_phase_V_q1");
    sc_trace(mVcdFile, cordic_phase_V_address2, "cordic_phase_V_address2");
    sc_trace(mVcdFile, cordic_phase_V_ce2, "cordic_phase_V_ce2");
    sc_trace(mVcdFile, cordic_phase_V_q2, "cordic_phase_V_q2");
    sc_trace(mVcdFile, cordic_phase_V_address3, "cordic_phase_V_address3");
    sc_trace(mVcdFile, cordic_phase_V_ce3, "cordic_phase_V_ce3");
    sc_trace(mVcdFile, cordic_phase_V_q3, "cordic_phase_V_q3");
    sc_trace(mVcdFile, tmp_fu_184_p3, "tmp_fu_184_p3");
    sc_trace(mVcdFile, tmp_reg_566, "tmp_reg_566");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln17_fu_166_p2, "icmp_ln17_fu_166_p2");
    sc_trace(mVcdFile, select_ln1496_fu_221_p3, "select_ln1496_fu_221_p3");
    sc_trace(mVcdFile, select_ln1496_reg_576, "select_ln1496_reg_576");
    sc_trace(mVcdFile, select_ln1496_1_fu_229_p3, "select_ln1496_1_fu_229_p3");
    sc_trace(mVcdFile, select_ln1496_1_reg_583, "select_ln1496_1_reg_583");
    sc_trace(mVcdFile, or_ln17_fu_241_p2, "or_ln17_fu_241_p2");
    sc_trace(mVcdFile, or_ln17_reg_590, "or_ln17_reg_590");
    sc_trace(mVcdFile, or_ln17_1_fu_252_p2, "or_ln17_1_fu_252_p2");
    sc_trace(mVcdFile, or_ln17_1_reg_600, "or_ln17_1_reg_600");
    sc_trace(mVcdFile, or_ln17_2_fu_263_p2, "or_ln17_2_fu_263_p2");
    sc_trace(mVcdFile, or_ln17_2_reg_610, "or_ln17_2_reg_610");
    sc_trace(mVcdFile, add_ln17_fu_274_p2, "add_ln17_fu_274_p2");
    sc_trace(mVcdFile, add_ln17_reg_620, "add_ln17_reg_620");
    sc_trace(mVcdFile, select_ln1496_9_fu_534_p3, "select_ln1496_9_fu_534_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, select_ln1496_10_fu_542_p3, "select_ln1496_10_fu_542_p3");
    sc_trace(mVcdFile, select_ln1496_11_fu_550_p3, "select_ln1496_11_fu_550_p3");
    sc_trace(mVcdFile, theta_V_buf_0_0_reg_117, "theta_V_buf_0_0_reg_117");
    sc_trace(mVcdFile, p_Val2_2_0_reg_127, "p_Val2_2_0_reg_127");
    sc_trace(mVcdFile, p_Val2_0_reg_139, "p_Val2_0_reg_139");
    sc_trace(mVcdFile, sh_assign_0_reg_151, "sh_assign_0_reg_151");
    sc_trace(mVcdFile, zext_ln30_fu_204_p1, "zext_ln30_fu_204_p1");
    sc_trace(mVcdFile, zext_ln30_1_fu_247_p1, "zext_ln30_1_fu_247_p1");
    sc_trace(mVcdFile, zext_ln30_2_fu_258_p1, "zext_ln30_2_fu_258_p1");
    sc_trace(mVcdFile, zext_ln30_3_fu_269_p1, "zext_ln30_3_fu_269_p1");
    sc_trace(mVcdFile, sh_assign_0_cast4_fu_162_p1, "sh_assign_0_cast4_fu_162_p1");
    sc_trace(mVcdFile, ashr_ln1333_1_fu_178_p2, "ashr_ln1333_1_fu_178_p2");
    sc_trace(mVcdFile, ashr_ln1333_fu_172_p2, "ashr_ln1333_fu_172_p2");
    sc_trace(mVcdFile, sub_ln703_5_fu_215_p2, "sub_ln703_5_fu_215_p2");
    sc_trace(mVcdFile, add_ln703_fu_198_p2, "add_ln703_fu_198_p2");
    sc_trace(mVcdFile, add_ln703_4_fu_209_p2, "add_ln703_4_fu_209_p2");
    sc_trace(mVcdFile, sub_ln703_fu_192_p2, "sub_ln703_fu_192_p2");
    sc_trace(mVcdFile, empty_2_fu_237_p1, "empty_2_fu_237_p1");
    sc_trace(mVcdFile, zext_ln1265_fu_280_p1, "zext_ln1265_fu_280_p1");
    sc_trace(mVcdFile, add_ln703_5_fu_290_p2, "add_ln703_5_fu_290_p2");
    sc_trace(mVcdFile, sub_ln703_4_fu_284_p2, "sub_ln703_4_fu_284_p2");
    sc_trace(mVcdFile, zext_ln17_fu_303_p1, "zext_ln17_fu_303_p1");
    sc_trace(mVcdFile, select_ln1496_2_fu_296_p3, "select_ln1496_2_fu_296_p3");
    sc_trace(mVcdFile, ashr_ln1333_5_fu_311_p2, "ashr_ln1333_5_fu_311_p2");
    sc_trace(mVcdFile, ashr_ln1333_4_fu_306_p2, "ashr_ln1333_4_fu_306_p2");
    sc_trace(mVcdFile, zext_ln1265_1_fu_334_p1, "zext_ln1265_1_fu_334_p1");
    sc_trace(mVcdFile, tmp_1_fu_316_p3, "tmp_1_fu_316_p3");
    sc_trace(mVcdFile, sub_ln703_7_fu_349_p2, "sub_ln703_7_fu_349_p2");
    sc_trace(mVcdFile, add_ln703_6_fu_329_p2, "add_ln703_6_fu_329_p2");
    sc_trace(mVcdFile, add_ln703_7_fu_344_p2, "add_ln703_7_fu_344_p2");
    sc_trace(mVcdFile, sub_ln703_6_fu_324_p2, "sub_ln703_6_fu_324_p2");
    sc_trace(mVcdFile, add_ln703_1_fu_354_p2, "add_ln703_1_fu_354_p2");
    sc_trace(mVcdFile, sub_ln703_1_fu_338_p2, "sub_ln703_1_fu_338_p2");
    sc_trace(mVcdFile, select_ln1496_4_fu_368_p3, "select_ln1496_4_fu_368_p3");
    sc_trace(mVcdFile, zext_ln17_1_fu_384_p1, "zext_ln17_1_fu_384_p1");
    sc_trace(mVcdFile, select_ln1496_3_fu_360_p3, "select_ln1496_3_fu_360_p3");
    sc_trace(mVcdFile, select_ln1496_5_fu_376_p3, "select_ln1496_5_fu_376_p3");
    sc_trace(mVcdFile, ashr_ln1333_6_fu_393_p2, "ashr_ln1333_6_fu_393_p2");
    sc_trace(mVcdFile, ashr_ln1333_2_fu_387_p2, "ashr_ln1333_2_fu_387_p2");
    sc_trace(mVcdFile, zext_ln1265_2_fu_419_p1, "zext_ln1265_2_fu_419_p1");
    sc_trace(mVcdFile, tmp_2_fu_399_p3, "tmp_2_fu_399_p3");
    sc_trace(mVcdFile, sub_ln703_9_fu_435_p2, "sub_ln703_9_fu_435_p2");
    sc_trace(mVcdFile, add_ln703_8_fu_413_p2, "add_ln703_8_fu_413_p2");
    sc_trace(mVcdFile, add_ln703_9_fu_429_p2, "add_ln703_9_fu_429_p2");
    sc_trace(mVcdFile, sub_ln703_8_fu_407_p2, "sub_ln703_8_fu_407_p2");
    sc_trace(mVcdFile, add_ln703_2_fu_441_p2, "add_ln703_2_fu_441_p2");
    sc_trace(mVcdFile, sub_ln703_2_fu_423_p2, "sub_ln703_2_fu_423_p2");
    sc_trace(mVcdFile, select_ln1496_7_fu_455_p3, "select_ln1496_7_fu_455_p3");
    sc_trace(mVcdFile, zext_ln17_2_fu_471_p1, "zext_ln17_2_fu_471_p1");
    sc_trace(mVcdFile, select_ln1496_6_fu_447_p3, "select_ln1496_6_fu_447_p3");
    sc_trace(mVcdFile, select_ln1496_8_fu_463_p3, "select_ln1496_8_fu_463_p3");
    sc_trace(mVcdFile, ashr_ln1333_7_fu_480_p2, "ashr_ln1333_7_fu_480_p2");
    sc_trace(mVcdFile, ashr_ln1333_3_fu_474_p2, "ashr_ln1333_3_fu_474_p2");
    sc_trace(mVcdFile, zext_ln1265_3_fu_506_p1, "zext_ln1265_3_fu_506_p1");
    sc_trace(mVcdFile, tmp_3_fu_486_p3, "tmp_3_fu_486_p3");
    sc_trace(mVcdFile, sub_ln703_11_fu_522_p2, "sub_ln703_11_fu_522_p2");
    sc_trace(mVcdFile, add_ln703_10_fu_500_p2, "add_ln703_10_fu_500_p2");
    sc_trace(mVcdFile, add_ln703_11_fu_516_p2, "add_ln703_11_fu_516_p2");
    sc_trace(mVcdFile, sub_ln703_10_fu_494_p2, "sub_ln703_10_fu_494_p2");
    sc_trace(mVcdFile, add_ln703_3_fu_528_p2, "add_ln703_3_fu_528_p2");
    sc_trace(mVcdFile, sub_ln703_3_fu_510_p2, "sub_ln703_3_fu_510_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("cordic.hdltvin.dat");
    mHdltvoutHandle.open("cordic.hdltvout.dat");
}

cordic::~cordic() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete cordic_phase_V_U;
}

void cordic::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Val2_0_reg_139 = select_ln1496_10_fu_542_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_Val2_0_reg_139 = ap_const_lv12_26D;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Val2_2_0_reg_127 = select_ln1496_9_fu_534_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_Val2_2_0_reg_127 = ap_const_lv12_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sh_assign_0_reg_151 = add_ln17_reg_620.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sh_assign_0_reg_151 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        theta_V_buf_0_0_reg_117 = select_ln1496_11_fu_550_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        theta_V_buf_0_0_reg_117 = theta_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_166_p2.read(), ap_const_lv1_0))) {
        add_ln17_reg_620 = add_ln17_fu_274_p2.read();
        or_ln17_1_reg_600 = or_ln17_1_fu_252_p2.read();
        or_ln17_2_reg_610 = or_ln17_2_fu_263_p2.read();
        or_ln17_reg_590 = or_ln17_fu_241_p2.read();
        select_ln1496_1_reg_583 = select_ln1496_1_fu_229_p3.read();
        select_ln1496_reg_576 = select_ln1496_fu_221_p3.read();
        tmp_reg_566 = theta_V_buf_0_0_reg_117.read().range(11, 11);
    }
}

void cordic::thread_add_ln17_fu_274_p2() {
    add_ln17_fu_274_p2 = (!ap_const_lv6_4.is_01() || !sh_assign_0_reg_151.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_4) + sc_biguint<6>(sh_assign_0_reg_151.read()));
}

void cordic::thread_add_ln703_10_fu_500_p2() {
    add_ln703_10_fu_500_p2 = (!select_ln1496_6_fu_447_p3.read().is_01() || !ashr_ln1333_3_fu_474_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_6_fu_447_p3.read()) + sc_biguint<12>(ashr_ln1333_3_fu_474_p2.read()));
}

void cordic::thread_add_ln703_11_fu_516_p2() {
    add_ln703_11_fu_516_p2 = (!select_ln1496_7_fu_455_p3.read().is_01() || !ashr_ln1333_7_fu_480_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_7_fu_455_p3.read()) + sc_biguint<12>(ashr_ln1333_7_fu_480_p2.read()));
}

void cordic::thread_add_ln703_1_fu_354_p2() {
    add_ln703_1_fu_354_p2 = (!select_ln1496_2_fu_296_p3.read().is_01() || !zext_ln1265_1_fu_334_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_2_fu_296_p3.read()) + sc_biguint<12>(zext_ln1265_1_fu_334_p1.read()));
}

void cordic::thread_add_ln703_2_fu_441_p2() {
    add_ln703_2_fu_441_p2 = (!select_ln1496_5_fu_376_p3.read().is_01() || !zext_ln1265_2_fu_419_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_5_fu_376_p3.read()) + sc_biguint<12>(zext_ln1265_2_fu_419_p1.read()));
}

void cordic::thread_add_ln703_3_fu_528_p2() {
    add_ln703_3_fu_528_p2 = (!select_ln1496_8_fu_463_p3.read().is_01() || !zext_ln1265_3_fu_506_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_8_fu_463_p3.read()) + sc_biguint<12>(zext_ln1265_3_fu_506_p1.read()));
}

void cordic::thread_add_ln703_4_fu_209_p2() {
    add_ln703_4_fu_209_p2 = (!p_Val2_0_reg_139.read().is_01() || !ashr_ln1333_1_fu_178_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_Val2_0_reg_139.read()) + sc_biguint<12>(ashr_ln1333_1_fu_178_p2.read()));
}

void cordic::thread_add_ln703_5_fu_290_p2() {
    add_ln703_5_fu_290_p2 = (!theta_V_buf_0_0_reg_117.read().is_01() || !zext_ln1265_fu_280_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(theta_V_buf_0_0_reg_117.read()) + sc_biguint<12>(zext_ln1265_fu_280_p1.read()));
}

void cordic::thread_add_ln703_6_fu_329_p2() {
    add_ln703_6_fu_329_p2 = (!select_ln1496_reg_576.read().is_01() || !ashr_ln1333_4_fu_306_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_reg_576.read()) + sc_biguint<12>(ashr_ln1333_4_fu_306_p2.read()));
}

void cordic::thread_add_ln703_7_fu_344_p2() {
    add_ln703_7_fu_344_p2 = (!select_ln1496_1_reg_583.read().is_01() || !ashr_ln1333_5_fu_311_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_1_reg_583.read()) + sc_biguint<12>(ashr_ln1333_5_fu_311_p2.read()));
}

void cordic::thread_add_ln703_8_fu_413_p2() {
    add_ln703_8_fu_413_p2 = (!select_ln1496_3_fu_360_p3.read().is_01() || !ashr_ln1333_2_fu_387_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_3_fu_360_p3.read()) + sc_biguint<12>(ashr_ln1333_2_fu_387_p2.read()));
}

void cordic::thread_add_ln703_9_fu_429_p2() {
    add_ln703_9_fu_429_p2 = (!select_ln1496_4_fu_368_p3.read().is_01() || !ashr_ln1333_6_fu_393_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_4_fu_368_p3.read()) + sc_biguint<12>(ashr_ln1333_6_fu_393_p2.read()));
}

void cordic::thread_add_ln703_fu_198_p2() {
    add_ln703_fu_198_p2 = (!p_Val2_2_0_reg_127.read().is_01() || !ashr_ln1333_fu_172_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_Val2_2_0_reg_127.read()) + sc_biguint<12>(ashr_ln1333_fu_172_p2.read()));
}

void cordic::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cordic::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void cordic::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void cordic::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_166_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cordic::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cordic::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_166_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cordic::thread_ashr_ln1333_1_fu_178_p2() {
    ashr_ln1333_1_fu_178_p2 = (!p_Val2_2_0_reg_127.read().is_01() || !sh_assign_0_cast4_fu_162_p1.read().is_01())? sc_lv<12>(): sc_bigint<12>(p_Val2_2_0_reg_127.read()) >> (unsigned short)sh_assign_0_cast4_fu_162_p1.read().to_uint();
}

void cordic::thread_ashr_ln1333_2_fu_387_p2() {
    ashr_ln1333_2_fu_387_p2 = (!select_ln1496_4_fu_368_p3.read().is_01() || !zext_ln17_1_fu_384_p1.read().is_01())? sc_lv<12>(): sc_bigint<12>(select_ln1496_4_fu_368_p3.read()) >> (unsigned short)zext_ln17_1_fu_384_p1.read().to_uint();
}

void cordic::thread_ashr_ln1333_3_fu_474_p2() {
    ashr_ln1333_3_fu_474_p2 = (!select_ln1496_7_fu_455_p3.read().is_01() || !zext_ln17_2_fu_471_p1.read().is_01())? sc_lv<12>(): sc_bigint<12>(select_ln1496_7_fu_455_p3.read()) >> (unsigned short)zext_ln17_2_fu_471_p1.read().to_uint();
}

void cordic::thread_ashr_ln1333_4_fu_306_p2() {
    ashr_ln1333_4_fu_306_p2 = (!select_ln1496_1_reg_583.read().is_01() || !zext_ln17_fu_303_p1.read().is_01())? sc_lv<12>(): sc_bigint<12>(select_ln1496_1_reg_583.read()) >> (unsigned short)zext_ln17_fu_303_p1.read().to_uint();
}

void cordic::thread_ashr_ln1333_5_fu_311_p2() {
    ashr_ln1333_5_fu_311_p2 = (!select_ln1496_reg_576.read().is_01() || !zext_ln17_fu_303_p1.read().is_01())? sc_lv<12>(): sc_bigint<12>(select_ln1496_reg_576.read()) >> (unsigned short)zext_ln17_fu_303_p1.read().to_uint();
}

void cordic::thread_ashr_ln1333_6_fu_393_p2() {
    ashr_ln1333_6_fu_393_p2 = (!select_ln1496_3_fu_360_p3.read().is_01() || !zext_ln17_1_fu_384_p1.read().is_01())? sc_lv<12>(): sc_bigint<12>(select_ln1496_3_fu_360_p3.read()) >> (unsigned short)zext_ln17_1_fu_384_p1.read().to_uint();
}

void cordic::thread_ashr_ln1333_7_fu_480_p2() {
    ashr_ln1333_7_fu_480_p2 = (!select_ln1496_6_fu_447_p3.read().is_01() || !zext_ln17_2_fu_471_p1.read().is_01())? sc_lv<12>(): sc_bigint<12>(select_ln1496_6_fu_447_p3.read()) >> (unsigned short)zext_ln17_2_fu_471_p1.read().to_uint();
}

void cordic::thread_ashr_ln1333_fu_172_p2() {
    ashr_ln1333_fu_172_p2 = (!p_Val2_0_reg_139.read().is_01() || !sh_assign_0_cast4_fu_162_p1.read().is_01())? sc_lv<12>(): sc_bigint<12>(p_Val2_0_reg_139.read()) >> (unsigned short)sh_assign_0_cast4_fu_162_p1.read().to_uint();
}

void cordic::thread_c_V() {
    c_V = p_Val2_0_reg_139.read();
}

void cordic::thread_c_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_166_p2.read(), ap_const_lv1_1))) {
        c_V_ap_vld = ap_const_logic_1;
    } else {
        c_V_ap_vld = ap_const_logic_0;
    }
}

void cordic::thread_cordic_phase_V_address0() {
    cordic_phase_V_address0 =  (sc_lv<6>) (zext_ln30_fu_204_p1.read());
}

void cordic::thread_cordic_phase_V_address1() {
    cordic_phase_V_address1 =  (sc_lv<6>) (zext_ln30_1_fu_247_p1.read());
}

void cordic::thread_cordic_phase_V_address2() {
    cordic_phase_V_address2 =  (sc_lv<6>) (zext_ln30_2_fu_258_p1.read());
}

void cordic::thread_cordic_phase_V_address3() {
    cordic_phase_V_address3 =  (sc_lv<6>) (zext_ln30_3_fu_269_p1.read());
}

void cordic::thread_cordic_phase_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cordic_phase_V_ce0 = ap_const_logic_1;
    } else {
        cordic_phase_V_ce0 = ap_const_logic_0;
    }
}

void cordic::thread_cordic_phase_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cordic_phase_V_ce1 = ap_const_logic_1;
    } else {
        cordic_phase_V_ce1 = ap_const_logic_0;
    }
}

void cordic::thread_cordic_phase_V_ce2() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cordic_phase_V_ce2 = ap_const_logic_1;
    } else {
        cordic_phase_V_ce2 = ap_const_logic_0;
    }
}

void cordic::thread_cordic_phase_V_ce3() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cordic_phase_V_ce3 = ap_const_logic_1;
    } else {
        cordic_phase_V_ce3 = ap_const_logic_0;
    }
}

void cordic::thread_empty_2_fu_237_p1() {
    empty_2_fu_237_p1 = sh_assign_0_reg_151.read().range(5-1, 0);
}

void cordic::thread_icmp_ln17_fu_166_p2() {
    icmp_ln17_fu_166_p2 = (!sh_assign_0_reg_151.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(sh_assign_0_reg_151.read() == ap_const_lv6_20);
}

void cordic::thread_or_ln17_1_fu_252_p2() {
    or_ln17_1_fu_252_p2 = (empty_2_fu_237_p1.read() | ap_const_lv5_2);
}

void cordic::thread_or_ln17_2_fu_263_p2() {
    or_ln17_2_fu_263_p2 = (empty_2_fu_237_p1.read() | ap_const_lv5_3);
}

void cordic::thread_or_ln17_fu_241_p2() {
    or_ln17_fu_241_p2 = (empty_2_fu_237_p1.read() | ap_const_lv5_1);
}

void cordic::thread_s_V() {
    s_V = p_Val2_2_0_reg_127.read();
}

void cordic::thread_s_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_166_p2.read(), ap_const_lv1_1))) {
        s_V_ap_vld = ap_const_logic_1;
    } else {
        s_V_ap_vld = ap_const_logic_0;
    }
}

void cordic::thread_select_ln1496_10_fu_542_p3() {
    select_ln1496_10_fu_542_p3 = (!tmp_3_fu_486_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_3_fu_486_p3.read()[0].to_bool())? add_ln703_11_fu_516_p2.read(): sub_ln703_10_fu_494_p2.read());
}

void cordic::thread_select_ln1496_11_fu_550_p3() {
    select_ln1496_11_fu_550_p3 = (!tmp_3_fu_486_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_3_fu_486_p3.read()[0].to_bool())? add_ln703_3_fu_528_p2.read(): sub_ln703_3_fu_510_p2.read());
}

void cordic::thread_select_ln1496_1_fu_229_p3() {
    select_ln1496_1_fu_229_p3 = (!tmp_fu_184_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_fu_184_p3.read()[0].to_bool())? add_ln703_4_fu_209_p2.read(): sub_ln703_fu_192_p2.read());
}

void cordic::thread_select_ln1496_2_fu_296_p3() {
    select_ln1496_2_fu_296_p3 = (!tmp_reg_566.read()[0].is_01())? sc_lv<12>(): ((tmp_reg_566.read()[0].to_bool())? add_ln703_5_fu_290_p2.read(): sub_ln703_4_fu_284_p2.read());
}

void cordic::thread_select_ln1496_3_fu_360_p3() {
    select_ln1496_3_fu_360_p3 = (!tmp_1_fu_316_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_1_fu_316_p3.read()[0].to_bool())? sub_ln703_7_fu_349_p2.read(): add_ln703_6_fu_329_p2.read());
}

void cordic::thread_select_ln1496_4_fu_368_p3() {
    select_ln1496_4_fu_368_p3 = (!tmp_1_fu_316_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_1_fu_316_p3.read()[0].to_bool())? add_ln703_7_fu_344_p2.read(): sub_ln703_6_fu_324_p2.read());
}

void cordic::thread_select_ln1496_5_fu_376_p3() {
    select_ln1496_5_fu_376_p3 = (!tmp_1_fu_316_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_1_fu_316_p3.read()[0].to_bool())? add_ln703_1_fu_354_p2.read(): sub_ln703_1_fu_338_p2.read());
}

void cordic::thread_select_ln1496_6_fu_447_p3() {
    select_ln1496_6_fu_447_p3 = (!tmp_2_fu_399_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_2_fu_399_p3.read()[0].to_bool())? sub_ln703_9_fu_435_p2.read(): add_ln703_8_fu_413_p2.read());
}

void cordic::thread_select_ln1496_7_fu_455_p3() {
    select_ln1496_7_fu_455_p3 = (!tmp_2_fu_399_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_2_fu_399_p3.read()[0].to_bool())? add_ln703_9_fu_429_p2.read(): sub_ln703_8_fu_407_p2.read());
}

void cordic::thread_select_ln1496_8_fu_463_p3() {
    select_ln1496_8_fu_463_p3 = (!tmp_2_fu_399_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_2_fu_399_p3.read()[0].to_bool())? add_ln703_2_fu_441_p2.read(): sub_ln703_2_fu_423_p2.read());
}

void cordic::thread_select_ln1496_9_fu_534_p3() {
    select_ln1496_9_fu_534_p3 = (!tmp_3_fu_486_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_3_fu_486_p3.read()[0].to_bool())? sub_ln703_11_fu_522_p2.read(): add_ln703_10_fu_500_p2.read());
}

void cordic::thread_select_ln1496_fu_221_p3() {
    select_ln1496_fu_221_p3 = (!tmp_fu_184_p3.read()[0].is_01())? sc_lv<12>(): ((tmp_fu_184_p3.read()[0].to_bool())? sub_ln703_5_fu_215_p2.read(): add_ln703_fu_198_p2.read());
}

void cordic::thread_sh_assign_0_cast4_fu_162_p1() {
    sh_assign_0_cast4_fu_162_p1 = esl_zext<12,6>(sh_assign_0_reg_151.read());
}

void cordic::thread_sub_ln703_10_fu_494_p2() {
    sub_ln703_10_fu_494_p2 = (!select_ln1496_7_fu_455_p3.read().is_01() || !ashr_ln1333_7_fu_480_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_7_fu_455_p3.read()) - sc_biguint<12>(ashr_ln1333_7_fu_480_p2.read()));
}

void cordic::thread_sub_ln703_11_fu_522_p2() {
    sub_ln703_11_fu_522_p2 = (!select_ln1496_6_fu_447_p3.read().is_01() || !ashr_ln1333_3_fu_474_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_6_fu_447_p3.read()) - sc_biguint<12>(ashr_ln1333_3_fu_474_p2.read()));
}

void cordic::thread_sub_ln703_1_fu_338_p2() {
    sub_ln703_1_fu_338_p2 = (!select_ln1496_2_fu_296_p3.read().is_01() || !zext_ln1265_1_fu_334_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_2_fu_296_p3.read()) - sc_biguint<12>(zext_ln1265_1_fu_334_p1.read()));
}

void cordic::thread_sub_ln703_2_fu_423_p2() {
    sub_ln703_2_fu_423_p2 = (!select_ln1496_5_fu_376_p3.read().is_01() || !zext_ln1265_2_fu_419_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_5_fu_376_p3.read()) - sc_biguint<12>(zext_ln1265_2_fu_419_p1.read()));
}

void cordic::thread_sub_ln703_3_fu_510_p2() {
    sub_ln703_3_fu_510_p2 = (!select_ln1496_8_fu_463_p3.read().is_01() || !zext_ln1265_3_fu_506_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_8_fu_463_p3.read()) - sc_biguint<12>(zext_ln1265_3_fu_506_p1.read()));
}

void cordic::thread_sub_ln703_4_fu_284_p2() {
    sub_ln703_4_fu_284_p2 = (!theta_V_buf_0_0_reg_117.read().is_01() || !zext_ln1265_fu_280_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(theta_V_buf_0_0_reg_117.read()) - sc_biguint<12>(zext_ln1265_fu_280_p1.read()));
}

void cordic::thread_sub_ln703_5_fu_215_p2() {
    sub_ln703_5_fu_215_p2 = (!p_Val2_2_0_reg_127.read().is_01() || !ashr_ln1333_fu_172_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_Val2_2_0_reg_127.read()) - sc_biguint<12>(ashr_ln1333_fu_172_p2.read()));
}

void cordic::thread_sub_ln703_6_fu_324_p2() {
    sub_ln703_6_fu_324_p2 = (!select_ln1496_1_reg_583.read().is_01() || !ashr_ln1333_5_fu_311_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_1_reg_583.read()) - sc_biguint<12>(ashr_ln1333_5_fu_311_p2.read()));
}

void cordic::thread_sub_ln703_7_fu_349_p2() {
    sub_ln703_7_fu_349_p2 = (!select_ln1496_reg_576.read().is_01() || !ashr_ln1333_4_fu_306_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_reg_576.read()) - sc_biguint<12>(ashr_ln1333_4_fu_306_p2.read()));
}

void cordic::thread_sub_ln703_8_fu_407_p2() {
    sub_ln703_8_fu_407_p2 = (!select_ln1496_4_fu_368_p3.read().is_01() || !ashr_ln1333_6_fu_393_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_4_fu_368_p3.read()) - sc_biguint<12>(ashr_ln1333_6_fu_393_p2.read()));
}

void cordic::thread_sub_ln703_9_fu_435_p2() {
    sub_ln703_9_fu_435_p2 = (!select_ln1496_3_fu_360_p3.read().is_01() || !ashr_ln1333_2_fu_387_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(select_ln1496_3_fu_360_p3.read()) - sc_biguint<12>(ashr_ln1333_2_fu_387_p2.read()));
}

void cordic::thread_sub_ln703_fu_192_p2() {
    sub_ln703_fu_192_p2 = (!p_Val2_0_reg_139.read().is_01() || !ashr_ln1333_1_fu_178_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_Val2_0_reg_139.read()) - sc_biguint<12>(ashr_ln1333_1_fu_178_p2.read()));
}

void cordic::thread_tmp_1_fu_316_p3() {
    tmp_1_fu_316_p3 = select_ln1496_2_fu_296_p3.read().range(11, 11);
}

void cordic::thread_tmp_2_fu_399_p3() {
    tmp_2_fu_399_p3 = select_ln1496_5_fu_376_p3.read().range(11, 11);
}

void cordic::thread_tmp_3_fu_486_p3() {
    tmp_3_fu_486_p3 = select_ln1496_8_fu_463_p3.read().range(11, 11);
}

void cordic::thread_tmp_fu_184_p3() {
    tmp_fu_184_p3 = theta_V_buf_0_0_reg_117.read().range(11, 11);
}

void cordic::thread_zext_ln1265_1_fu_334_p1() {
    zext_ln1265_1_fu_334_p1 = esl_zext<12,10>(cordic_phase_V_q1.read());
}

void cordic::thread_zext_ln1265_2_fu_419_p1() {
    zext_ln1265_2_fu_419_p1 = esl_zext<12,10>(cordic_phase_V_q2.read());
}

void cordic::thread_zext_ln1265_3_fu_506_p1() {
    zext_ln1265_3_fu_506_p1 = esl_zext<12,10>(cordic_phase_V_q3.read());
}

void cordic::thread_zext_ln1265_fu_280_p1() {
    zext_ln1265_fu_280_p1 = esl_zext<12,10>(cordic_phase_V_q0.read());
}

void cordic::thread_zext_ln17_1_fu_384_p1() {
    zext_ln17_1_fu_384_p1 = esl_zext<12,5>(or_ln17_1_reg_600.read());
}

void cordic::thread_zext_ln17_2_fu_471_p1() {
    zext_ln17_2_fu_471_p1 = esl_zext<12,5>(or_ln17_2_reg_610.read());
}

void cordic::thread_zext_ln17_fu_303_p1() {
    zext_ln17_fu_303_p1 = esl_zext<12,5>(or_ln17_reg_590.read());
}

void cordic::thread_zext_ln30_1_fu_247_p1() {
    zext_ln30_1_fu_247_p1 = esl_zext<64,5>(or_ln17_fu_241_p2.read());
}

void cordic::thread_zext_ln30_2_fu_258_p1() {
    zext_ln30_2_fu_258_p1 = esl_zext<64,5>(or_ln17_1_fu_252_p2.read());
}

void cordic::thread_zext_ln30_3_fu_269_p1() {
    zext_ln30_3_fu_269_p1 = esl_zext<64,5>(or_ln17_2_fu_263_p2.read());
}

void cordic::thread_zext_ln30_fu_204_p1() {
    zext_ln30_fu_204_p1 = esl_zext<64,6>(sh_assign_0_reg_151.read());
}

void cordic::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_166_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void cordic::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"theta_V\" :  \"" << theta_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_V\" :  \"" << s_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_V_ap_vld\" :  \"" << s_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_V\" :  \"" << c_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_V_ap_vld\" :  \"" << c_V_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

