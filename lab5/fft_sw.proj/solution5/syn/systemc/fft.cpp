// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fft.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fft::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fft::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<39> fft::ap_ST_fsm_state1 = "1";
const sc_lv<39> fft::ap_ST_fsm_state2 = "10";
const sc_lv<39> fft::ap_ST_fsm_state3 = "100";
const sc_lv<39> fft::ap_ST_fsm_state4 = "1000";
const sc_lv<39> fft::ap_ST_fsm_state5 = "10000";
const sc_lv<39> fft::ap_ST_fsm_state6 = "100000";
const sc_lv<39> fft::ap_ST_fsm_state7 = "1000000";
const sc_lv<39> fft::ap_ST_fsm_state8 = "10000000";
const sc_lv<39> fft::ap_ST_fsm_state9 = "100000000";
const sc_lv<39> fft::ap_ST_fsm_state10 = "1000000000";
const sc_lv<39> fft::ap_ST_fsm_state11 = "10000000000";
const sc_lv<39> fft::ap_ST_fsm_state12 = "100000000000";
const sc_lv<39> fft::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<39> fft::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<39> fft::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<39> fft::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_pp0_stage0 = "100000000000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_pp0_stage1 = "1000000000000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_pp0_stage2 = "10000000000000000000000000000000000000";
const sc_lv<39> fft::ap_ST_fsm_state62 = "100000000000000000000000000000000000000";
const sc_lv<32> fft::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool fft::ap_const_boolean_1 = true;
const sc_lv<32> fft::ap_const_lv32_23 = "100011";
const bool fft::ap_const_boolean_0 = false;
const sc_lv<1> fft::ap_const_lv1_1 = "1";
const sc_lv<32> fft::ap_const_lv32_24 = "100100";
const sc_lv<32> fft::ap_const_lv32_2 = "10";
const sc_lv<1> fft::ap_const_lv1_0 = "0";
const sc_lv<32> fft::ap_const_lv32_5 = "101";
const sc_lv<32> fft::ap_const_lv32_1B = "11011";
const sc_lv<32> fft::ap_const_lv32_1D = "11101";
const sc_lv<32> fft::ap_const_lv32_1E = "11110";
const sc_lv<32> fft::ap_const_lv32_1F = "11111";
const sc_lv<32> fft::ap_const_lv32_20 = "100000";
const sc_lv<32> fft::ap_const_lv32_21 = "100001";
const sc_lv<32> fft::ap_const_lv32_22 = "100010";
const sc_lv<32> fft::ap_const_lv32_25 = "100101";
const sc_lv<4> fft::ap_const_lv4_1 = "1";
const sc_lv<32> fft::ap_const_lv32_1 = "1";
const sc_lv<10> fft::ap_const_lv10_0 = "0000000000";
const sc_lv<32> fft::ap_const_lv32_26 = "100110";
const sc_lv<32> fft::ap_const_lv32_1C = "11100";
const sc_lv<64> fft::ap_const_lv64_C01921FB5444261E = "1100000000011001001000011111101101010100010001000010011000011110";
const sc_lv<32> fft::ap_const_lv32_6 = "110";
const sc_lv<4> fft::ap_const_lv4_B = "1011";
const sc_lv<11> fft::ap_const_lv11_1 = "1";
const sc_lv<32> fft::ap_const_lv32_A = "1010";
const sc_lv<10> fft::ap_const_lv10_1 = "1";
const sc_lv<22> fft::ap_const_lv22_1 = "1";
const sc_lv<2> fft::ap_const_lv2_0 = "00";
const sc_lv<2> fft::ap_const_lv2_1 = "1";

fft::fft(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_sin_or_cos_double_s_fu_179 = new sin_or_cos_double_s("grp_sin_or_cos_double_s_fu_179");
    grp_sin_or_cos_double_s_fu_179->ap_clk(ap_clk);
    grp_sin_or_cos_double_s_fu_179->ap_rst(ap_rst);
    grp_sin_or_cos_double_s_fu_179->ap_start(grp_sin_or_cos_double_s_fu_179_ap_start);
    grp_sin_or_cos_double_s_fu_179->ap_done(grp_sin_or_cos_double_s_fu_179_ap_done);
    grp_sin_or_cos_double_s_fu_179->ap_idle(grp_sin_or_cos_double_s_fu_179_ap_idle);
    grp_sin_or_cos_double_s_fu_179->ap_ready(grp_sin_or_cos_double_s_fu_179_ap_ready);
    grp_sin_or_cos_double_s_fu_179->t_in(x_assign_reg_408);
    grp_sin_or_cos_double_s_fu_179->do_cos(grp_sin_or_cos_double_s_fu_179_do_cos);
    grp_sin_or_cos_double_s_fu_179->ap_return(grp_sin_or_cos_double_s_fu_179_ap_return);
    grp_sin_or_cos_double_s_fu_198 = new sin_or_cos_double_s("grp_sin_or_cos_double_s_fu_198");
    grp_sin_or_cos_double_s_fu_198->ap_clk(ap_clk);
    grp_sin_or_cos_double_s_fu_198->ap_rst(ap_rst);
    grp_sin_or_cos_double_s_fu_198->ap_start(grp_sin_or_cos_double_s_fu_198_ap_start);
    grp_sin_or_cos_double_s_fu_198->ap_done(grp_sin_or_cos_double_s_fu_198_ap_done);
    grp_sin_or_cos_double_s_fu_198->ap_idle(grp_sin_or_cos_double_s_fu_198_ap_idle);
    grp_sin_or_cos_double_s_fu_198->ap_ready(grp_sin_or_cos_double_s_fu_198_ap_ready);
    grp_sin_or_cos_double_s_fu_198->t_in(x_assign_reg_408);
    grp_sin_or_cos_double_s_fu_198->do_cos(grp_sin_or_cos_double_s_fu_198_do_cos);
    grp_sin_or_cos_double_s_fu_198->ap_return(grp_sin_or_cos_double_s_fu_198_ap_return);
    grp_bit_reverse_fu_217 = new bit_reverse("grp_bit_reverse_fu_217");
    grp_bit_reverse_fu_217->ap_clk(ap_clk);
    grp_bit_reverse_fu_217->ap_rst(ap_rst);
    grp_bit_reverse_fu_217->ap_start(grp_bit_reverse_fu_217_ap_start);
    grp_bit_reverse_fu_217->ap_done(grp_bit_reverse_fu_217_ap_done);
    grp_bit_reverse_fu_217->ap_idle(grp_bit_reverse_fu_217_ap_idle);
    grp_bit_reverse_fu_217->ap_ready(grp_bit_reverse_fu_217_ap_ready);
    grp_bit_reverse_fu_217->X_R_address0(grp_bit_reverse_fu_217_X_R_address0);
    grp_bit_reverse_fu_217->X_R_ce0(grp_bit_reverse_fu_217_X_R_ce0);
    grp_bit_reverse_fu_217->X_R_we0(grp_bit_reverse_fu_217_X_R_we0);
    grp_bit_reverse_fu_217->X_R_d0(grp_bit_reverse_fu_217_X_R_d0);
    grp_bit_reverse_fu_217->X_R_q0(X_R_q0);
    grp_bit_reverse_fu_217->X_I_address0(grp_bit_reverse_fu_217_X_I_address0);
    grp_bit_reverse_fu_217->X_I_ce0(grp_bit_reverse_fu_217_X_I_ce0);
    grp_bit_reverse_fu_217->X_I_we0(grp_bit_reverse_fu_217_X_I_we0);
    grp_bit_reverse_fu_217->X_I_d0(grp_bit_reverse_fu_217_X_I_d0);
    grp_bit_reverse_fu_217->X_I_q0(X_I_q0);
    fft_faddfsub_32nsibs_U24 = new fft_faddfsub_32nsibs<1,4,32,32,32>("fft_faddfsub_32nsibs_U24");
    fft_faddfsub_32nsibs_U24->clk(ap_clk);
    fft_faddfsub_32nsibs_U24->reset(ap_rst);
    fft_faddfsub_32nsibs_U24->din0(grp_fu_225_p0);
    fft_faddfsub_32nsibs_U24->din1(grp_fu_225_p1);
    fft_faddfsub_32nsibs_U24->opcode(grp_fu_225_opcode);
    fft_faddfsub_32nsibs_U24->ce(grp_fu_225_ce);
    fft_faddfsub_32nsibs_U24->dout(grp_fu_225_p2);
    fft_faddfsub_32nsibs_U25 = new fft_faddfsub_32nsibs<1,4,32,32,32>("fft_faddfsub_32nsibs_U25");
    fft_faddfsub_32nsibs_U25->clk(ap_clk);
    fft_faddfsub_32nsibs_U25->reset(ap_rst);
    fft_faddfsub_32nsibs_U25->din0(grp_fu_230_p0);
    fft_faddfsub_32nsibs_U25->din1(grp_fu_230_p1);
    fft_faddfsub_32nsibs_U25->opcode(grp_fu_230_opcode);
    fft_faddfsub_32nsibs_U25->ce(ap_var_for_const0);
    fft_faddfsub_32nsibs_U25->dout(grp_fu_230_p2);
    fft_fmul_32ns_32njbC_U26 = new fft_fmul_32ns_32njbC<1,3,32,32,32>("fft_fmul_32ns_32njbC_U26");
    fft_fmul_32ns_32njbC_U26->clk(ap_clk);
    fft_fmul_32ns_32njbC_U26->reset(ap_rst);
    fft_fmul_32ns_32njbC_U26->din0(grp_fu_234_p0);
    fft_fmul_32ns_32njbC_U26->din1(c_reg_434);
    fft_fmul_32ns_32njbC_U26->ce(ap_var_for_const0);
    fft_fmul_32ns_32njbC_U26->dout(grp_fu_234_p2);
    fft_fmul_32ns_32njbC_U27 = new fft_fmul_32ns_32njbC<1,3,32,32,32>("fft_fmul_32ns_32njbC_U27");
    fft_fmul_32ns_32njbC_U27->clk(ap_clk);
    fft_fmul_32ns_32njbC_U27->reset(ap_rst);
    fft_fmul_32ns_32njbC_U27->din0(grp_fu_238_p0);
    fft_fmul_32ns_32njbC_U27->din1(s_reg_439);
    fft_fmul_32ns_32njbC_U27->ce(ap_var_for_const0);
    fft_fmul_32ns_32njbC_U27->dout(grp_fu_238_p2);
    fft_fptrunc_64ns_kbM_U28 = new fft_fptrunc_64ns_kbM<1,2,64,32>("fft_fptrunc_64ns_kbM_U28");
    fft_fptrunc_64ns_kbM_U28->clk(ap_clk);
    fft_fptrunc_64ns_kbM_U28->reset(ap_rst);
    fft_fptrunc_64ns_kbM_U28->din0(grp_fu_242_p0);
    fft_fptrunc_64ns_kbM_U28->ce(ap_var_for_const0);
    fft_fptrunc_64ns_kbM_U28->dout(grp_fu_242_p1);
    fft_fptrunc_64ns_kbM_U29 = new fft_fptrunc_64ns_kbM<1,2,64,32>("fft_fptrunc_64ns_kbM_U29");
    fft_fptrunc_64ns_kbM_U29->clk(ap_clk);
    fft_fptrunc_64ns_kbM_U29->reset(ap_rst);
    fft_fptrunc_64ns_kbM_U29->din0(tmp_i_i9_reg_419);
    fft_fptrunc_64ns_kbM_U29->ce(ap_var_for_const0);
    fft_fptrunc_64ns_kbM_U29->dout(grp_fu_245_p1);
    fft_fpext_32ns_64lbW_U30 = new fft_fpext_32ns_64lbW<1,2,32,64>("fft_fpext_32ns_64lbW_U30");
    fft_fpext_32ns_64lbW_U30->clk(ap_clk);
    fft_fpext_32ns_64lbW_U30->reset(ap_rst);
    fft_fpext_32ns_64lbW_U30->din0(a_0_reg_158);
    fft_fpext_32ns_64lbW_U30->ce(ap_var_for_const0);
    fft_fpext_32ns_64lbW_U30->dout(grp_fu_248_p1);
    fft_ddiv_64ns_64nmb6_U31 = new fft_ddiv_64ns_64nmb6<1,22,64,64,64>("fft_ddiv_64ns_64nmb6_U31");
    fft_ddiv_64ns_64nmb6_U31->clk(ap_clk);
    fft_ddiv_64ns_64nmb6_U31->reset(ap_rst);
    fft_ddiv_64ns_64nmb6_U31->din0(ap_var_for_const1);
    fft_ddiv_64ns_64nmb6_U31->din1(tmp_reg_375);
    fft_ddiv_64ns_64nmb6_U31->ce(ap_var_for_const0);
    fft_ddiv_64ns_64nmb6_U31->dout(grp_fu_254_p2);
    fft_sitodp_32ns_6ncg_U32 = new fft_sitodp_32ns_6ncg<1,4,32,64>("fft_sitodp_32ns_6ncg_U32");
    fft_sitodp_32ns_6ncg_U32->clk(ap_clk);
    fft_sitodp_32ns_6ncg_U32->reset(ap_rst);
    fft_sitodp_32ns_6ncg_U32->din0(grp_fu_259_p0);
    fft_sitodp_32ns_6ncg_U32->ce(ap_var_for_const0);
    fft_sitodp_32ns_6ncg_U32->dout(grp_fu_259_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_DFTpts_fu_277_p2);
    sensitive << ( zext_ln50_fu_273_p1 );

    SC_METHOD(thread_X_I_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( X_I_addr_reg_453_pp0_iter4_reg );
    sensitive << ( X_I_addr_1_reg_464_pp0_iter5_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( grp_bit_reverse_fu_217_X_I_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln65_fu_343_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_X_I_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( X_I_addr_1_reg_464_pp0_iter1_reg );
    sensitive << ( X_I_addr_1_reg_464_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_X_I_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( grp_bit_reverse_fu_217_X_I_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_X_I_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_X_I_d0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_6_reg_528 );
    sensitive << ( grp_bit_reverse_fu_217_X_I_d0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_X_I_d1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_11_reg_543 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_X_I_we0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( icmp_ln63_reg_444_pp0_iter4_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( grp_bit_reverse_fu_217_X_I_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_X_I_we1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( icmp_ln63_reg_444_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_X_R_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( X_R_addr_reg_448_pp0_iter4_reg );
    sensitive << ( X_R_addr_1_reg_458_pp0_iter6_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( grp_bit_reverse_fu_217_X_R_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln65_fu_343_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_X_R_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( X_R_addr_1_reg_458_pp0_iter1_reg );
    sensitive << ( X_R_addr_1_reg_458_pp0_iter4_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_X_R_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( grp_bit_reverse_fu_217_X_R_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_X_R_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_X_R_d0);
    sensitive << ( reg_262 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( grp_bit_reverse_fu_217_X_R_d0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_X_R_we0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( icmp_ln63_reg_444_pp0_iter6_reg );
    sensitive << ( icmp_ln63_reg_444_pp0_iter4_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( grp_bit_reverse_fu_217_X_R_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_00001);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_00001);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_state33_on_subcall_done);
    sensitive << ( grp_sin_or_cos_double_s_fu_179_ap_done );
    sensitive << ( grp_sin_or_cos_double_s_fu_198_ap_done );

    SC_METHOD(thread_ap_block_state36_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state37_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state38_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state39_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state40_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state41_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state42_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state43_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state44_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state45_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state46_pp0_stage1_iter3);

    SC_METHOD(thread_ap_block_state47_pp0_stage2_iter3);

    SC_METHOD(thread_ap_block_state48_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state49_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state50_pp0_stage2_iter4);

    SC_METHOD(thread_ap_block_state51_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state52_pp0_stage1_iter5);

    SC_METHOD(thread_ap_block_state53_pp0_stage2_iter5);

    SC_METHOD(thread_ap_block_state54_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state55_pp0_stage1_iter6);

    SC_METHOD(thread_ap_block_state56_pp0_stage2_iter6);

    SC_METHOD(thread_ap_block_state57_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state58_pp0_stage1_iter7);

    SC_METHOD(thread_ap_block_state59_pp0_stage2_iter7);

    SC_METHOD(thread_ap_block_state60_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state61_pp0_stage1_iter8);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state36);
    sensitive << ( icmp_ln63_fu_332_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln50_fu_267_p2 );

    SC_METHOD(thread_ap_enable_operation_144);
    sensitive << ( icmp_ln63_fu_332_p2 );

    SC_METHOD(thread_ap_enable_operation_146);
    sensitive << ( icmp_ln63_fu_332_p2 );

    SC_METHOD(thread_ap_enable_operation_151);
    sensitive << ( icmp_ln63_reg_444 );

    SC_METHOD(thread_ap_enable_operation_152);
    sensitive << ( icmp_ln63_reg_444 );

    SC_METHOD(thread_ap_enable_operation_168);
    sensitive << ( icmp_ln63_reg_444_pp0_iter1_reg );

    SC_METHOD(thread_ap_enable_operation_169);
    sensitive << ( icmp_ln63_reg_444_pp0_iter1_reg );

    SC_METHOD(thread_ap_enable_operation_172);
    sensitive << ( icmp_ln63_reg_444_pp0_iter2_reg );

    SC_METHOD(thread_ap_enable_operation_173);
    sensitive << ( icmp_ln63_reg_444_pp0_iter2_reg );

    SC_METHOD(thread_ap_enable_operation_184);
    sensitive << ( icmp_ln63_reg_444_pp0_iter4_reg );

    SC_METHOD(thread_ap_enable_operation_186);
    sensitive << ( icmp_ln63_reg_444_pp0_iter4_reg );

    SC_METHOD(thread_ap_enable_operation_187);
    sensitive << ( icmp_ln63_reg_444_pp0_iter4_reg );

    SC_METHOD(thread_ap_enable_operation_188);
    sensitive << ( icmp_ln63_reg_444_pp0_iter4_reg );

    SC_METHOD(thread_ap_enable_operation_190);
    sensitive << ( icmp_ln63_reg_444_pp0_iter5_reg );

    SC_METHOD(thread_ap_enable_operation_192);
    sensitive << ( icmp_ln63_reg_444_pp0_iter5_reg );

    SC_METHOD(thread_ap_enable_operation_195);
    sensitive << ( icmp_ln63_reg_444_pp0_iter6_reg );

    SC_METHOD(thread_ap_enable_operation_204);
    sensitive << ( icmp_ln63_reg_444_pp0_iter8_reg );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_state36_pp0_iter0_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_enable_state37_pp0_iter0_stage1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_enable_state42_pp0_iter2_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_enable_state43_pp0_iter2_stage1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_enable_state49_pp0_iter4_stage1);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );

    SC_METHOD(thread_ap_enable_state50_pp0_iter4_stage2);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );

    SC_METHOD(thread_ap_enable_state51_pp0_iter5_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_enable_state52_pp0_iter5_stage1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_enable_state53_pp0_iter5_stage2);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_enable_state56_pp0_iter6_stage2);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );

    SC_METHOD(thread_ap_enable_state61_pp0_iter8_stage1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_173_p4);
    sensitive << ( i_0_reg_170 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln63_reg_444 );
    sensitive << ( i_3_reg_470 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln50_fu_267_p2 );

    SC_METHOD(thread_grp_bit_reverse_fu_217_ap_start);
    sensitive << ( grp_bit_reverse_fu_217_ap_start_reg );

    SC_METHOD(thread_grp_fu_225_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_block_state33_on_subcall_done );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_grp_fu_225_opcode);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln63_reg_444_pp0_iter3_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( icmp_ln57_fu_301_p2 );
    sensitive << ( icmp_ln63_reg_444_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_00001 );
    sensitive << ( ap_block_pp0_stage2_00001 );
    sensitive << ( ap_block_pp0_stage1_00001 );

    SC_METHOD(thread_grp_fu_225_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( tmp_7_reg_487 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_reg_497 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( X_I_load_1_reg_512 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( a_0_reg_158 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_225_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( e_reg_390 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_8_reg_492 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_s_reg_502 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( temp_I_reg_522 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_230_opcode);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln63_reg_444_pp0_iter6_reg );
    sensitive << ( icmp_ln63_reg_444_pp0_iter2_reg );
    sensitive << ( icmp_ln63_reg_444_pp0_iter5_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0_00001 );
    sensitive << ( ap_block_pp0_stage2_00001 );
    sensitive << ( ap_block_pp0_stage1_00001 );

    SC_METHOD(thread_grp_fu_230_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( X_R_load_1_reg_507 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( X_R_load_2_reg_533 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( X_I_load_2_reg_538 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_230_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( temp_R_reg_517 );
    sensitive << ( temp_R_reg_517_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( temp_I_reg_522_pp0_iter6_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_234_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( X_R_load_reg_475 );
    sensitive << ( X_I_load_reg_481 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_238_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( X_R_load_reg_475 );
    sensitive << ( X_I_load_reg_481 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_242_p0);
    sensitive << ( tmp_2_reg_380 );
    sensitive << ( tmp_i_i_reg_414 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_grp_fu_259_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( DFTpts_fu_277_p2 );

    SC_METHOD(thread_grp_sin_or_cos_double_s_fu_179_ap_start);
    sensitive << ( grp_sin_or_cos_double_s_fu_179_ap_start_reg );

    SC_METHOD(thread_grp_sin_or_cos_double_s_fu_179_do_cos);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_grp_sin_or_cos_double_s_fu_198_ap_start);
    sensitive << ( grp_sin_or_cos_double_s_fu_198_ap_start_reg );

    SC_METHOD(thread_grp_sin_or_cos_double_s_fu_198_do_cos);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_i_3_fu_355_p2);
    sensitive << ( zext_ln51_reg_363 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_173_p4 );

    SC_METHOD(thread_i_lower_fu_338_p2);
    sensitive << ( numBF_reg_385 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_173_p4 );

    SC_METHOD(thread_icmp_ln50_fu_267_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( stage_0_reg_134 );

    SC_METHOD(thread_icmp_ln57_fu_301_p2);
    sensitive << ( trunc_ln_reg_369 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( i_reg_146 );

    SC_METHOD(thread_icmp_ln63_fu_332_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_12_fu_322_p4 );

    SC_METHOD(thread_j_fu_306_p2);
    sensitive << ( i_reg_146 );

    SC_METHOD(thread_numBF_fu_298_p1);
    sensitive << ( trunc_ln_reg_369 );

    SC_METHOD(thread_sext_ln65_fu_343_p1);
    sensitive << ( i_lower_fu_338_p2 );

    SC_METHOD(thread_sext_ln67_fu_349_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_173_p4 );

    SC_METHOD(thread_stage_fu_312_p2);
    sensitive << ( stage_0_reg_134 );

    SC_METHOD(thread_tmp_12_fu_322_p4);
    sensitive << ( ap_phi_mux_i_0_phi_fu_173_p4 );

    SC_METHOD(thread_zext_ln50_fu_273_p1);
    sensitive << ( stage_0_reg_134 );

    SC_METHOD(thread_zext_ln51_fu_283_p1);
    sensitive << ( DFTpts_fu_277_p2 );

    SC_METHOD(thread_zext_ln57_fu_318_p1);
    sensitive << ( i_reg_146 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln50_fu_267_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( icmp_ln57_fu_301_p2 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_block_state33_on_subcall_done );
    sensitive << ( icmp_ln63_fu_332_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( grp_bit_reverse_fu_217_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    grp_sin_or_cos_double_s_fu_179_ap_start_reg = SC_LOGIC_0;
    grp_sin_or_cos_double_s_fu_198_ap_start_reg = SC_LOGIC_0;
    grp_bit_reverse_fu_217_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fft_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, X_R_address0, "(port)X_R_address0");
    sc_trace(mVcdFile, X_R_ce0, "(port)X_R_ce0");
    sc_trace(mVcdFile, X_R_we0, "(port)X_R_we0");
    sc_trace(mVcdFile, X_R_d0, "(port)X_R_d0");
    sc_trace(mVcdFile, X_R_q0, "(port)X_R_q0");
    sc_trace(mVcdFile, X_R_address1, "(port)X_R_address1");
    sc_trace(mVcdFile, X_R_ce1, "(port)X_R_ce1");
    sc_trace(mVcdFile, X_R_q1, "(port)X_R_q1");
    sc_trace(mVcdFile, X_I_address0, "(port)X_I_address0");
    sc_trace(mVcdFile, X_I_ce0, "(port)X_I_ce0");
    sc_trace(mVcdFile, X_I_we0, "(port)X_I_we0");
    sc_trace(mVcdFile, X_I_d0, "(port)X_I_d0");
    sc_trace(mVcdFile, X_I_q0, "(port)X_I_q0");
    sc_trace(mVcdFile, X_I_address1, "(port)X_I_address1");
    sc_trace(mVcdFile, X_I_ce1, "(port)X_I_ce1");
    sc_trace(mVcdFile, X_I_we1, "(port)X_I_we1");
    sc_trace(mVcdFile, X_I_d1, "(port)X_I_d1");
    sc_trace(mVcdFile, X_I_q1, "(port)X_I_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_0_reg_170, "i_0_reg_170");
    sc_trace(mVcdFile, grp_fu_230_p2, "grp_fu_230_p2");
    sc_trace(mVcdFile, reg_262, "reg_262");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_block_state36_pp0_stage0_iter0, "ap_block_state36_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state39_pp0_stage0_iter1, "ap_block_state39_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state42_pp0_stage0_iter2, "ap_block_state42_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state45_pp0_stage0_iter3, "ap_block_state45_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state48_pp0_stage0_iter4, "ap_block_state48_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state51_pp0_stage0_iter5, "ap_block_state51_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state54_pp0_stage0_iter6, "ap_block_state54_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state57_pp0_stage0_iter7, "ap_block_state57_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state60_pp0_stage0_iter8, "ap_block_state60_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln63_reg_444, "icmp_ln63_reg_444");
    sc_trace(mVcdFile, icmp_ln63_reg_444_pp0_iter3_reg, "icmp_ln63_reg_444_pp0_iter3_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_block_state37_pp0_stage1_iter0, "ap_block_state37_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state40_pp0_stage1_iter1, "ap_block_state40_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state43_pp0_stage1_iter2, "ap_block_state43_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state46_pp0_stage1_iter3, "ap_block_state46_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state49_pp0_stage1_iter4, "ap_block_state49_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_state52_pp0_stage1_iter5, "ap_block_state52_pp0_stage1_iter5");
    sc_trace(mVcdFile, ap_block_state55_pp0_stage1_iter6, "ap_block_state55_pp0_stage1_iter6");
    sc_trace(mVcdFile, ap_block_state58_pp0_stage1_iter7, "ap_block_state58_pp0_stage1_iter7");
    sc_trace(mVcdFile, ap_block_state61_pp0_stage1_iter8, "ap_block_state61_pp0_stage1_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, icmp_ln63_reg_444_pp0_iter6_reg, "icmp_ln63_reg_444_pp0_iter6_reg");
    sc_trace(mVcdFile, zext_ln51_fu_283_p1, "zext_ln51_fu_283_p1");
    sc_trace(mVcdFile, zext_ln51_reg_363, "zext_ln51_reg_363");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln50_fu_267_p2, "icmp_ln50_fu_267_p2");
    sc_trace(mVcdFile, trunc_ln_reg_369, "trunc_ln_reg_369");
    sc_trace(mVcdFile, grp_fu_259_p1, "grp_fu_259_p1");
    sc_trace(mVcdFile, tmp_reg_375, "tmp_reg_375");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_254_p2, "grp_fu_254_p2");
    sc_trace(mVcdFile, tmp_2_reg_380, "tmp_2_reg_380");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, numBF_fu_298_p1, "numBF_fu_298_p1");
    sc_trace(mVcdFile, numBF_reg_385, "numBF_reg_385");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, grp_fu_242_p1, "grp_fu_242_p1");
    sc_trace(mVcdFile, e_reg_390, "e_reg_390");
    sc_trace(mVcdFile, j_fu_306_p2, "j_fu_306_p2");
    sc_trace(mVcdFile, j_reg_398, "j_reg_398");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, stage_fu_312_p2, "stage_fu_312_p2");
    sc_trace(mVcdFile, icmp_ln57_fu_301_p2, "icmp_ln57_fu_301_p2");
    sc_trace(mVcdFile, grp_fu_248_p1, "grp_fu_248_p1");
    sc_trace(mVcdFile, x_assign_reg_408, "x_assign_reg_408");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_179_ap_return, "grp_sin_or_cos_double_s_fu_179_ap_return");
    sc_trace(mVcdFile, tmp_i_i_reg_414, "tmp_i_i_reg_414");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_179_ap_ready, "grp_sin_or_cos_double_s_fu_179_ap_ready");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_179_ap_done, "grp_sin_or_cos_double_s_fu_179_ap_done");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_198_ap_ready, "grp_sin_or_cos_double_s_fu_198_ap_ready");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_198_ap_done, "grp_sin_or_cos_double_s_fu_198_ap_done");
    sc_trace(mVcdFile, ap_block_state33_on_subcall_done, "ap_block_state33_on_subcall_done");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_198_ap_return, "grp_sin_or_cos_double_s_fu_198_ap_return");
    sc_trace(mVcdFile, tmp_i_i9_reg_419, "tmp_i_i9_reg_419");
    sc_trace(mVcdFile, grp_fu_225_p2, "grp_fu_225_p2");
    sc_trace(mVcdFile, a_reg_424, "a_reg_424");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, zext_ln57_fu_318_p1, "zext_ln57_fu_318_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, c_reg_434, "c_reg_434");
    sc_trace(mVcdFile, grp_fu_245_p1, "grp_fu_245_p1");
    sc_trace(mVcdFile, s_reg_439, "s_reg_439");
    sc_trace(mVcdFile, icmp_ln63_fu_332_p2, "icmp_ln63_fu_332_p2");
    sc_trace(mVcdFile, icmp_ln63_reg_444_pp0_iter1_reg, "icmp_ln63_reg_444_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln63_reg_444_pp0_iter2_reg, "icmp_ln63_reg_444_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln63_reg_444_pp0_iter4_reg, "icmp_ln63_reg_444_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln63_reg_444_pp0_iter5_reg, "icmp_ln63_reg_444_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln63_reg_444_pp0_iter7_reg, "icmp_ln63_reg_444_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln63_reg_444_pp0_iter8_reg, "icmp_ln63_reg_444_pp0_iter8_reg");
    sc_trace(mVcdFile, X_R_addr_reg_448, "X_R_addr_reg_448");
    sc_trace(mVcdFile, X_R_addr_reg_448_pp0_iter1_reg, "X_R_addr_reg_448_pp0_iter1_reg");
    sc_trace(mVcdFile, X_R_addr_reg_448_pp0_iter2_reg, "X_R_addr_reg_448_pp0_iter2_reg");
    sc_trace(mVcdFile, X_R_addr_reg_448_pp0_iter3_reg, "X_R_addr_reg_448_pp0_iter3_reg");
    sc_trace(mVcdFile, X_R_addr_reg_448_pp0_iter4_reg, "X_R_addr_reg_448_pp0_iter4_reg");
    sc_trace(mVcdFile, X_I_addr_reg_453, "X_I_addr_reg_453");
    sc_trace(mVcdFile, X_I_addr_reg_453_pp0_iter1_reg, "X_I_addr_reg_453_pp0_iter1_reg");
    sc_trace(mVcdFile, X_I_addr_reg_453_pp0_iter2_reg, "X_I_addr_reg_453_pp0_iter2_reg");
    sc_trace(mVcdFile, X_I_addr_reg_453_pp0_iter3_reg, "X_I_addr_reg_453_pp0_iter3_reg");
    sc_trace(mVcdFile, X_I_addr_reg_453_pp0_iter4_reg, "X_I_addr_reg_453_pp0_iter4_reg");
    sc_trace(mVcdFile, X_R_addr_1_reg_458, "X_R_addr_1_reg_458");
    sc_trace(mVcdFile, X_R_addr_1_reg_458_pp0_iter1_reg, "X_R_addr_1_reg_458_pp0_iter1_reg");
    sc_trace(mVcdFile, X_R_addr_1_reg_458_pp0_iter2_reg, "X_R_addr_1_reg_458_pp0_iter2_reg");
    sc_trace(mVcdFile, X_R_addr_1_reg_458_pp0_iter3_reg, "X_R_addr_1_reg_458_pp0_iter3_reg");
    sc_trace(mVcdFile, X_R_addr_1_reg_458_pp0_iter4_reg, "X_R_addr_1_reg_458_pp0_iter4_reg");
    sc_trace(mVcdFile, X_R_addr_1_reg_458_pp0_iter5_reg, "X_R_addr_1_reg_458_pp0_iter5_reg");
    sc_trace(mVcdFile, X_R_addr_1_reg_458_pp0_iter6_reg, "X_R_addr_1_reg_458_pp0_iter6_reg");
    sc_trace(mVcdFile, X_I_addr_1_reg_464, "X_I_addr_1_reg_464");
    sc_trace(mVcdFile, X_I_addr_1_reg_464_pp0_iter1_reg, "X_I_addr_1_reg_464_pp0_iter1_reg");
    sc_trace(mVcdFile, X_I_addr_1_reg_464_pp0_iter2_reg, "X_I_addr_1_reg_464_pp0_iter2_reg");
    sc_trace(mVcdFile, X_I_addr_1_reg_464_pp0_iter3_reg, "X_I_addr_1_reg_464_pp0_iter3_reg");
    sc_trace(mVcdFile, X_I_addr_1_reg_464_pp0_iter4_reg, "X_I_addr_1_reg_464_pp0_iter4_reg");
    sc_trace(mVcdFile, X_I_addr_1_reg_464_pp0_iter5_reg, "X_I_addr_1_reg_464_pp0_iter5_reg");
    sc_trace(mVcdFile, X_I_addr_1_reg_464_pp0_iter6_reg, "X_I_addr_1_reg_464_pp0_iter6_reg");
    sc_trace(mVcdFile, X_I_addr_1_reg_464_pp0_iter7_reg, "X_I_addr_1_reg_464_pp0_iter7_reg");
    sc_trace(mVcdFile, X_I_addr_1_reg_464_pp0_iter8_reg, "X_I_addr_1_reg_464_pp0_iter8_reg");
    sc_trace(mVcdFile, i_3_fu_355_p2, "i_3_fu_355_p2");
    sc_trace(mVcdFile, i_3_reg_470, "i_3_reg_470");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, X_R_load_reg_475, "X_R_load_reg_475");
    sc_trace(mVcdFile, X_I_load_reg_481, "X_I_load_reg_481");
    sc_trace(mVcdFile, grp_fu_234_p2, "grp_fu_234_p2");
    sc_trace(mVcdFile, tmp_7_reg_487, "tmp_7_reg_487");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, grp_fu_238_p2, "grp_fu_238_p2");
    sc_trace(mVcdFile, tmp_8_reg_492, "tmp_8_reg_492");
    sc_trace(mVcdFile, tmp_9_reg_497, "tmp_9_reg_497");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state38_pp0_stage2_iter0, "ap_block_state38_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state41_pp0_stage2_iter1, "ap_block_state41_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state44_pp0_stage2_iter2, "ap_block_state44_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_state47_pp0_stage2_iter3, "ap_block_state47_pp0_stage2_iter3");
    sc_trace(mVcdFile, ap_block_state50_pp0_stage2_iter4, "ap_block_state50_pp0_stage2_iter4");
    sc_trace(mVcdFile, ap_block_state53_pp0_stage2_iter5, "ap_block_state53_pp0_stage2_iter5");
    sc_trace(mVcdFile, ap_block_state56_pp0_stage2_iter6, "ap_block_state56_pp0_stage2_iter6");
    sc_trace(mVcdFile, ap_block_state59_pp0_stage2_iter7, "ap_block_state59_pp0_stage2_iter7");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, tmp_s_reg_502, "tmp_s_reg_502");
    sc_trace(mVcdFile, X_R_load_1_reg_507, "X_R_load_1_reg_507");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, X_I_load_1_reg_512, "X_I_load_1_reg_512");
    sc_trace(mVcdFile, temp_R_reg_517, "temp_R_reg_517");
    sc_trace(mVcdFile, temp_R_reg_517_pp0_iter3_reg, "temp_R_reg_517_pp0_iter3_reg");
    sc_trace(mVcdFile, temp_R_reg_517_pp0_iter4_reg, "temp_R_reg_517_pp0_iter4_reg");
    sc_trace(mVcdFile, temp_I_reg_522, "temp_I_reg_522");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, temp_I_reg_522_pp0_iter4_reg, "temp_I_reg_522_pp0_iter4_reg");
    sc_trace(mVcdFile, temp_I_reg_522_pp0_iter5_reg, "temp_I_reg_522_pp0_iter5_reg");
    sc_trace(mVcdFile, temp_I_reg_522_pp0_iter6_reg, "temp_I_reg_522_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_6_reg_528, "tmp_6_reg_528");
    sc_trace(mVcdFile, X_R_load_2_reg_533, "X_R_load_2_reg_533");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, X_I_load_2_reg_538, "X_I_load_2_reg_538");
    sc_trace(mVcdFile, tmp_11_reg_543, "tmp_11_reg_543");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state36, "ap_condition_pp0_exit_iter0_state36");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_179_ap_start, "grp_sin_or_cos_double_s_fu_179_ap_start");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_179_ap_idle, "grp_sin_or_cos_double_s_fu_179_ap_idle");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_179_do_cos, "grp_sin_or_cos_double_s_fu_179_do_cos");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_198_ap_start, "grp_sin_or_cos_double_s_fu_198_ap_start");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_198_ap_idle, "grp_sin_or_cos_double_s_fu_198_ap_idle");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_198_do_cos, "grp_sin_or_cos_double_s_fu_198_do_cos");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_ap_start, "grp_bit_reverse_fu_217_ap_start");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_ap_done, "grp_bit_reverse_fu_217_ap_done");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_ap_idle, "grp_bit_reverse_fu_217_ap_idle");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_ap_ready, "grp_bit_reverse_fu_217_ap_ready");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_X_R_address0, "grp_bit_reverse_fu_217_X_R_address0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_X_R_ce0, "grp_bit_reverse_fu_217_X_R_ce0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_X_R_we0, "grp_bit_reverse_fu_217_X_R_we0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_X_R_d0, "grp_bit_reverse_fu_217_X_R_d0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_X_I_address0, "grp_bit_reverse_fu_217_X_I_address0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_X_I_ce0, "grp_bit_reverse_fu_217_X_I_ce0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_X_I_we0, "grp_bit_reverse_fu_217_X_I_we0");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_X_I_d0, "grp_bit_reverse_fu_217_X_I_d0");
    sc_trace(mVcdFile, stage_0_reg_134, "stage_0_reg_134");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_reg_146, "i_reg_146");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, a_0_reg_158, "a_0_reg_158");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_173_p4, "ap_phi_mux_i_0_phi_fu_173_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_179_ap_start_reg, "grp_sin_or_cos_double_s_fu_179_ap_start_reg");
    sc_trace(mVcdFile, grp_sin_or_cos_double_s_fu_198_ap_start_reg, "grp_sin_or_cos_double_s_fu_198_ap_start_reg");
    sc_trace(mVcdFile, grp_bit_reverse_fu_217_ap_start_reg, "grp_bit_reverse_fu_217_ap_start_reg");
    sc_trace(mVcdFile, sext_ln65_fu_343_p1, "sext_ln65_fu_343_p1");
    sc_trace(mVcdFile, sext_ln67_fu_349_p1, "sext_ln67_fu_349_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, grp_fu_225_p0, "grp_fu_225_p0");
    sc_trace(mVcdFile, grp_fu_225_p1, "grp_fu_225_p1");
    sc_trace(mVcdFile, grp_fu_230_p0, "grp_fu_230_p0");
    sc_trace(mVcdFile, grp_fu_230_p1, "grp_fu_230_p1");
    sc_trace(mVcdFile, grp_fu_234_p0, "grp_fu_234_p0");
    sc_trace(mVcdFile, grp_fu_238_p0, "grp_fu_238_p0");
    sc_trace(mVcdFile, grp_fu_242_p0, "grp_fu_242_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_259_p0, "grp_fu_259_p0");
    sc_trace(mVcdFile, zext_ln50_fu_273_p1, "zext_ln50_fu_273_p1");
    sc_trace(mVcdFile, DFTpts_fu_277_p2, "DFTpts_fu_277_p2");
    sc_trace(mVcdFile, tmp_12_fu_322_p4, "tmp_12_fu_322_p4");
    sc_trace(mVcdFile, i_lower_fu_338_p2, "i_lower_fu_338_p2");
    sc_trace(mVcdFile, grp_fu_225_opcode, "grp_fu_225_opcode");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage2_00001, "ap_block_pp0_stage2_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage1_00001, "ap_block_pp0_stage1_00001");
    sc_trace(mVcdFile, grp_fu_225_ce, "grp_fu_225_ce");
    sc_trace(mVcdFile, grp_fu_230_opcode, "grp_fu_230_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0, "ap_block_pp0");
    sc_trace(mVcdFile, ap_enable_operation_144, "ap_enable_operation_144");
    sc_trace(mVcdFile, ap_enable_state36_pp0_iter0_stage0, "ap_enable_state36_pp0_iter0_stage0");
    sc_trace(mVcdFile, ap_enable_operation_151, "ap_enable_operation_151");
    sc_trace(mVcdFile, ap_enable_state37_pp0_iter0_stage1, "ap_enable_state37_pp0_iter0_stage1");
    sc_trace(mVcdFile, ap_enable_operation_184, "ap_enable_operation_184");
    sc_trace(mVcdFile, ap_enable_state49_pp0_iter4_stage1, "ap_enable_state49_pp0_iter4_stage1");
    sc_trace(mVcdFile, ap_enable_operation_195, "ap_enable_operation_195");
    sc_trace(mVcdFile, ap_enable_state56_pp0_iter6_stage2, "ap_enable_state56_pp0_iter6_stage2");
    sc_trace(mVcdFile, ap_enable_operation_146, "ap_enable_operation_146");
    sc_trace(mVcdFile, ap_enable_operation_152, "ap_enable_operation_152");
    sc_trace(mVcdFile, ap_enable_operation_186, "ap_enable_operation_186");
    sc_trace(mVcdFile, ap_enable_state50_pp0_iter4_stage2, "ap_enable_state50_pp0_iter4_stage2");
    sc_trace(mVcdFile, ap_enable_operation_204, "ap_enable_operation_204");
    sc_trace(mVcdFile, ap_enable_state61_pp0_iter8_stage1, "ap_enable_state61_pp0_iter8_stage1");
    sc_trace(mVcdFile, ap_enable_operation_168, "ap_enable_operation_168");
    sc_trace(mVcdFile, ap_enable_state42_pp0_iter2_stage0, "ap_enable_state42_pp0_iter2_stage0");
    sc_trace(mVcdFile, ap_enable_operation_172, "ap_enable_operation_172");
    sc_trace(mVcdFile, ap_enable_state43_pp0_iter2_stage1, "ap_enable_state43_pp0_iter2_stage1");
    sc_trace(mVcdFile, ap_enable_operation_169, "ap_enable_operation_169");
    sc_trace(mVcdFile, ap_enable_operation_173, "ap_enable_operation_173");
    sc_trace(mVcdFile, ap_enable_operation_187, "ap_enable_operation_187");
    sc_trace(mVcdFile, ap_enable_operation_188, "ap_enable_operation_188");
    sc_trace(mVcdFile, ap_enable_state51_pp0_iter5_stage0, "ap_enable_state51_pp0_iter5_stage0");
    sc_trace(mVcdFile, ap_enable_operation_190, "ap_enable_operation_190");
    sc_trace(mVcdFile, ap_enable_state52_pp0_iter5_stage1, "ap_enable_state52_pp0_iter5_stage1");
    sc_trace(mVcdFile, ap_enable_operation_192, "ap_enable_operation_192");
    sc_trace(mVcdFile, ap_enable_state53_pp0_iter5_stage2, "ap_enable_state53_pp0_iter5_stage2");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("fft.hdltvin.dat");
    mHdltvoutHandle.open("fft.hdltvout.dat");
}

fft::~fft() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_sin_or_cos_double_s_fu_179;
    delete grp_sin_or_cos_double_s_fu_198;
    delete grp_bit_reverse_fu_217;
    delete fft_faddfsub_32nsibs_U24;
    delete fft_faddfsub_32nsibs_U25;
    delete fft_fmul_32ns_32njbC_U26;
    delete fft_fmul_32ns_32njbC_U27;
    delete fft_fptrunc_64ns_kbM_U28;
    delete fft_fptrunc_64ns_kbM_U29;
    delete fft_fpext_32ns_64lbW_U30;
    delete fft_ddiv_64ns_64nmb6_U31;
    delete fft_sitodp_32ns_6ncg_U32;
}

void fft::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void fft::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_C01921FB5444261E;
}

void fft::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        a_0_reg_158 = a_reg_424.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        a_0_reg_158 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state36.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_bit_reverse_fu_217_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_bit_reverse_fu_217_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_bit_reverse_fu_217_ap_ready.read())) {
            grp_bit_reverse_fu_217_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sin_or_cos_double_s_fu_179_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
            grp_sin_or_cos_double_s_fu_179_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sin_or_cos_double_s_fu_179_ap_ready.read())) {
            grp_sin_or_cos_double_s_fu_179_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_sin_or_cos_double_s_fu_198_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
            grp_sin_or_cos_double_s_fu_198_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sin_or_cos_double_s_fu_198_ap_ready.read())) {
            grp_sin_or_cos_double_s_fu_198_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln63_reg_444.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_170 = i_3_reg_470.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        i_0_reg_170 = zext_ln57_fu_318_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        i_reg_146 = j_reg_398.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        i_reg_146 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln57_fu_301_p2.read()))) {
        stage_0_reg_134 = stage_fu_312_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(grp_bit_reverse_fu_217_ap_done.read(), ap_const_logic_1))) {
        stage_0_reg_134 = ap_const_lv4_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_fu_332_p2.read()))) {
        X_I_addr_1_reg_464 =  (sc_lv<10>) (sext_ln67_fu_349_p1.read());
        X_I_addr_reg_453 =  (sc_lv<10>) (sext_ln65_fu_343_p1.read());
        X_R_addr_1_reg_458 =  (sc_lv<10>) (sext_ln67_fu_349_p1.read());
        X_R_addr_reg_448 =  (sc_lv<10>) (sext_ln65_fu_343_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        X_I_addr_1_reg_464_pp0_iter1_reg = X_I_addr_1_reg_464.read();
        X_I_addr_1_reg_464_pp0_iter2_reg = X_I_addr_1_reg_464_pp0_iter1_reg.read();
        X_I_addr_1_reg_464_pp0_iter3_reg = X_I_addr_1_reg_464_pp0_iter2_reg.read();
        X_I_addr_1_reg_464_pp0_iter4_reg = X_I_addr_1_reg_464_pp0_iter3_reg.read();
        X_I_addr_1_reg_464_pp0_iter5_reg = X_I_addr_1_reg_464_pp0_iter4_reg.read();
        X_I_addr_1_reg_464_pp0_iter6_reg = X_I_addr_1_reg_464_pp0_iter5_reg.read();
        X_I_addr_1_reg_464_pp0_iter7_reg = X_I_addr_1_reg_464_pp0_iter6_reg.read();
        X_I_addr_1_reg_464_pp0_iter8_reg = X_I_addr_1_reg_464_pp0_iter7_reg.read();
        X_I_addr_reg_453_pp0_iter1_reg = X_I_addr_reg_453.read();
        X_I_addr_reg_453_pp0_iter2_reg = X_I_addr_reg_453_pp0_iter1_reg.read();
        X_I_addr_reg_453_pp0_iter3_reg = X_I_addr_reg_453_pp0_iter2_reg.read();
        X_I_addr_reg_453_pp0_iter4_reg = X_I_addr_reg_453_pp0_iter3_reg.read();
        X_R_addr_1_reg_458_pp0_iter1_reg = X_R_addr_1_reg_458.read();
        X_R_addr_1_reg_458_pp0_iter2_reg = X_R_addr_1_reg_458_pp0_iter1_reg.read();
        X_R_addr_1_reg_458_pp0_iter3_reg = X_R_addr_1_reg_458_pp0_iter2_reg.read();
        X_R_addr_1_reg_458_pp0_iter4_reg = X_R_addr_1_reg_458_pp0_iter3_reg.read();
        X_R_addr_1_reg_458_pp0_iter5_reg = X_R_addr_1_reg_458_pp0_iter4_reg.read();
        X_R_addr_1_reg_458_pp0_iter6_reg = X_R_addr_1_reg_458_pp0_iter5_reg.read();
        X_R_addr_reg_448_pp0_iter1_reg = X_R_addr_reg_448.read();
        X_R_addr_reg_448_pp0_iter2_reg = X_R_addr_reg_448_pp0_iter1_reg.read();
        X_R_addr_reg_448_pp0_iter3_reg = X_R_addr_reg_448_pp0_iter2_reg.read();
        X_R_addr_reg_448_pp0_iter4_reg = X_R_addr_reg_448_pp0_iter3_reg.read();
        icmp_ln63_reg_444 = icmp_ln63_fu_332_p2.read();
        icmp_ln63_reg_444_pp0_iter1_reg = icmp_ln63_reg_444.read();
        icmp_ln63_reg_444_pp0_iter2_reg = icmp_ln63_reg_444_pp0_iter1_reg.read();
        icmp_ln63_reg_444_pp0_iter3_reg = icmp_ln63_reg_444_pp0_iter2_reg.read();
        icmp_ln63_reg_444_pp0_iter4_reg = icmp_ln63_reg_444_pp0_iter3_reg.read();
        icmp_ln63_reg_444_pp0_iter5_reg = icmp_ln63_reg_444_pp0_iter4_reg.read();
        icmp_ln63_reg_444_pp0_iter6_reg = icmp_ln63_reg_444_pp0_iter5_reg.read();
        icmp_ln63_reg_444_pp0_iter7_reg = icmp_ln63_reg_444_pp0_iter6_reg.read();
        icmp_ln63_reg_444_pp0_iter8_reg = icmp_ln63_reg_444_pp0_iter7_reg.read();
        temp_I_reg_522_pp0_iter4_reg = temp_I_reg_522.read();
        temp_I_reg_522_pp0_iter5_reg = temp_I_reg_522_pp0_iter4_reg.read();
        temp_I_reg_522_pp0_iter6_reg = temp_I_reg_522_pp0_iter5_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter2_reg.read()))) {
        X_I_load_1_reg_512 = X_I_q1.read();
        X_R_load_1_reg_507 = X_R_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter5_reg.read()))) {
        X_I_load_2_reg_538 = X_I_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln63_reg_444.read(), ap_const_lv1_1))) {
        X_I_load_reg_481 = X_I_q0.read();
        X_R_load_reg_475 = X_R_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter4_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        X_R_load_2_reg_533 = X_R_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        a_reg_424 = grp_fu_225_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        c_reg_434 = grp_fu_242_p1.read();
        s_reg_439 = grp_fu_245_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        e_reg_390 = grp_fu_242_p1.read();
        numBF_reg_385 = numBF_fu_298_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_fu_332_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_3_reg_470 = i_3_fu_355_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        j_reg_398 = j_fu_306_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln63_reg_444_pp0_iter3_reg.read(), ap_const_lv1_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter6_reg.read())))) {
        reg_262 = grp_fu_230_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        temp_I_reg_522 = grp_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter2_reg.read()))) {
        temp_R_reg_517 = grp_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        temp_R_reg_517_pp0_iter3_reg = temp_R_reg_517.read();
        temp_R_reg_517_pp0_iter4_reg = temp_R_reg_517_pp0_iter3_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter7_reg.read()))) {
        tmp_11_reg_543 = grp_fu_230_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        tmp_2_reg_380 = grp_fu_254_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter4_reg.read()))) {
        tmp_6_reg_528 = grp_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter1_reg.read()))) {
        tmp_7_reg_487 = grp_fu_234_p2.read();
        tmp_8_reg_492 = grp_fu_238_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp_9_reg_497 = grp_fu_234_p2.read();
        tmp_s_reg_502 = grp_fu_238_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(ap_block_state33_on_subcall_done.read(), ap_const_boolean_0))) {
        tmp_i_i9_reg_419 = grp_sin_or_cos_double_s_fu_198_ap_return.read();
        tmp_i_i_reg_414 = grp_sin_or_cos_double_s_fu_179_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_reg_375 = grp_fu_259_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln50_fu_267_p2.read(), ap_const_lv1_0))) {
        trunc_ln_reg_369 = DFTpts_fu_277_p2.read().range(10, 1);
        zext_ln51_reg_363 = zext_ln51_fu_283_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        x_assign_reg_408 = grp_fu_248_p1.read();
    }
}

void fft::thread_DFTpts_fu_277_p2() {
    DFTpts_fu_277_p2 = (!zext_ln50_fu_273_p1.read().is_01())? sc_lv<11>(): ap_const_lv11_1 << (unsigned short)zext_ln50_fu_273_p1.read().to_uint();
}

void fft::thread_X_I_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        X_I_address0 = X_I_addr_1_reg_464_pp0_iter5_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        X_I_address0 = X_I_addr_reg_453_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        X_I_address0 =  (sc_lv<10>) (sext_ln65_fu_343_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_address0 = grp_bit_reverse_fu_217_X_I_address0.read();
    } else {
        X_I_address0 = "XXXXXXXXXX";
    }
}

void fft::thread_X_I_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()))) {
        X_I_address1 = X_I_addr_1_reg_464_pp0_iter8_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        X_I_address1 = X_I_addr_1_reg_464_pp0_iter1_reg.read();
    } else {
        X_I_address1 = "XXXXXXXXXX";
    }
}

void fft::thread_X_I_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        X_I_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_ce0 = grp_bit_reverse_fu_217_X_I_ce0.read();
    } else {
        X_I_ce0 = ap_const_logic_0;
    }
}

void fft::thread_X_I_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read())))) {
        X_I_ce1 = ap_const_logic_1;
    } else {
        X_I_ce1 = ap_const_logic_0;
    }
}

void fft::thread_X_I_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        X_I_d0 = tmp_6_reg_528.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_d0 = grp_bit_reverse_fu_217_X_I_d0.read();
    } else {
        X_I_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_X_I_d1() {
    X_I_d1 = tmp_11_reg_543.read();
}

void fft::thread_X_I_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter4_reg.read()))) {
        X_I_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_I_we0 = grp_bit_reverse_fu_217_X_I_we0.read();
    } else {
        X_I_we0 = ap_const_logic_0;
    }
}

void fft::thread_X_I_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter8_reg.read()))) {
        X_I_we1 = ap_const_logic_1;
    } else {
        X_I_we1 = ap_const_logic_0;
    }
}

void fft::thread_X_R_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        X_R_address0 = X_R_addr_1_reg_458_pp0_iter6_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        X_R_address0 = X_R_addr_reg_448_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        X_R_address0 =  (sc_lv<10>) (sext_ln65_fu_343_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_address0 = grp_bit_reverse_fu_217_X_R_address0.read();
    } else {
        X_R_address0 = "XXXXXXXXXX";
    }
}

void fft::thread_X_R_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        X_R_address1 = X_R_addr_1_reg_458_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        X_R_address1 = X_R_addr_1_reg_458_pp0_iter1_reg.read();
    } else {
        X_R_address1 = "XXXXXXXXXX";
    }
}

void fft::thread_X_R_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        X_R_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_ce0 = grp_bit_reverse_fu_217_X_R_ce0.read();
    } else {
        X_R_ce0 = ap_const_logic_0;
    }
}

void fft::thread_X_R_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        X_R_ce1 = ap_const_logic_1;
    } else {
        X_R_ce1 = ap_const_logic_0;
    }
}

void fft::thread_X_R_d0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)))) {
        X_R_d0 = reg_262.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_d0 = grp_bit_reverse_fu_217_X_R_d0.read();
    } else {
        X_R_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_X_R_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter4_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter6_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        X_R_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        X_R_we0 = grp_bit_reverse_fu_217_X_R_we0.read();
    } else {
        X_R_we0 = ap_const_logic_0;
    }
}

void fft::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[35];
}

void fft::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[36];
}

void fft::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[37];
}

void fft::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fft::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fft::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void fft::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void fft::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fft::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void fft::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void fft::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void fft::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void fft::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void fft::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void fft::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fft::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[38];
}

void fft::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void fft::thread_ap_block_pp0() {
    ap_block_pp0 = ((esl_seteq<1,39,39>(ap_ST_fsm_pp0_stage0, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp0_stage0_subdone.read())) || (esl_seteq<1,39,39>(ap_ST_fsm_pp0_stage1, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp0_stage1_subdone.read())) || (esl_seteq<1,39,39>(ap_ST_fsm_pp0_stage2, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp0_stage2_subdone.read())));
}

void fft::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage1_00001() {
    ap_block_pp0_stage1_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage2_00001() {
    ap_block_pp0_stage2_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state33_on_subcall_done() {
    ap_block_state33_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_sin_or_cos_double_s_fu_179_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_sin_or_cos_double_s_fu_198_ap_done.read()));
}

void fft::thread_ap_block_state36_pp0_stage0_iter0() {
    ap_block_state36_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state37_pp0_stage1_iter0() {
    ap_block_state37_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state38_pp0_stage2_iter0() {
    ap_block_state38_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state39_pp0_stage0_iter1() {
    ap_block_state39_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state40_pp0_stage1_iter1() {
    ap_block_state40_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state41_pp0_stage2_iter1() {
    ap_block_state41_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state42_pp0_stage0_iter2() {
    ap_block_state42_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state43_pp0_stage1_iter2() {
    ap_block_state43_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state44_pp0_stage2_iter2() {
    ap_block_state44_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state45_pp0_stage0_iter3() {
    ap_block_state45_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state46_pp0_stage1_iter3() {
    ap_block_state46_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state47_pp0_stage2_iter3() {
    ap_block_state47_pp0_stage2_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state48_pp0_stage0_iter4() {
    ap_block_state48_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state49_pp0_stage1_iter4() {
    ap_block_state49_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state50_pp0_stage2_iter4() {
    ap_block_state50_pp0_stage2_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state51_pp0_stage0_iter5() {
    ap_block_state51_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state52_pp0_stage1_iter5() {
    ap_block_state52_pp0_stage1_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state53_pp0_stage2_iter5() {
    ap_block_state53_pp0_stage2_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state54_pp0_stage0_iter6() {
    ap_block_state54_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state55_pp0_stage1_iter6() {
    ap_block_state55_pp0_stage1_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state56_pp0_stage2_iter6() {
    ap_block_state56_pp0_stage2_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state57_pp0_stage0_iter7() {
    ap_block_state57_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state58_pp0_stage1_iter7() {
    ap_block_state58_pp0_stage1_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state59_pp0_stage2_iter7() {
    ap_block_state59_pp0_stage2_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state60_pp0_stage0_iter8() {
    ap_block_state60_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_block_state61_pp0_stage1_iter8() {
    ap_block_state61_pp0_stage1_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fft::thread_ap_condition_pp0_exit_iter0_state36() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_332_p2.read())) {
        ap_condition_pp0_exit_iter0_state36 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state36 = ap_const_logic_0;
    }
}

void fft::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln50_fu_267_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fft::thread_ap_enable_operation_144() {
    ap_enable_operation_144 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_fu_332_p2.read());
}

void fft::thread_ap_enable_operation_146() {
    ap_enable_operation_146 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_fu_332_p2.read());
}

void fft::thread_ap_enable_operation_151() {
    ap_enable_operation_151 = esl_seteq<1,1,1>(icmp_ln63_reg_444.read(), ap_const_lv1_1);
}

void fft::thread_ap_enable_operation_152() {
    ap_enable_operation_152 = esl_seteq<1,1,1>(icmp_ln63_reg_444.read(), ap_const_lv1_1);
}

void fft::thread_ap_enable_operation_168() {
    ap_enable_operation_168 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter1_reg.read());
}

void fft::thread_ap_enable_operation_169() {
    ap_enable_operation_169 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter1_reg.read());
}

void fft::thread_ap_enable_operation_172() {
    ap_enable_operation_172 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter2_reg.read());
}

void fft::thread_ap_enable_operation_173() {
    ap_enable_operation_173 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter2_reg.read());
}

void fft::thread_ap_enable_operation_184() {
    ap_enable_operation_184 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter4_reg.read());
}

void fft::thread_ap_enable_operation_186() {
    ap_enable_operation_186 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter4_reg.read());
}

void fft::thread_ap_enable_operation_187() {
    ap_enable_operation_187 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter4_reg.read());
}

void fft::thread_ap_enable_operation_188() {
    ap_enable_operation_188 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter4_reg.read());
}

void fft::thread_ap_enable_operation_190() {
    ap_enable_operation_190 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter5_reg.read());
}

void fft::thread_ap_enable_operation_192() {
    ap_enable_operation_192 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter5_reg.read());
}

void fft::thread_ap_enable_operation_195() {
    ap_enable_operation_195 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter6_reg.read());
}

void fft::thread_ap_enable_operation_204() {
    ap_enable_operation_204 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter8_reg.read());
}

void fft::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void fft::thread_ap_enable_state36_pp0_iter0_stage0() {
    ap_enable_state36_pp0_iter0_stage0 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1));
}

void fft::thread_ap_enable_state37_pp0_iter0_stage1() {
    ap_enable_state37_pp0_iter0_stage1 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage1.read(), ap_const_logic_1));
}

void fft::thread_ap_enable_state42_pp0_iter2_stage0() {
    ap_enable_state42_pp0_iter2_stage0 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1));
}

void fft::thread_ap_enable_state43_pp0_iter2_stage1() {
    ap_enable_state43_pp0_iter2_stage1 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1));
}

void fft::thread_ap_enable_state49_pp0_iter4_stage1() {
    ap_enable_state49_pp0_iter4_stage1 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1));
}

void fft::thread_ap_enable_state50_pp0_iter4_stage2() {
    ap_enable_state50_pp0_iter4_stage2 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage2.read(), ap_const_logic_1));
}

void fft::thread_ap_enable_state51_pp0_iter5_stage0() {
    ap_enable_state51_pp0_iter5_stage0 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_1));
}

void fft::thread_ap_enable_state52_pp0_iter5_stage1() {
    ap_enable_state52_pp0_iter5_stage1 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_1));
}

void fft::thread_ap_enable_state53_pp0_iter5_stage2() {
    ap_enable_state53_pp0_iter5_stage2 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage2.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_1));
}

void fft::thread_ap_enable_state56_pp0_iter6_stage2() {
    ap_enable_state56_pp0_iter6_stage2 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter6.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage2.read(), ap_const_logic_1));
}

void fft::thread_ap_enable_state61_pp0_iter8_stage1() {
    ap_enable_state61_pp0_iter8_stage1 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter8.read(), ap_const_logic_1));
}

void fft::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fft::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void fft::thread_ap_phi_mux_i_0_phi_fu_173_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln63_reg_444.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_173_p4 = i_3_reg_470.read();
    } else {
        ap_phi_mux_i_0_phi_fu_173_p4 = i_0_reg_170.read();
    }
}

void fft::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln50_fu_267_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fft::thread_grp_bit_reverse_fu_217_ap_start() {
    grp_bit_reverse_fu_217_ap_start = grp_bit_reverse_fu_217_ap_start_reg.read();
}

void fft::thread_grp_fu_225_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(ap_block_state33_on_subcall_done.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        grp_fu_225_ce = ap_const_logic_1;
    } else {
        grp_fu_225_ce = ap_const_logic_0;
    }
}

void fft::thread_grp_fu_225_opcode() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_00001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(icmp_ln63_reg_444_pp0_iter3_reg.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_00001.read(), ap_const_boolean_0)))) {
        grp_fu_225_opcode = ap_const_lv2_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln57_fu_301_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter1_reg.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_00001.read(), ap_const_boolean_0)))) {
        grp_fu_225_opcode = ap_const_lv2_0;
    } else {
        grp_fu_225_opcode =  (sc_lv<2>) ("XX");
    }
}

void fft::thread_grp_fu_225_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = X_I_load_1_reg_512.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = tmp_9_reg_497.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = tmp_7_reg_487.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_225_p0 = a_0_reg_158.read();
    } else {
        grp_fu_225_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_225_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = temp_I_reg_522.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = tmp_s_reg_502.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = tmp_8_reg_492.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_225_p1 = e_reg_390.read();
    } else {
        grp_fu_225_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_230_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_00001.read(), ap_const_boolean_0))) {
        grp_fu_230_opcode = ap_const_lv2_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter5_reg.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1_00001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln63_reg_444_pp0_iter6_reg.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage2_00001.read(), ap_const_boolean_0)))) {
        grp_fu_230_opcode = ap_const_lv2_0;
    } else {
        grp_fu_230_opcode =  (sc_lv<2>) ("XX");
    }
}

void fft::thread_grp_fu_230_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_230_p0 = X_I_load_2_reg_538.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_230_p0 = X_R_load_2_reg_533.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_230_p0 = X_R_load_1_reg_507.read();
    } else {
        grp_fu_230_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_230_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_230_p1 = temp_I_reg_522_pp0_iter6_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_230_p1 = temp_R_reg_517_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_230_p1 = temp_R_reg_517.read();
    } else {
        grp_fu_230_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_234_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_234_p0 = X_I_load_reg_481.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_234_p0 = X_R_load_reg_475.read();
    } else {
        grp_fu_234_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_238_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_238_p0 = X_R_load_reg_475.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_238_p0 = X_I_load_reg_481.read();
    } else {
        grp_fu_238_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_242_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_fu_242_p0 = tmp_i_i_reg_414.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_242_p0 = tmp_2_reg_380.read();
    } else {
        grp_fu_242_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void fft::thread_grp_fu_259_p0() {
    grp_fu_259_p0 = esl_zext<32,11>(DFTpts_fu_277_p2.read());
}

void fft::thread_grp_sin_or_cos_double_s_fu_179_ap_start() {
    grp_sin_or_cos_double_s_fu_179_ap_start = grp_sin_or_cos_double_s_fu_179_ap_start_reg.read();
}

void fft::thread_grp_sin_or_cos_double_s_fu_179_do_cos() {
    grp_sin_or_cos_double_s_fu_179_do_cos =  (sc_logic) (ap_const_lv1_1[0]);
}

void fft::thread_grp_sin_or_cos_double_s_fu_198_ap_start() {
    grp_sin_or_cos_double_s_fu_198_ap_start = grp_sin_or_cos_double_s_fu_198_ap_start_reg.read();
}

void fft::thread_grp_sin_or_cos_double_s_fu_198_do_cos() {
    grp_sin_or_cos_double_s_fu_198_do_cos =  (sc_logic) (ap_const_lv1_0[0]);
}

void fft::thread_i_3_fu_355_p2() {
    i_3_fu_355_p2 = (!zext_ln51_reg_363.read().is_01() || !ap_phi_mux_i_0_phi_fu_173_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(zext_ln51_reg_363.read()) + sc_bigint<32>(ap_phi_mux_i_0_phi_fu_173_p4.read()));
}

void fft::thread_i_lower_fu_338_p2() {
    i_lower_fu_338_p2 = (!ap_phi_mux_i_0_phi_fu_173_p4.read().is_01() || !numBF_reg_385.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_phi_mux_i_0_phi_fu_173_p4.read()) + sc_biguint<32>(numBF_reg_385.read()));
}

void fft::thread_icmp_ln50_fu_267_p2() {
    icmp_ln50_fu_267_p2 = (!stage_0_reg_134.read().is_01() || !ap_const_lv4_B.is_01())? sc_lv<1>(): sc_lv<1>(stage_0_reg_134.read() == ap_const_lv4_B);
}

void fft::thread_icmp_ln57_fu_301_p2() {
    icmp_ln57_fu_301_p2 = (!i_reg_146.read().is_01() || !trunc_ln_reg_369.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_146.read() == trunc_ln_reg_369.read());
}

void fft::thread_icmp_ln63_fu_332_p2() {
    icmp_ln63_fu_332_p2 = (!tmp_12_fu_322_p4.read().is_01() || !ap_const_lv22_1.is_01())? sc_lv<1>(): (sc_bigint<22>(tmp_12_fu_322_p4.read()) < sc_bigint<22>(ap_const_lv22_1));
}

void fft::thread_j_fu_306_p2() {
    j_fu_306_p2 = (!i_reg_146.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_146.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void fft::thread_numBF_fu_298_p1() {
    numBF_fu_298_p1 = esl_zext<32,10>(trunc_ln_reg_369.read());
}

void fft::thread_sext_ln65_fu_343_p1() {
    sext_ln65_fu_343_p1 = esl_sext<64,32>(i_lower_fu_338_p2.read());
}

void fft::thread_sext_ln67_fu_349_p1() {
    sext_ln67_fu_349_p1 = esl_sext<64,32>(ap_phi_mux_i_0_phi_fu_173_p4.read());
}

void fft::thread_stage_fu_312_p2() {
    stage_fu_312_p2 = (!stage_0_reg_134.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(stage_0_reg_134.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void fft::thread_tmp_12_fu_322_p4() {
    tmp_12_fu_322_p4 = ap_phi_mux_i_0_phi_fu_173_p4.read().range(31, 10);
}

void fft::thread_zext_ln50_fu_273_p1() {
    zext_ln50_fu_273_p1 = esl_zext<11,4>(stage_0_reg_134.read());
}

void fft::thread_zext_ln51_fu_283_p1() {
    zext_ln51_fu_283_p1 = esl_zext<32,11>(DFTpts_fu_277_p2.read());
}

void fft::thread_zext_ln57_fu_318_p1() {
    zext_ln57_fu_318_p1 = esl_zext<32,10>(i_reg_146.read());
}

void fft::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_bit_reverse_fu_217_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln50_fu_267_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln57_fu_301_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(ap_block_state33_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state34;
            } else {
                ap_NS_fsm = ap_ST_fsm_state33;
            }
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 34359738368 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_332_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_332_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state62;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 68719476736 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state62;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 137438953472 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<39>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void fft::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_R_address0\" :  \"" << X_R_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_R_ce0\" :  \"" << X_R_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_R_we0\" :  \"" << X_R_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_R_d0\" :  \"" << X_R_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"X_R_q0\" :  \"" << X_R_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_R_address1\" :  \"" << X_R_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_R_ce1\" :  \"" << X_R_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"X_R_q1\" :  \"" << X_R_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_I_address0\" :  \"" << X_I_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_I_ce0\" :  \"" << X_I_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_I_we0\" :  \"" << X_I_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_I_d0\" :  \"" << X_I_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"X_I_q0\" :  \"" << X_I_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_I_address1\" :  \"" << X_I_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_I_ce1\" :  \"" << X_I_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_I_we1\" :  \"" << X_I_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_I_d1\" :  \"" << X_I_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"X_I_q1\" :  \"" << X_I_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

