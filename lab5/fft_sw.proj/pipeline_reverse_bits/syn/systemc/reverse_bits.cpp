// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "reverse_bits.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic reverse_bits::ap_const_logic_1 = sc_dt::Log_1;
const bool reverse_bits::ap_const_boolean_1 = true;
const sc_lv<32> reverse_bits::ap_const_lv32_9 = "1001";
const sc_lv<32> reverse_bits::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_logic reverse_bits::ap_const_logic_0 = sc_dt::Log_0;

reverse_bits::reverse_bits(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( input_r );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "reverse_bits_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r, "(port)input_r");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif

    }
}

reverse_bits::~reverse_bits() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void reverse_bits::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void reverse_bits::thread_ap_return() {
    ap_return = input_r.read().range(0, 9);
}

}

