-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fft_stage_127_W_icud_rom is 
    generic(
             DWIDTH     : integer := 12; 
             AWIDTH     : integer := 9; 
             MEM_SIZE    : integer := 512
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fft_stage_127_W_icud_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "000000000000", 1 => "111111110011", 2 => "111111100110", 
    3 => "111111011010", 4 => "111111001101", 5 => "111111000001", 
    6 => "111110110100", 7 => "111110101000", 8 => "111110011011", 
    9 => "111110001110", 10 => "111110000010", 11 => "111101110101", 
    12 => "111101101001", 13 => "111101011100", 14 => "111101010000", 
    15 => "111101000011", 16 => "111100110111", 17 => "111100101010", 
    18 => "111100011110", 19 => "111100010001", 20 => "111100000101", 
    21 => "111011111000", 22 => "111011101100", 23 => "111011011111", 
    24 => "111011010011", 25 => "111011000111", 26 => "111010111010", 
    27 => "111010101110", 28 => "111010100001", 29 => "111010010101", 
    30 => "111010001001", 31 => "111001111100", 32 => "111001110000", 
    33 => "111001100100", 34 => "111001010111", 35 => "111001001011", 
    36 => "111000111111", 37 => "111000110011", 38 => "111000100110", 
    39 => "111000011010", 40 => "111000001110", 41 => "111000000010", 
    42 => "110111110110", 43 => "110111101001", 44 => "110111011101", 
    45 => "110111010001", 46 => "110111000101", 47 => "110110111001", 
    48 => "110110101101", 49 => "110110100001", 50 => "110110010101", 
    51 => "110110001001", 52 => "110101111101", 53 => "110101110001", 
    54 => "110101100101", 55 => "110101011001", 56 => "110101001110", 
    57 => "110101000010", 58 => "110100110110", 59 => "110100101010", 
    60 => "110100011110", 61 => "110100010011", 62 => "110100000111", 
    63 => "110011111011", 64 => "110011110000", 65 => "110011100100", 
    66 => "110011011001", 67 => "110011001101", 68 => "110011000010", 
    69 => "110010110110", 70 => "110010101011", 71 => "110010011111", 
    72 => "110010010100", 73 => "110010001001", 74 => "110001111101", 
    75 => "110001110010", 76 => "110001100111", 77 => "110001011011", 
    78 => "110001010000", 79 => "110001000101", 80 => "110000111010", 
    81 => "110000101111", 82 => "110000100100", 83 => "110000011001", 
    84 => "110000001110", 85 => "110000000011", 86 => "101111111000", 
    87 => "101111101101", 88 => "101111100011", 89 => "101111011000", 
    90 => "101111001101", 91 => "101111000010", 92 => "101110111000", 
    93 => "101110101101", 94 => "101110100011", 95 => "101110011000", 
    96 => "101110001110", 97 => "101110000011", 98 => "101101111001", 
    99 => "101101101111", 100 => "101101100100", 101 => "101101011010", 
    102 => "101101010000", 103 => "101101000110", 104 => "101100111100", 
    105 => "101100110001", 106 => "101100100111", 107 => "101100011101", 
    108 => "101100010100", 109 => "101100001010", 110 => "101100000000", 
    111 => "101011110110", 112 => "101011101100", 113 => "101011100011", 
    114 => "101011011001", 115 => "101011001111", 116 => "101011000110", 
    117 => "101010111100", 118 => "101010110011", 119 => "101010101001", 
    120 => "101010100000", 121 => "101010010111", 122 => "101010001110", 
    123 => "101010000100", 124 => "101001111011", 125 => "101001110010", 
    126 => "101001101001", 127 => "101001100000", 128 => "101001010111", 
    129 => "101001001110", 130 => "101001000110", 131 => "101000111101", 
    132 => "101000110100", 133 => "101000101100", 134 => "101000100011", 
    135 => "101000011010", 136 => "101000010010", 137 => "101000001010", 
    138 => "101000000001", 139 => "100111111001", 140 => "100111110001", 
    141 => "100111101001", 142 => "100111100000", 143 => "100111011000", 
    144 => "100111010000", 145 => "100111001000", 146 => "100111000001", 
    147 => "100110111001", 148 => "100110110001", 149 => "100110101001", 
    150 => "100110100010", 151 => "100110011010", 152 => "100110010011", 
    153 => "100110001011", 154 => "100110000100", 155 => "100101111100", 
    156 => "100101110101", 157 => "100101101110", 158 => "100101100111", 
    159 => "100101100000", 160 => "100101011001", 161 => "100101010010", 
    162 => "100101001011", 163 => "100101000100", 164 => "100100111101", 
    165 => "100100110111", 166 => "100100110000", 167 => "100100101001", 
    168 => "100100100011", 169 => "100100011100", 170 => "100100010110", 
    171 => "100100010000", 172 => "100100001010", 173 => "100100000011", 
    174 => "100011111101", 175 => "100011110111", 176 => "100011110001", 
    177 => "100011101011", 178 => "100011100110", 179 => "100011100000", 
    180 => "100011011010", 181 => "100011010101", 182 => "100011001111", 
    183 => "100011001010", 184 => "100011000100", 185 => "100010111111", 
    186 => "100010111010", 187 => "100010110100", 188 => "100010101111", 
    189 => "100010101010", 190 => "100010100101", 191 => "100010100000", 
    192 => "100010011011", 193 => "100010010111", 194 => "100010010010", 
    195 => "100010001101", 196 => "100010001001", 197 => "100010000100", 
    198 => "100010000000", 199 => "100001111011", 200 => "100001110111", 
    201 => "100001110011", 202 => "100001101111", 203 => "100001101011", 
    204 => "100001100111", 205 => "100001100011", 206 => "100001011111", 
    207 => "100001011011", 208 => "100001011000", 209 => "100001010100", 
    210 => "100001010001", 211 => "100001001101", 212 => "100001001010", 
    213 => "100001000110", 214 => "100001000011", 215 => "100001000000", 
    216 => "100000111101", 217 => "100000111010", 218 => "100000110111", 
    219 => "100000110100", 220 => "100000110001", 221 => "100000101111", 
    222 => "100000101100", 223 => "100000101001", 224 => "100000100111", 
    225 => "100000100100", 226 => "100000100010", 227 => "100000100000", 
    228 => "100000011110", 229 => "100000011100", 230 => "100000011010", 
    231 => "100000011000", 232 => "100000010110", 233 => "100000010100", 
    234 => "100000010010", 235 => "100000010000", 236 => "100000001111", 
    237 => "100000001101", 238 => "100000001100", 239 => "100000001011", 
    240 => "100000001001", 241 => "100000001000", 242 => "100000000111", 
    243 => "100000000110", 244 => "100000000101", 245 => "100000000100", 
    246 to 247=> "100000000011", 248 => "100000000010", 249 to 250=> "100000000001", 
    251 to 261=> "100000000000", 262 to 263=> "100000000001", 264 => "100000000010", 
    265 to 266=> "100000000011", 267 => "100000000100", 268 => "100000000101", 
    269 => "100000000110", 270 => "100000000111", 271 => "100000001000", 
    272 => "100000001001", 273 => "100000001011", 274 => "100000001100", 
    275 => "100000001101", 276 => "100000001111", 277 => "100000010000", 
    278 => "100000010010", 279 => "100000010100", 280 => "100000010110", 
    281 => "100000011000", 282 => "100000011010", 283 => "100000011100", 
    284 => "100000011110", 285 => "100000100000", 286 => "100000100010", 
    287 => "100000100100", 288 => "100000100111", 289 => "100000101001", 
    290 => "100000101100", 291 => "100000101111", 292 => "100000110001", 
    293 => "100000110100", 294 => "100000110111", 295 => "100000111010", 
    296 => "100000111101", 297 => "100001000000", 298 => "100001000011", 
    299 => "100001000110", 300 => "100001001010", 301 => "100001001101", 
    302 => "100001010001", 303 => "100001010100", 304 => "100001011000", 
    305 => "100001011011", 306 => "100001011111", 307 => "100001100011", 
    308 => "100001100111", 309 => "100001101011", 310 => "100001101111", 
    311 => "100001110011", 312 => "100001110111", 313 => "100001111011", 
    314 => "100010000000", 315 => "100010000100", 316 => "100010001001", 
    317 => "100010001101", 318 => "100010010010", 319 => "100010010111", 
    320 => "100010011011", 321 => "100010100000", 322 => "100010100101", 
    323 => "100010101010", 324 => "100010101111", 325 => "100010110100", 
    326 => "100010111010", 327 => "100010111111", 328 => "100011000100", 
    329 => "100011001010", 330 => "100011001111", 331 => "100011010101", 
    332 => "100011011010", 333 => "100011100000", 334 => "100011100110", 
    335 => "100011101011", 336 => "100011110001", 337 => "100011110111", 
    338 => "100011111101", 339 => "100100000011", 340 => "100100001010", 
    341 => "100100010000", 342 => "100100010110", 343 => "100100011100", 
    344 => "100100100011", 345 => "100100101001", 346 => "100100110000", 
    347 => "100100110111", 348 => "100100111101", 349 => "100101000100", 
    350 => "100101001011", 351 => "100101010010", 352 => "100101011001", 
    353 => "100101100000", 354 => "100101100111", 355 => "100101101110", 
    356 => "100101110101", 357 => "100101111100", 358 => "100110000100", 
    359 => "100110001011", 360 => "100110010011", 361 => "100110011010", 
    362 => "100110100010", 363 => "100110101001", 364 => "100110110001", 
    365 => "100110111001", 366 => "100111000001", 367 => "100111001000", 
    368 => "100111010000", 369 => "100111011000", 370 => "100111100000", 
    371 => "100111101001", 372 => "100111110001", 373 => "100111111001", 
    374 => "101000000001", 375 => "101000001010", 376 => "101000010010", 
    377 => "101000011010", 378 => "101000100011", 379 => "101000101100", 
    380 => "101000110100", 381 => "101000111101", 382 => "101001000110", 
    383 => "101001001110", 384 => "101001010111", 385 => "101001100000", 
    386 => "101001101001", 387 => "101001110010", 388 => "101001111011", 
    389 => "101010000100", 390 => "101010001110", 391 => "101010010111", 
    392 => "101010100000", 393 => "101010101001", 394 => "101010110011", 
    395 => "101010111100", 396 => "101011000110", 397 => "101011001111", 
    398 => "101011011001", 399 => "101011100011", 400 => "101011101100", 
    401 => "101011110110", 402 => "101100000000", 403 => "101100001010", 
    404 => "101100010100", 405 => "101100011101", 406 => "101100100111", 
    407 => "101100110001", 408 => "101100111100", 409 => "101101000110", 
    410 => "101101010000", 411 => "101101011010", 412 => "101101100100", 
    413 => "101101101111", 414 => "101101111001", 415 => "101110000011", 
    416 => "101110001110", 417 => "101110011000", 418 => "101110100011", 
    419 => "101110101101", 420 => "101110111000", 421 => "101111000010", 
    422 => "101111001101", 423 => "101111011000", 424 => "101111100011", 
    425 => "101111101101", 426 => "101111111000", 427 => "110000000011", 
    428 => "110000001110", 429 => "110000011001", 430 => "110000100100", 
    431 => "110000101111", 432 => "110000111010", 433 => "110001000101", 
    434 => "110001010000", 435 => "110001011011", 436 => "110001100111", 
    437 => "110001110010", 438 => "110001111101", 439 => "110010001001", 
    440 => "110010010100", 441 => "110010011111", 442 => "110010101011", 
    443 => "110010110110", 444 => "110011000010", 445 => "110011001101", 
    446 => "110011011001", 447 => "110011100100", 448 => "110011110000", 
    449 => "110011111011", 450 => "110100000111", 451 => "110100010011", 
    452 => "110100011110", 453 => "110100101010", 454 => "110100110110", 
    455 => "110101000010", 456 => "110101001110", 457 => "110101011001", 
    458 => "110101100101", 459 => "110101110001", 460 => "110101111101", 
    461 => "110110001001", 462 => "110110010101", 463 => "110110100001", 
    464 => "110110101101", 465 => "110110111001", 466 => "110111000101", 
    467 => "110111010001", 468 => "110111011101", 469 => "110111101001", 
    470 => "110111110110", 471 => "111000000010", 472 => "111000001110", 
    473 => "111000011010", 474 => "111000100110", 475 => "111000110011", 
    476 => "111000111111", 477 => "111001001011", 478 => "111001010111", 
    479 => "111001100100", 480 => "111001110000", 481 => "111001111100", 
    482 => "111010001001", 483 => "111010010101", 484 => "111010100001", 
    485 => "111010101110", 486 => "111010111010", 487 => "111011000111", 
    488 => "111011010011", 489 => "111011011111", 490 => "111011101100", 
    491 => "111011111000", 492 => "111100000101", 493 => "111100010001", 
    494 => "111100011110", 495 => "111100101010", 496 => "111100110111", 
    497 => "111101000011", 498 => "111101010000", 499 => "111101011100", 
    500 => "111101101001", 501 => "111101110101", 502 => "111110000010", 
    503 => "111110001110", 504 => "111110011011", 505 => "111110101000", 
    506 => "111110110100", 507 => "111111000001", 508 => "111111001101", 
    509 => "111111011010", 510 => "111111100110", 511 => "111111110011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity fft_stage_127_W_icud is
    generic (
        DataWidth : INTEGER := 12;
        AddressRange : INTEGER := 512;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fft_stage_127_W_icud is
    component fft_stage_127_W_icud_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fft_stage_127_W_icud_rom_U :  component fft_stage_127_W_icud_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


