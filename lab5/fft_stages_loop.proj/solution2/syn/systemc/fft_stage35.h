// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fft_stage35_HH_
#define _fft_stage35_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fft_streaming_mulxdS.h"
#include "fft_streaming_macyd2.h"
#include "fft_streaming_maczec.h"
#include "fft_streaming_mulAem.h"
#include "fft_stage_127_W_rbkb.h"
#include "fft_stage_127_W_icud.h"

namespace ap_rtl {

struct fft_stage35 : public sc_module {
    // Port declarations 35
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > X_R_V9_address0;
    sc_out< sc_logic > X_R_V9_ce0;
    sc_in< sc_lv<22> > X_R_V9_q0;
    sc_out< sc_lv<10> > X_R_V9_address1;
    sc_out< sc_logic > X_R_V9_ce1;
    sc_in< sc_lv<22> > X_R_V9_q1;
    sc_out< sc_lv<10> > X_I_V18_address0;
    sc_out< sc_logic > X_I_V18_ce0;
    sc_in< sc_lv<22> > X_I_V18_q0;
    sc_out< sc_lv<10> > X_I_V18_address1;
    sc_out< sc_logic > X_I_V18_ce1;
    sc_in< sc_lv<22> > X_I_V18_q1;
    sc_out< sc_lv<10> > Out_R_V_address0;
    sc_out< sc_logic > Out_R_V_ce0;
    sc_out< sc_logic > Out_R_V_we0;
    sc_out< sc_lv<22> > Out_R_V_d0;
    sc_out< sc_lv<10> > Out_R_V_address1;
    sc_out< sc_logic > Out_R_V_ce1;
    sc_out< sc_logic > Out_R_V_we1;
    sc_out< sc_lv<22> > Out_R_V_d1;
    sc_out< sc_lv<10> > Out_I_V_address0;
    sc_out< sc_logic > Out_I_V_ce0;
    sc_out< sc_logic > Out_I_V_we0;
    sc_out< sc_lv<22> > Out_I_V_d0;
    sc_out< sc_lv<10> > Out_I_V_address1;
    sc_out< sc_logic > Out_I_V_ce1;
    sc_out< sc_logic > Out_I_V_we1;
    sc_out< sc_lv<22> > Out_I_V_d1;


    // Module declarations
    fft_stage35(sc_module_name name);
    SC_HAS_PROCESS(fft_stage35);

    ~fft_stage35();

    sc_trace_file* mVcdFile;

    fft_stage_127_W_rbkb* W_real_V62_U;
    fft_stage_127_W_icud* W_imag_V54_U;
    fft_streaming_mulxdS<1,1,22,13,33>* fft_streaming_mulxdS_U79;
    fft_streaming_macyd2<1,1,22,12,33,33>* fft_streaming_macyd2_U80;
    fft_streaming_maczec<1,1,22,13,33,33>* fft_streaming_maczec_U81;
    fft_streaming_mulAem<1,1,22,12,33>* fft_streaming_mulAem_U82;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > W_real_V62_address0;
    sc_signal< sc_logic > W_real_V62_ce0;
    sc_signal< sc_lv<13> > W_real_V62_q0;
    sc_signal< sc_lv<9> > W_imag_V54_address0;
    sc_signal< sc_logic > W_imag_V54_ce0;
    sc_signal< sc_lv<12> > W_imag_V54_q0;
    sc_signal< sc_lv<10> > i_reg_176;
    sc_signal< sc_lv<1> > icmp_ln47_fu_187_p2;
    sc_signal< sc_lv<1> > icmp_ln47_reg_305;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln47_reg_305_pp0_iter1_reg;
    sc_signal< sc_lv<10> > j_fu_193_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > zext_ln55_fu_199_p1;
    sc_signal< sc_lv<64> > zext_ln55_reg_314;
    sc_signal< sc_lv<64> > zext_ln55_reg_314_pp0_iter1_reg;
    sc_signal< sc_lv<64> > zext_ln58_fu_211_p1;
    sc_signal< sc_lv<64> > zext_ln58_reg_332;
    sc_signal< sc_lv<64> > zext_ln58_reg_332_pp0_iter1_reg;
    sc_signal< sc_lv<13> > c_V_reg_344;
    sc_signal< sc_lv<12> > s_V_reg_349;
    sc_signal< sc_lv<22> > X_R_V9_load_reg_354;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<10> > i_lower_fu_205_p2;
    sc_signal< sc_lv<33> > grp_fu_281_p3;
    sc_signal< sc_lv<33> > grp_fu_290_p3;
    sc_signal< sc_lv<22> > temp_R_V_fu_229_p4;
    sc_signal< sc_lv<22> > temp_I_V_fu_238_p4;
    sc_signal< sc_lv<22> > mul_ln700_fu_275_p0;
    sc_signal< sc_lv<33> > sext_ln1118_fu_216_p1;
    sc_signal< sc_lv<13> > mul_ln700_fu_275_p1;
    sc_signal< sc_lv<33> > sext_ln1118_1_fu_219_p1;
    sc_signal< sc_lv<22> > grp_fu_281_p0;
    sc_signal< sc_lv<33> > sext_ln1118_2_fu_222_p1;
    sc_signal< sc_lv<12> > grp_fu_281_p1;
    sc_signal< sc_lv<33> > sext_ln1118_3_fu_226_p1;
    sc_signal< sc_lv<33> > mul_ln700_fu_275_p2;
    sc_signal< sc_lv<22> > grp_fu_290_p0;
    sc_signal< sc_lv<13> > grp_fu_290_p1;
    sc_signal< sc_lv<33> > mul_ln1192_fu_298_p2;
    sc_signal< sc_lv<22> > mul_ln1192_fu_298_p0;
    sc_signal< sc_lv<12> > mul_ln1192_fu_298_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Out_I_V_address0();
    void thread_Out_I_V_address1();
    void thread_Out_I_V_ce0();
    void thread_Out_I_V_ce1();
    void thread_Out_I_V_d0();
    void thread_Out_I_V_d1();
    void thread_Out_I_V_we0();
    void thread_Out_I_V_we1();
    void thread_Out_R_V_address0();
    void thread_Out_R_V_address1();
    void thread_Out_R_V_ce0();
    void thread_Out_R_V_ce1();
    void thread_Out_R_V_d0();
    void thread_Out_R_V_d1();
    void thread_Out_R_V_we0();
    void thread_Out_R_V_we1();
    void thread_W_imag_V54_address0();
    void thread_W_imag_V54_ce0();
    void thread_W_real_V62_address0();
    void thread_W_real_V62_ce0();
    void thread_X_I_V18_address0();
    void thread_X_I_V18_address1();
    void thread_X_I_V18_ce0();
    void thread_X_I_V18_ce1();
    void thread_X_R_V9_address0();
    void thread_X_R_V9_address1();
    void thread_X_R_V9_ce0();
    void thread_X_R_V9_ce1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_grp_fu_281_p0();
    void thread_grp_fu_281_p1();
    void thread_grp_fu_290_p0();
    void thread_grp_fu_290_p1();
    void thread_i_lower_fu_205_p2();
    void thread_icmp_ln47_fu_187_p2();
    void thread_j_fu_193_p2();
    void thread_mul_ln1192_fu_298_p0();
    void thread_mul_ln1192_fu_298_p1();
    void thread_mul_ln700_fu_275_p0();
    void thread_mul_ln700_fu_275_p1();
    void thread_sext_ln1118_1_fu_219_p1();
    void thread_sext_ln1118_2_fu_222_p1();
    void thread_sext_ln1118_3_fu_226_p1();
    void thread_sext_ln1118_fu_216_p1();
    void thread_temp_I_V_fu_238_p4();
    void thread_temp_R_V_fu_229_p4();
    void thread_zext_ln55_fu_199_p1();
    void thread_zext_ln58_fu_211_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
