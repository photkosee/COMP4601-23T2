-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_streaming is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_R_V_ce0 : OUT STD_LOGIC;
    X_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_R_V_we0 : OUT STD_LOGIC;
    X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_R_V_ce1 : OUT STD_LOGIC;
    X_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
    X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_R_V_we1 : OUT STD_LOGIC;
    X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_I_V_ce0 : OUT STD_LOGIC;
    X_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_I_V_we0 : OUT STD_LOGIC;
    X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_I_V_ce1 : OUT STD_LOGIC;
    X_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
    X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_I_V_we1 : OUT STD_LOGIC;
    OUT_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    OUT_R_V_ce0 : OUT STD_LOGIC;
    OUT_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    OUT_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
    OUT_R_V_we0 : OUT STD_LOGIC;
    OUT_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    OUT_R_V_ce1 : OUT STD_LOGIC;
    OUT_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
    OUT_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
    OUT_R_V_we1 : OUT STD_LOGIC;
    OUT_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    OUT_I_V_ce0 : OUT STD_LOGIC;
    OUT_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    OUT_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
    OUT_I_V_we0 : OUT STD_LOGIC;
    OUT_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    OUT_I_V_ce1 : OUT STD_LOGIC;
    OUT_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
    OUT_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
    OUT_I_V_we1 : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of fft_streaming is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fft_streaming,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xqzu5ev-ffrb900-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.492125,HLS_SYN_LAT=6186,HLS_SYN_TPT=1028,HLS_SYN_MEM=58,HLS_SYN_DSP=36,HLS_SYN_FF=1193,HLS_SYN_LUT=3347,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal Stage_R_0_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_0_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_0_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_0_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_1_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_1_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_1_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_1_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_2_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_2_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_2_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_2_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_3_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_3_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_3_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_3_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_4_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_4_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_4_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_4_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_5_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_5_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_5_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_5_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_6_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_6_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_6_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_6_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_7_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_7_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_7_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_7_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_8_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_8_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_8_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_8_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_9_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_9_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_9_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_R_9_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_0_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_0_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_0_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_0_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_1_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_1_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_1_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_1_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_2_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_2_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_2_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_2_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_3_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_3_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_3_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_3_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_4_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_4_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_4_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_4_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_5_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_5_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_5_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_5_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_6_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_6_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_6_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_6_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_7_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_7_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_7_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_7_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_8_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_8_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_8_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_8_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_9_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_9_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_9_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage_I_9_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal bit_reverse25_U0_ap_start : STD_LOGIC;
    signal bit_reverse25_U0_ap_done : STD_LOGIC;
    signal bit_reverse25_U0_ap_continue : STD_LOGIC;
    signal bit_reverse25_U0_ap_idle : STD_LOGIC;
    signal bit_reverse25_U0_ap_ready : STD_LOGIC;
    signal bit_reverse25_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse25_U0_X_R_V_ce0 : STD_LOGIC;
    signal bit_reverse25_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse25_U0_X_R_V_ce1 : STD_LOGIC;
    signal bit_reverse25_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse25_U0_X_I_V_ce0 : STD_LOGIC;
    signal bit_reverse25_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse25_U0_X_I_V_ce1 : STD_LOGIC;
    signal bit_reverse25_U0_OUT_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse25_U0_OUT_R_V_ce0 : STD_LOGIC;
    signal bit_reverse25_U0_OUT_R_V_we0 : STD_LOGIC;
    signal bit_reverse25_U0_OUT_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal bit_reverse25_U0_OUT_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse25_U0_OUT_R_V_ce1 : STD_LOGIC;
    signal bit_reverse25_U0_OUT_R_V_we1 : STD_LOGIC;
    signal bit_reverse25_U0_OUT_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal bit_reverse25_U0_OUT_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse25_U0_OUT_I_V_ce0 : STD_LOGIC;
    signal bit_reverse25_U0_OUT_I_V_we0 : STD_LOGIC;
    signal bit_reverse25_U0_OUT_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal bit_reverse25_U0_OUT_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse25_U0_OUT_I_V_ce1 : STD_LOGIC;
    signal bit_reverse25_U0_OUT_I_V_we1 : STD_LOGIC;
    signal bit_reverse25_U0_OUT_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage_I_0_V : STD_LOGIC;
    signal bit_reverse25_U0_OUT_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_I_0_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_I_0_V : STD_LOGIC;
    signal ap_channel_done_Stage_R_0_V : STD_LOGIC;
    signal bit_reverse25_U0_OUT_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_R_0_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_R_0_V : STD_LOGIC;
    signal fft_stage_126_U0_ap_start : STD_LOGIC;
    signal fft_stage_126_U0_ap_done : STD_LOGIC;
    signal fft_stage_126_U0_ap_continue : STD_LOGIC;
    signal fft_stage_126_U0_ap_idle : STD_LOGIC;
    signal fft_stage_126_U0_ap_ready : STD_LOGIC;
    signal fft_stage_126_U0_X_R_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_126_U0_X_R_0_V_ce0 : STD_LOGIC;
    signal fft_stage_126_U0_X_R_0_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_126_U0_X_R_0_V_ce1 : STD_LOGIC;
    signal fft_stage_126_U0_X_I_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_126_U0_X_I_0_V_ce0 : STD_LOGIC;
    signal fft_stage_126_U0_X_I_0_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_126_U0_X_I_0_V_ce1 : STD_LOGIC;
    signal fft_stage_126_U0_Out_R_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_126_U0_Out_R_1_V_ce0 : STD_LOGIC;
    signal fft_stage_126_U0_Out_R_1_V_we0 : STD_LOGIC;
    signal fft_stage_126_U0_Out_R_1_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_126_U0_Out_R_1_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_126_U0_Out_R_1_V_ce1 : STD_LOGIC;
    signal fft_stage_126_U0_Out_R_1_V_we1 : STD_LOGIC;
    signal fft_stage_126_U0_Out_R_1_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_126_U0_Out_I_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_126_U0_Out_I_1_V_ce0 : STD_LOGIC;
    signal fft_stage_126_U0_Out_I_1_V_we0 : STD_LOGIC;
    signal fft_stage_126_U0_Out_I_1_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_126_U0_Out_I_1_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_126_U0_Out_I_1_V_ce1 : STD_LOGIC;
    signal fft_stage_126_U0_Out_I_1_V_we1 : STD_LOGIC;
    signal fft_stage_126_U0_Out_I_1_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage_I_1_V : STD_LOGIC;
    signal fft_stage_126_U0_Out_I_1_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_I_1_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_I_1_V : STD_LOGIC;
    signal ap_channel_done_Stage_R_1_V : STD_LOGIC;
    signal fft_stage_126_U0_Out_R_1_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_R_1_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_R_1_V : STD_LOGIC;
    signal fft_stage_127_U0_ap_start : STD_LOGIC;
    signal fft_stage_127_U0_ap_done : STD_LOGIC;
    signal fft_stage_127_U0_ap_continue : STD_LOGIC;
    signal fft_stage_127_U0_ap_idle : STD_LOGIC;
    signal fft_stage_127_U0_ap_ready : STD_LOGIC;
    signal fft_stage_127_U0_X_R_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_127_U0_X_R_1_V_ce0 : STD_LOGIC;
    signal fft_stage_127_U0_X_R_1_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_127_U0_X_R_1_V_ce1 : STD_LOGIC;
    signal fft_stage_127_U0_X_I_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_127_U0_X_I_1_V_ce0 : STD_LOGIC;
    signal fft_stage_127_U0_X_I_1_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_127_U0_X_I_1_V_ce1 : STD_LOGIC;
    signal fft_stage_127_U0_Out_R_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_127_U0_Out_R_2_V_ce0 : STD_LOGIC;
    signal fft_stage_127_U0_Out_R_2_V_we0 : STD_LOGIC;
    signal fft_stage_127_U0_Out_R_2_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_127_U0_Out_R_2_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_127_U0_Out_R_2_V_ce1 : STD_LOGIC;
    signal fft_stage_127_U0_Out_R_2_V_we1 : STD_LOGIC;
    signal fft_stage_127_U0_Out_R_2_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_127_U0_Out_I_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_127_U0_Out_I_2_V_ce0 : STD_LOGIC;
    signal fft_stage_127_U0_Out_I_2_V_we0 : STD_LOGIC;
    signal fft_stage_127_U0_Out_I_2_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_127_U0_Out_I_2_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_127_U0_Out_I_2_V_ce1 : STD_LOGIC;
    signal fft_stage_127_U0_Out_I_2_V_we1 : STD_LOGIC;
    signal fft_stage_127_U0_Out_I_2_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage_I_2_V : STD_LOGIC;
    signal fft_stage_127_U0_Out_I_2_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_I_2_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_I_2_V : STD_LOGIC;
    signal ap_channel_done_Stage_R_2_V : STD_LOGIC;
    signal fft_stage_127_U0_Out_R_2_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_R_2_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_R_2_V : STD_LOGIC;
    signal fft_stage_128_U0_ap_start : STD_LOGIC;
    signal fft_stage_128_U0_ap_done : STD_LOGIC;
    signal fft_stage_128_U0_ap_continue : STD_LOGIC;
    signal fft_stage_128_U0_ap_idle : STD_LOGIC;
    signal fft_stage_128_U0_ap_ready : STD_LOGIC;
    signal fft_stage_128_U0_X_R_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_128_U0_X_R_2_V_ce0 : STD_LOGIC;
    signal fft_stage_128_U0_X_R_2_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_128_U0_X_R_2_V_ce1 : STD_LOGIC;
    signal fft_stage_128_U0_X_I_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_128_U0_X_I_2_V_ce0 : STD_LOGIC;
    signal fft_stage_128_U0_X_I_2_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_128_U0_X_I_2_V_ce1 : STD_LOGIC;
    signal fft_stage_128_U0_Out_R_3_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_128_U0_Out_R_3_V_ce0 : STD_LOGIC;
    signal fft_stage_128_U0_Out_R_3_V_we0 : STD_LOGIC;
    signal fft_stage_128_U0_Out_R_3_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_128_U0_Out_R_3_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_128_U0_Out_R_3_V_ce1 : STD_LOGIC;
    signal fft_stage_128_U0_Out_R_3_V_we1 : STD_LOGIC;
    signal fft_stage_128_U0_Out_R_3_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_128_U0_Out_I_3_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_128_U0_Out_I_3_V_ce0 : STD_LOGIC;
    signal fft_stage_128_U0_Out_I_3_V_we0 : STD_LOGIC;
    signal fft_stage_128_U0_Out_I_3_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_128_U0_Out_I_3_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_128_U0_Out_I_3_V_ce1 : STD_LOGIC;
    signal fft_stage_128_U0_Out_I_3_V_we1 : STD_LOGIC;
    signal fft_stage_128_U0_Out_I_3_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage_I_3_V : STD_LOGIC;
    signal fft_stage_128_U0_Out_I_3_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_I_3_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_I_3_V : STD_LOGIC;
    signal ap_channel_done_Stage_R_3_V : STD_LOGIC;
    signal fft_stage_128_U0_Out_R_3_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_R_3_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_R_3_V : STD_LOGIC;
    signal fft_stage_129_U0_ap_start : STD_LOGIC;
    signal fft_stage_129_U0_ap_done : STD_LOGIC;
    signal fft_stage_129_U0_ap_continue : STD_LOGIC;
    signal fft_stage_129_U0_ap_idle : STD_LOGIC;
    signal fft_stage_129_U0_ap_ready : STD_LOGIC;
    signal fft_stage_129_U0_X_R_3_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_129_U0_X_R_3_V_ce0 : STD_LOGIC;
    signal fft_stage_129_U0_X_R_3_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_129_U0_X_R_3_V_ce1 : STD_LOGIC;
    signal fft_stage_129_U0_X_I_3_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_129_U0_X_I_3_V_ce0 : STD_LOGIC;
    signal fft_stage_129_U0_X_I_3_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_129_U0_X_I_3_V_ce1 : STD_LOGIC;
    signal fft_stage_129_U0_Out_R_4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_129_U0_Out_R_4_V_ce0 : STD_LOGIC;
    signal fft_stage_129_U0_Out_R_4_V_we0 : STD_LOGIC;
    signal fft_stage_129_U0_Out_R_4_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_129_U0_Out_R_4_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_129_U0_Out_R_4_V_ce1 : STD_LOGIC;
    signal fft_stage_129_U0_Out_R_4_V_we1 : STD_LOGIC;
    signal fft_stage_129_U0_Out_R_4_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_129_U0_Out_I_4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_129_U0_Out_I_4_V_ce0 : STD_LOGIC;
    signal fft_stage_129_U0_Out_I_4_V_we0 : STD_LOGIC;
    signal fft_stage_129_U0_Out_I_4_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_129_U0_Out_I_4_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_129_U0_Out_I_4_V_ce1 : STD_LOGIC;
    signal fft_stage_129_U0_Out_I_4_V_we1 : STD_LOGIC;
    signal fft_stage_129_U0_Out_I_4_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage_I_4_V : STD_LOGIC;
    signal fft_stage_129_U0_Out_I_4_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_I_4_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_I_4_V : STD_LOGIC;
    signal ap_channel_done_Stage_R_4_V : STD_LOGIC;
    signal fft_stage_129_U0_Out_R_4_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_R_4_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_R_4_V : STD_LOGIC;
    signal fft_stage_130_U0_ap_start : STD_LOGIC;
    signal fft_stage_130_U0_ap_done : STD_LOGIC;
    signal fft_stage_130_U0_ap_continue : STD_LOGIC;
    signal fft_stage_130_U0_ap_idle : STD_LOGIC;
    signal fft_stage_130_U0_ap_ready : STD_LOGIC;
    signal fft_stage_130_U0_X_R_4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_130_U0_X_R_4_V_ce0 : STD_LOGIC;
    signal fft_stage_130_U0_X_R_4_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_130_U0_X_R_4_V_ce1 : STD_LOGIC;
    signal fft_stage_130_U0_X_I_4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_130_U0_X_I_4_V_ce0 : STD_LOGIC;
    signal fft_stage_130_U0_X_I_4_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_130_U0_X_I_4_V_ce1 : STD_LOGIC;
    signal fft_stage_130_U0_Out_R_5_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_130_U0_Out_R_5_V_ce0 : STD_LOGIC;
    signal fft_stage_130_U0_Out_R_5_V_we0 : STD_LOGIC;
    signal fft_stage_130_U0_Out_R_5_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_130_U0_Out_R_5_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_130_U0_Out_R_5_V_ce1 : STD_LOGIC;
    signal fft_stage_130_U0_Out_R_5_V_we1 : STD_LOGIC;
    signal fft_stage_130_U0_Out_R_5_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_130_U0_Out_I_5_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_130_U0_Out_I_5_V_ce0 : STD_LOGIC;
    signal fft_stage_130_U0_Out_I_5_V_we0 : STD_LOGIC;
    signal fft_stage_130_U0_Out_I_5_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_130_U0_Out_I_5_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_130_U0_Out_I_5_V_ce1 : STD_LOGIC;
    signal fft_stage_130_U0_Out_I_5_V_we1 : STD_LOGIC;
    signal fft_stage_130_U0_Out_I_5_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage_I_5_V : STD_LOGIC;
    signal fft_stage_130_U0_Out_I_5_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_I_5_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_I_5_V : STD_LOGIC;
    signal ap_channel_done_Stage_R_5_V : STD_LOGIC;
    signal fft_stage_130_U0_Out_R_5_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_R_5_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_R_5_V : STD_LOGIC;
    signal fft_stage_131_U0_ap_start : STD_LOGIC;
    signal fft_stage_131_U0_ap_done : STD_LOGIC;
    signal fft_stage_131_U0_ap_continue : STD_LOGIC;
    signal fft_stage_131_U0_ap_idle : STD_LOGIC;
    signal fft_stage_131_U0_ap_ready : STD_LOGIC;
    signal fft_stage_131_U0_X_R_5_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_131_U0_X_R_5_V_ce0 : STD_LOGIC;
    signal fft_stage_131_U0_X_R_5_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_131_U0_X_R_5_V_ce1 : STD_LOGIC;
    signal fft_stage_131_U0_X_I_5_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_131_U0_X_I_5_V_ce0 : STD_LOGIC;
    signal fft_stage_131_U0_X_I_5_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_131_U0_X_I_5_V_ce1 : STD_LOGIC;
    signal fft_stage_131_U0_Out_R_6_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_131_U0_Out_R_6_V_ce0 : STD_LOGIC;
    signal fft_stage_131_U0_Out_R_6_V_we0 : STD_LOGIC;
    signal fft_stage_131_U0_Out_R_6_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_131_U0_Out_R_6_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_131_U0_Out_R_6_V_ce1 : STD_LOGIC;
    signal fft_stage_131_U0_Out_R_6_V_we1 : STD_LOGIC;
    signal fft_stage_131_U0_Out_R_6_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_131_U0_Out_I_6_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_131_U0_Out_I_6_V_ce0 : STD_LOGIC;
    signal fft_stage_131_U0_Out_I_6_V_we0 : STD_LOGIC;
    signal fft_stage_131_U0_Out_I_6_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_131_U0_Out_I_6_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_131_U0_Out_I_6_V_ce1 : STD_LOGIC;
    signal fft_stage_131_U0_Out_I_6_V_we1 : STD_LOGIC;
    signal fft_stage_131_U0_Out_I_6_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage_I_6_V : STD_LOGIC;
    signal fft_stage_131_U0_Out_I_6_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_I_6_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_I_6_V : STD_LOGIC;
    signal ap_channel_done_Stage_R_6_V : STD_LOGIC;
    signal fft_stage_131_U0_Out_R_6_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_R_6_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_R_6_V : STD_LOGIC;
    signal fft_stage_132_U0_ap_start : STD_LOGIC;
    signal fft_stage_132_U0_ap_done : STD_LOGIC;
    signal fft_stage_132_U0_ap_continue : STD_LOGIC;
    signal fft_stage_132_U0_ap_idle : STD_LOGIC;
    signal fft_stage_132_U0_ap_ready : STD_LOGIC;
    signal fft_stage_132_U0_X_R_6_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_132_U0_X_R_6_V_ce0 : STD_LOGIC;
    signal fft_stage_132_U0_X_R_6_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_132_U0_X_R_6_V_ce1 : STD_LOGIC;
    signal fft_stage_132_U0_X_I_6_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_132_U0_X_I_6_V_ce0 : STD_LOGIC;
    signal fft_stage_132_U0_X_I_6_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_132_U0_X_I_6_V_ce1 : STD_LOGIC;
    signal fft_stage_132_U0_Out_R_7_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_132_U0_Out_R_7_V_ce0 : STD_LOGIC;
    signal fft_stage_132_U0_Out_R_7_V_we0 : STD_LOGIC;
    signal fft_stage_132_U0_Out_R_7_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_132_U0_Out_R_7_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_132_U0_Out_R_7_V_ce1 : STD_LOGIC;
    signal fft_stage_132_U0_Out_R_7_V_we1 : STD_LOGIC;
    signal fft_stage_132_U0_Out_R_7_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_132_U0_Out_I_7_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_132_U0_Out_I_7_V_ce0 : STD_LOGIC;
    signal fft_stage_132_U0_Out_I_7_V_we0 : STD_LOGIC;
    signal fft_stage_132_U0_Out_I_7_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_132_U0_Out_I_7_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_132_U0_Out_I_7_V_ce1 : STD_LOGIC;
    signal fft_stage_132_U0_Out_I_7_V_we1 : STD_LOGIC;
    signal fft_stage_132_U0_Out_I_7_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage_I_7_V : STD_LOGIC;
    signal fft_stage_132_U0_Out_I_7_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_I_7_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_I_7_V : STD_LOGIC;
    signal ap_channel_done_Stage_R_7_V : STD_LOGIC;
    signal fft_stage_132_U0_Out_R_7_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_R_7_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_R_7_V : STD_LOGIC;
    signal fft_stage_133_U0_ap_start : STD_LOGIC;
    signal fft_stage_133_U0_ap_done : STD_LOGIC;
    signal fft_stage_133_U0_ap_continue : STD_LOGIC;
    signal fft_stage_133_U0_ap_idle : STD_LOGIC;
    signal fft_stage_133_U0_ap_ready : STD_LOGIC;
    signal fft_stage_133_U0_X_R_7_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_133_U0_X_R_7_V_ce0 : STD_LOGIC;
    signal fft_stage_133_U0_X_R_7_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_133_U0_X_R_7_V_ce1 : STD_LOGIC;
    signal fft_stage_133_U0_X_I_7_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_133_U0_X_I_7_V_ce0 : STD_LOGIC;
    signal fft_stage_133_U0_X_I_7_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_133_U0_X_I_7_V_ce1 : STD_LOGIC;
    signal fft_stage_133_U0_Out_R_8_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_133_U0_Out_R_8_V_ce0 : STD_LOGIC;
    signal fft_stage_133_U0_Out_R_8_V_we0 : STD_LOGIC;
    signal fft_stage_133_U0_Out_R_8_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_133_U0_Out_R_8_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_133_U0_Out_R_8_V_ce1 : STD_LOGIC;
    signal fft_stage_133_U0_Out_R_8_V_we1 : STD_LOGIC;
    signal fft_stage_133_U0_Out_R_8_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_133_U0_Out_I_8_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_133_U0_Out_I_8_V_ce0 : STD_LOGIC;
    signal fft_stage_133_U0_Out_I_8_V_we0 : STD_LOGIC;
    signal fft_stage_133_U0_Out_I_8_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_133_U0_Out_I_8_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_133_U0_Out_I_8_V_ce1 : STD_LOGIC;
    signal fft_stage_133_U0_Out_I_8_V_we1 : STD_LOGIC;
    signal fft_stage_133_U0_Out_I_8_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage_I_8_V : STD_LOGIC;
    signal fft_stage_133_U0_Out_I_8_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_I_8_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_I_8_V : STD_LOGIC;
    signal ap_channel_done_Stage_R_8_V : STD_LOGIC;
    signal fft_stage_133_U0_Out_R_8_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_R_8_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_R_8_V : STD_LOGIC;
    signal fft_stage_134_U0_ap_start : STD_LOGIC;
    signal fft_stage_134_U0_ap_done : STD_LOGIC;
    signal fft_stage_134_U0_ap_continue : STD_LOGIC;
    signal fft_stage_134_U0_ap_idle : STD_LOGIC;
    signal fft_stage_134_U0_ap_ready : STD_LOGIC;
    signal fft_stage_134_U0_X_R_8_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_134_U0_X_R_8_V_ce0 : STD_LOGIC;
    signal fft_stage_134_U0_X_R_8_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_134_U0_X_R_8_V_ce1 : STD_LOGIC;
    signal fft_stage_134_U0_X_I_8_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_134_U0_X_I_8_V_ce0 : STD_LOGIC;
    signal fft_stage_134_U0_X_I_8_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_134_U0_X_I_8_V_ce1 : STD_LOGIC;
    signal fft_stage_134_U0_Out_R_9_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_134_U0_Out_R_9_V_ce0 : STD_LOGIC;
    signal fft_stage_134_U0_Out_R_9_V_we0 : STD_LOGIC;
    signal fft_stage_134_U0_Out_R_9_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_134_U0_Out_R_9_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_134_U0_Out_R_9_V_ce1 : STD_LOGIC;
    signal fft_stage_134_U0_Out_R_9_V_we1 : STD_LOGIC;
    signal fft_stage_134_U0_Out_R_9_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_134_U0_Out_I_9_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_134_U0_Out_I_9_V_ce0 : STD_LOGIC;
    signal fft_stage_134_U0_Out_I_9_V_we0 : STD_LOGIC;
    signal fft_stage_134_U0_Out_I_9_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage_134_U0_Out_I_9_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage_134_U0_Out_I_9_V_ce1 : STD_LOGIC;
    signal fft_stage_134_U0_Out_I_9_V_we1 : STD_LOGIC;
    signal fft_stage_134_U0_Out_I_9_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage_I_9_V : STD_LOGIC;
    signal fft_stage_134_U0_Out_I_9_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_I_9_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_I_9_V : STD_LOGIC;
    signal ap_channel_done_Stage_R_9_V : STD_LOGIC;
    signal fft_stage_134_U0_Out_R_9_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage_R_9_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage_R_9_V : STD_LOGIC;
    signal fft_stage35_U0_ap_start : STD_LOGIC;
    signal fft_stage35_U0_ap_done : STD_LOGIC;
    signal fft_stage35_U0_ap_continue : STD_LOGIC;
    signal fft_stage35_U0_ap_idle : STD_LOGIC;
    signal fft_stage35_U0_ap_ready : STD_LOGIC;
    signal fft_stage35_U0_X_R_V9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage35_U0_X_R_V9_ce0 : STD_LOGIC;
    signal fft_stage35_U0_X_R_V9_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage35_U0_X_R_V9_ce1 : STD_LOGIC;
    signal fft_stage35_U0_X_I_V18_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage35_U0_X_I_V18_ce0 : STD_LOGIC;
    signal fft_stage35_U0_X_I_V18_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage35_U0_X_I_V18_ce1 : STD_LOGIC;
    signal fft_stage35_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage35_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage35_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage35_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage35_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage35_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage35_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage35_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage35_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage35_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage35_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage35_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage35_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage35_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage35_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage35_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal Stage_R_0_V_i_full_n : STD_LOGIC;
    signal Stage_R_0_V_t_empty_n : STD_LOGIC;
    signal Stage_I_0_V_i_full_n : STD_LOGIC;
    signal Stage_I_0_V_t_empty_n : STD_LOGIC;
    signal Stage_R_1_V_i_full_n : STD_LOGIC;
    signal Stage_R_1_V_t_empty_n : STD_LOGIC;
    signal Stage_I_1_V_i_full_n : STD_LOGIC;
    signal Stage_I_1_V_t_empty_n : STD_LOGIC;
    signal Stage_R_2_V_i_full_n : STD_LOGIC;
    signal Stage_R_2_V_t_empty_n : STD_LOGIC;
    signal Stage_I_2_V_i_full_n : STD_LOGIC;
    signal Stage_I_2_V_t_empty_n : STD_LOGIC;
    signal Stage_R_3_V_i_full_n : STD_LOGIC;
    signal Stage_R_3_V_t_empty_n : STD_LOGIC;
    signal Stage_I_3_V_i_full_n : STD_LOGIC;
    signal Stage_I_3_V_t_empty_n : STD_LOGIC;
    signal Stage_R_4_V_i_full_n : STD_LOGIC;
    signal Stage_R_4_V_t_empty_n : STD_LOGIC;
    signal Stage_I_4_V_i_full_n : STD_LOGIC;
    signal Stage_I_4_V_t_empty_n : STD_LOGIC;
    signal Stage_R_5_V_i_full_n : STD_LOGIC;
    signal Stage_R_5_V_t_empty_n : STD_LOGIC;
    signal Stage_I_5_V_i_full_n : STD_LOGIC;
    signal Stage_I_5_V_t_empty_n : STD_LOGIC;
    signal Stage_R_6_V_i_full_n : STD_LOGIC;
    signal Stage_R_6_V_t_empty_n : STD_LOGIC;
    signal Stage_I_6_V_i_full_n : STD_LOGIC;
    signal Stage_I_6_V_t_empty_n : STD_LOGIC;
    signal Stage_R_7_V_i_full_n : STD_LOGIC;
    signal Stage_R_7_V_t_empty_n : STD_LOGIC;
    signal Stage_I_7_V_i_full_n : STD_LOGIC;
    signal Stage_I_7_V_t_empty_n : STD_LOGIC;
    signal Stage_R_8_V_i_full_n : STD_LOGIC;
    signal Stage_R_8_V_t_empty_n : STD_LOGIC;
    signal Stage_I_8_V_i_full_n : STD_LOGIC;
    signal Stage_I_8_V_t_empty_n : STD_LOGIC;
    signal Stage_R_9_V_i_full_n : STD_LOGIC;
    signal Stage_R_9_V_t_empty_n : STD_LOGIC;
    signal Stage_I_9_V_i_full_n : STD_LOGIC;
    signal Stage_I_9_V_t_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal bit_reverse25_U0_start_full_n : STD_LOGIC;
    signal bit_reverse25_U0_start_write : STD_LOGIC;
    signal fft_stage_126_U0_start_full_n : STD_LOGIC;
    signal fft_stage_126_U0_start_write : STD_LOGIC;
    signal fft_stage_127_U0_start_full_n : STD_LOGIC;
    signal fft_stage_127_U0_start_write : STD_LOGIC;
    signal fft_stage_128_U0_start_full_n : STD_LOGIC;
    signal fft_stage_128_U0_start_write : STD_LOGIC;
    signal fft_stage_129_U0_start_full_n : STD_LOGIC;
    signal fft_stage_129_U0_start_write : STD_LOGIC;
    signal fft_stage_130_U0_start_full_n : STD_LOGIC;
    signal fft_stage_130_U0_start_write : STD_LOGIC;
    signal fft_stage_131_U0_start_full_n : STD_LOGIC;
    signal fft_stage_131_U0_start_write : STD_LOGIC;
    signal fft_stage_132_U0_start_full_n : STD_LOGIC;
    signal fft_stage_132_U0_start_write : STD_LOGIC;
    signal fft_stage_133_U0_start_full_n : STD_LOGIC;
    signal fft_stage_133_U0_start_write : STD_LOGIC;
    signal fft_stage_134_U0_start_full_n : STD_LOGIC;
    signal fft_stage_134_U0_start_write : STD_LOGIC;
    signal fft_stage35_U0_start_full_n : STD_LOGIC;
    signal fft_stage35_U0_start_write : STD_LOGIC;

    component bit_reverse25 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        OUT_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        OUT_R_V_ce0 : OUT STD_LOGIC;
        OUT_R_V_we0 : OUT STD_LOGIC;
        OUT_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        OUT_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        OUT_R_V_ce1 : OUT STD_LOGIC;
        OUT_R_V_we1 : OUT STD_LOGIC;
        OUT_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        OUT_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        OUT_I_V_ce0 : OUT STD_LOGIC;
        OUT_I_V_we0 : OUT STD_LOGIC;
        OUT_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        OUT_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        OUT_I_V_ce1 : OUT STD_LOGIC;
        OUT_I_V_we1 : OUT STD_LOGIC;
        OUT_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage_126 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_0_V_ce0 : OUT STD_LOGIC;
        X_R_0_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_0_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_0_V_ce1 : OUT STD_LOGIC;
        X_R_0_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_0_V_ce0 : OUT STD_LOGIC;
        X_I_0_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_0_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_0_V_ce1 : OUT STD_LOGIC;
        X_I_0_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_1_V_ce0 : OUT STD_LOGIC;
        Out_R_1_V_we0 : OUT STD_LOGIC;
        Out_R_1_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_1_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_1_V_ce1 : OUT STD_LOGIC;
        Out_R_1_V_we1 : OUT STD_LOGIC;
        Out_R_1_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_1_V_ce0 : OUT STD_LOGIC;
        Out_I_1_V_we0 : OUT STD_LOGIC;
        Out_I_1_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_1_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_1_V_ce1 : OUT STD_LOGIC;
        Out_I_1_V_we1 : OUT STD_LOGIC;
        Out_I_1_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage_127 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_1_V_ce0 : OUT STD_LOGIC;
        X_R_1_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_1_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_1_V_ce1 : OUT STD_LOGIC;
        X_R_1_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_1_V_ce0 : OUT STD_LOGIC;
        X_I_1_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_1_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_1_V_ce1 : OUT STD_LOGIC;
        X_I_1_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_2_V_ce0 : OUT STD_LOGIC;
        Out_R_2_V_we0 : OUT STD_LOGIC;
        Out_R_2_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_2_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_2_V_ce1 : OUT STD_LOGIC;
        Out_R_2_V_we1 : OUT STD_LOGIC;
        Out_R_2_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_2_V_ce0 : OUT STD_LOGIC;
        Out_I_2_V_we0 : OUT STD_LOGIC;
        Out_I_2_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_2_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_2_V_ce1 : OUT STD_LOGIC;
        Out_I_2_V_we1 : OUT STD_LOGIC;
        Out_I_2_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage_128 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_2_V_ce0 : OUT STD_LOGIC;
        X_R_2_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_2_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_2_V_ce1 : OUT STD_LOGIC;
        X_R_2_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_2_V_ce0 : OUT STD_LOGIC;
        X_I_2_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_2_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_2_V_ce1 : OUT STD_LOGIC;
        X_I_2_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_3_V_ce0 : OUT STD_LOGIC;
        Out_R_3_V_we0 : OUT STD_LOGIC;
        Out_R_3_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_3_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_3_V_ce1 : OUT STD_LOGIC;
        Out_R_3_V_we1 : OUT STD_LOGIC;
        Out_R_3_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_3_V_ce0 : OUT STD_LOGIC;
        Out_I_3_V_we0 : OUT STD_LOGIC;
        Out_I_3_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_3_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_3_V_ce1 : OUT STD_LOGIC;
        Out_I_3_V_we1 : OUT STD_LOGIC;
        Out_I_3_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage_129 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_3_V_ce0 : OUT STD_LOGIC;
        X_R_3_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_3_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_3_V_ce1 : OUT STD_LOGIC;
        X_R_3_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_3_V_ce0 : OUT STD_LOGIC;
        X_I_3_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_3_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_3_V_ce1 : OUT STD_LOGIC;
        X_I_3_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_4_V_ce0 : OUT STD_LOGIC;
        Out_R_4_V_we0 : OUT STD_LOGIC;
        Out_R_4_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_4_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_4_V_ce1 : OUT STD_LOGIC;
        Out_R_4_V_we1 : OUT STD_LOGIC;
        Out_R_4_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_4_V_ce0 : OUT STD_LOGIC;
        Out_I_4_V_we0 : OUT STD_LOGIC;
        Out_I_4_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_4_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_4_V_ce1 : OUT STD_LOGIC;
        Out_I_4_V_we1 : OUT STD_LOGIC;
        Out_I_4_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage_130 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_4_V_ce0 : OUT STD_LOGIC;
        X_R_4_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_4_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_4_V_ce1 : OUT STD_LOGIC;
        X_R_4_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_4_V_ce0 : OUT STD_LOGIC;
        X_I_4_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_4_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_4_V_ce1 : OUT STD_LOGIC;
        X_I_4_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_5_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_5_V_ce0 : OUT STD_LOGIC;
        Out_R_5_V_we0 : OUT STD_LOGIC;
        Out_R_5_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_5_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_5_V_ce1 : OUT STD_LOGIC;
        Out_R_5_V_we1 : OUT STD_LOGIC;
        Out_R_5_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_5_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_5_V_ce0 : OUT STD_LOGIC;
        Out_I_5_V_we0 : OUT STD_LOGIC;
        Out_I_5_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_5_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_5_V_ce1 : OUT STD_LOGIC;
        Out_I_5_V_we1 : OUT STD_LOGIC;
        Out_I_5_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage_131 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_5_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_5_V_ce0 : OUT STD_LOGIC;
        X_R_5_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_5_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_5_V_ce1 : OUT STD_LOGIC;
        X_R_5_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_5_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_5_V_ce0 : OUT STD_LOGIC;
        X_I_5_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_5_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_5_V_ce1 : OUT STD_LOGIC;
        X_I_5_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_6_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_6_V_ce0 : OUT STD_LOGIC;
        Out_R_6_V_we0 : OUT STD_LOGIC;
        Out_R_6_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_6_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_6_V_ce1 : OUT STD_LOGIC;
        Out_R_6_V_we1 : OUT STD_LOGIC;
        Out_R_6_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_6_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_6_V_ce0 : OUT STD_LOGIC;
        Out_I_6_V_we0 : OUT STD_LOGIC;
        Out_I_6_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_6_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_6_V_ce1 : OUT STD_LOGIC;
        Out_I_6_V_we1 : OUT STD_LOGIC;
        Out_I_6_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage_132 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_6_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_6_V_ce0 : OUT STD_LOGIC;
        X_R_6_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_6_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_6_V_ce1 : OUT STD_LOGIC;
        X_R_6_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_6_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_6_V_ce0 : OUT STD_LOGIC;
        X_I_6_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_6_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_6_V_ce1 : OUT STD_LOGIC;
        X_I_6_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_7_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_7_V_ce0 : OUT STD_LOGIC;
        Out_R_7_V_we0 : OUT STD_LOGIC;
        Out_R_7_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_7_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_7_V_ce1 : OUT STD_LOGIC;
        Out_R_7_V_we1 : OUT STD_LOGIC;
        Out_R_7_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_7_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_7_V_ce0 : OUT STD_LOGIC;
        Out_I_7_V_we0 : OUT STD_LOGIC;
        Out_I_7_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_7_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_7_V_ce1 : OUT STD_LOGIC;
        Out_I_7_V_we1 : OUT STD_LOGIC;
        Out_I_7_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage_133 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_7_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_7_V_ce0 : OUT STD_LOGIC;
        X_R_7_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_7_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_7_V_ce1 : OUT STD_LOGIC;
        X_R_7_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_7_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_7_V_ce0 : OUT STD_LOGIC;
        X_I_7_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_7_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_7_V_ce1 : OUT STD_LOGIC;
        X_I_7_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_8_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_8_V_ce0 : OUT STD_LOGIC;
        Out_R_8_V_we0 : OUT STD_LOGIC;
        Out_R_8_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_8_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_8_V_ce1 : OUT STD_LOGIC;
        Out_R_8_V_we1 : OUT STD_LOGIC;
        Out_R_8_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_8_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_8_V_ce0 : OUT STD_LOGIC;
        Out_I_8_V_we0 : OUT STD_LOGIC;
        Out_I_8_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_8_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_8_V_ce1 : OUT STD_LOGIC;
        Out_I_8_V_we1 : OUT STD_LOGIC;
        Out_I_8_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage_134 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_8_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_8_V_ce0 : OUT STD_LOGIC;
        X_R_8_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_8_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_8_V_ce1 : OUT STD_LOGIC;
        X_R_8_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_8_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_8_V_ce0 : OUT STD_LOGIC;
        X_I_8_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_8_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_8_V_ce1 : OUT STD_LOGIC;
        X_I_8_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_9_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_9_V_ce0 : OUT STD_LOGIC;
        Out_R_9_V_we0 : OUT STD_LOGIC;
        Out_R_9_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_9_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_9_V_ce1 : OUT STD_LOGIC;
        Out_R_9_V_we1 : OUT STD_LOGIC;
        Out_R_9_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_9_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_9_V_ce0 : OUT STD_LOGIC;
        Out_I_9_V_we0 : OUT STD_LOGIC;
        Out_I_9_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_9_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_9_V_ce1 : OUT STD_LOGIC;
        Out_I_9_V_we1 : OUT STD_LOGIC;
        Out_I_9_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage35 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V9_ce0 : OUT STD_LOGIC;
        X_R_V9_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V9_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V9_ce1 : OUT STD_LOGIC;
        X_R_V9_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V18_ce0 : OUT STD_LOGIC;
        X_I_V18_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V18_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V18_ce1 : OUT STD_LOGIC;
        X_I_V18_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_streaming_StaBew IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (21 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (21 downto 0);
        i_q1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (21 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (21 downto 0);
        t_q1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;



begin
    Stage_R_0_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => bit_reverse25_U0_OUT_R_V_address0,
        i_ce0 => bit_reverse25_U0_OUT_R_V_ce0,
        i_we0 => bit_reverse25_U0_OUT_R_V_we0,
        i_d0 => bit_reverse25_U0_OUT_R_V_d0,
        i_q0 => Stage_R_0_V_i_q0,
        i_address1 => bit_reverse25_U0_OUT_R_V_address1,
        i_ce1 => bit_reverse25_U0_OUT_R_V_ce1,
        i_we1 => bit_reverse25_U0_OUT_R_V_we1,
        i_d1 => bit_reverse25_U0_OUT_R_V_d1,
        i_q1 => Stage_R_0_V_i_q1,
        t_address0 => fft_stage_126_U0_X_R_0_V_address0,
        t_ce0 => fft_stage_126_U0_X_R_0_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_R_0_V_t_q0,
        t_address1 => fft_stage_126_U0_X_R_0_V_address1,
        t_ce1 => fft_stage_126_U0_X_R_0_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_R_0_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_R_0_V_i_full_n,
        i_write => ap_channel_done_Stage_R_0_V,
        t_empty_n => Stage_R_0_V_t_empty_n,
        t_read => fft_stage_126_U0_ap_ready);

    Stage_R_1_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_126_U0_Out_R_1_V_address0,
        i_ce0 => fft_stage_126_U0_Out_R_1_V_ce0,
        i_we0 => fft_stage_126_U0_Out_R_1_V_we0,
        i_d0 => fft_stage_126_U0_Out_R_1_V_d0,
        i_q0 => Stage_R_1_V_i_q0,
        i_address1 => fft_stage_126_U0_Out_R_1_V_address1,
        i_ce1 => fft_stage_126_U0_Out_R_1_V_ce1,
        i_we1 => fft_stage_126_U0_Out_R_1_V_we1,
        i_d1 => fft_stage_126_U0_Out_R_1_V_d1,
        i_q1 => Stage_R_1_V_i_q1,
        t_address0 => fft_stage_127_U0_X_R_1_V_address0,
        t_ce0 => fft_stage_127_U0_X_R_1_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_R_1_V_t_q0,
        t_address1 => fft_stage_127_U0_X_R_1_V_address1,
        t_ce1 => fft_stage_127_U0_X_R_1_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_R_1_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_R_1_V_i_full_n,
        i_write => ap_channel_done_Stage_R_1_V,
        t_empty_n => Stage_R_1_V_t_empty_n,
        t_read => fft_stage_127_U0_ap_ready);

    Stage_R_2_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_127_U0_Out_R_2_V_address0,
        i_ce0 => fft_stage_127_U0_Out_R_2_V_ce0,
        i_we0 => fft_stage_127_U0_Out_R_2_V_we0,
        i_d0 => fft_stage_127_U0_Out_R_2_V_d0,
        i_q0 => Stage_R_2_V_i_q0,
        i_address1 => fft_stage_127_U0_Out_R_2_V_address1,
        i_ce1 => fft_stage_127_U0_Out_R_2_V_ce1,
        i_we1 => fft_stage_127_U0_Out_R_2_V_we1,
        i_d1 => fft_stage_127_U0_Out_R_2_V_d1,
        i_q1 => Stage_R_2_V_i_q1,
        t_address0 => fft_stage_128_U0_X_R_2_V_address0,
        t_ce0 => fft_stage_128_U0_X_R_2_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_R_2_V_t_q0,
        t_address1 => fft_stage_128_U0_X_R_2_V_address1,
        t_ce1 => fft_stage_128_U0_X_R_2_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_R_2_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_R_2_V_i_full_n,
        i_write => ap_channel_done_Stage_R_2_V,
        t_empty_n => Stage_R_2_V_t_empty_n,
        t_read => fft_stage_128_U0_ap_ready);

    Stage_R_3_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_128_U0_Out_R_3_V_address0,
        i_ce0 => fft_stage_128_U0_Out_R_3_V_ce0,
        i_we0 => fft_stage_128_U0_Out_R_3_V_we0,
        i_d0 => fft_stage_128_U0_Out_R_3_V_d0,
        i_q0 => Stage_R_3_V_i_q0,
        i_address1 => fft_stage_128_U0_Out_R_3_V_address1,
        i_ce1 => fft_stage_128_U0_Out_R_3_V_ce1,
        i_we1 => fft_stage_128_U0_Out_R_3_V_we1,
        i_d1 => fft_stage_128_U0_Out_R_3_V_d1,
        i_q1 => Stage_R_3_V_i_q1,
        t_address0 => fft_stage_129_U0_X_R_3_V_address0,
        t_ce0 => fft_stage_129_U0_X_R_3_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_R_3_V_t_q0,
        t_address1 => fft_stage_129_U0_X_R_3_V_address1,
        t_ce1 => fft_stage_129_U0_X_R_3_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_R_3_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_R_3_V_i_full_n,
        i_write => ap_channel_done_Stage_R_3_V,
        t_empty_n => Stage_R_3_V_t_empty_n,
        t_read => fft_stage_129_U0_ap_ready);

    Stage_R_4_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_129_U0_Out_R_4_V_address0,
        i_ce0 => fft_stage_129_U0_Out_R_4_V_ce0,
        i_we0 => fft_stage_129_U0_Out_R_4_V_we0,
        i_d0 => fft_stage_129_U0_Out_R_4_V_d0,
        i_q0 => Stage_R_4_V_i_q0,
        i_address1 => fft_stage_129_U0_Out_R_4_V_address1,
        i_ce1 => fft_stage_129_U0_Out_R_4_V_ce1,
        i_we1 => fft_stage_129_U0_Out_R_4_V_we1,
        i_d1 => fft_stage_129_U0_Out_R_4_V_d1,
        i_q1 => Stage_R_4_V_i_q1,
        t_address0 => fft_stage_130_U0_X_R_4_V_address0,
        t_ce0 => fft_stage_130_U0_X_R_4_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_R_4_V_t_q0,
        t_address1 => fft_stage_130_U0_X_R_4_V_address1,
        t_ce1 => fft_stage_130_U0_X_R_4_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_R_4_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_R_4_V_i_full_n,
        i_write => ap_channel_done_Stage_R_4_V,
        t_empty_n => Stage_R_4_V_t_empty_n,
        t_read => fft_stage_130_U0_ap_ready);

    Stage_R_5_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_130_U0_Out_R_5_V_address0,
        i_ce0 => fft_stage_130_U0_Out_R_5_V_ce0,
        i_we0 => fft_stage_130_U0_Out_R_5_V_we0,
        i_d0 => fft_stage_130_U0_Out_R_5_V_d0,
        i_q0 => Stage_R_5_V_i_q0,
        i_address1 => fft_stage_130_U0_Out_R_5_V_address1,
        i_ce1 => fft_stage_130_U0_Out_R_5_V_ce1,
        i_we1 => fft_stage_130_U0_Out_R_5_V_we1,
        i_d1 => fft_stage_130_U0_Out_R_5_V_d1,
        i_q1 => Stage_R_5_V_i_q1,
        t_address0 => fft_stage_131_U0_X_R_5_V_address0,
        t_ce0 => fft_stage_131_U0_X_R_5_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_R_5_V_t_q0,
        t_address1 => fft_stage_131_U0_X_R_5_V_address1,
        t_ce1 => fft_stage_131_U0_X_R_5_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_R_5_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_R_5_V_i_full_n,
        i_write => ap_channel_done_Stage_R_5_V,
        t_empty_n => Stage_R_5_V_t_empty_n,
        t_read => fft_stage_131_U0_ap_ready);

    Stage_R_6_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_131_U0_Out_R_6_V_address0,
        i_ce0 => fft_stage_131_U0_Out_R_6_V_ce0,
        i_we0 => fft_stage_131_U0_Out_R_6_V_we0,
        i_d0 => fft_stage_131_U0_Out_R_6_V_d0,
        i_q0 => Stage_R_6_V_i_q0,
        i_address1 => fft_stage_131_U0_Out_R_6_V_address1,
        i_ce1 => fft_stage_131_U0_Out_R_6_V_ce1,
        i_we1 => fft_stage_131_U0_Out_R_6_V_we1,
        i_d1 => fft_stage_131_U0_Out_R_6_V_d1,
        i_q1 => Stage_R_6_V_i_q1,
        t_address0 => fft_stage_132_U0_X_R_6_V_address0,
        t_ce0 => fft_stage_132_U0_X_R_6_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_R_6_V_t_q0,
        t_address1 => fft_stage_132_U0_X_R_6_V_address1,
        t_ce1 => fft_stage_132_U0_X_R_6_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_R_6_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_R_6_V_i_full_n,
        i_write => ap_channel_done_Stage_R_6_V,
        t_empty_n => Stage_R_6_V_t_empty_n,
        t_read => fft_stage_132_U0_ap_ready);

    Stage_R_7_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_132_U0_Out_R_7_V_address0,
        i_ce0 => fft_stage_132_U0_Out_R_7_V_ce0,
        i_we0 => fft_stage_132_U0_Out_R_7_V_we0,
        i_d0 => fft_stage_132_U0_Out_R_7_V_d0,
        i_q0 => Stage_R_7_V_i_q0,
        i_address1 => fft_stage_132_U0_Out_R_7_V_address1,
        i_ce1 => fft_stage_132_U0_Out_R_7_V_ce1,
        i_we1 => fft_stage_132_U0_Out_R_7_V_we1,
        i_d1 => fft_stage_132_U0_Out_R_7_V_d1,
        i_q1 => Stage_R_7_V_i_q1,
        t_address0 => fft_stage_133_U0_X_R_7_V_address0,
        t_ce0 => fft_stage_133_U0_X_R_7_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_R_7_V_t_q0,
        t_address1 => fft_stage_133_U0_X_R_7_V_address1,
        t_ce1 => fft_stage_133_U0_X_R_7_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_R_7_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_R_7_V_i_full_n,
        i_write => ap_channel_done_Stage_R_7_V,
        t_empty_n => Stage_R_7_V_t_empty_n,
        t_read => fft_stage_133_U0_ap_ready);

    Stage_R_8_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_133_U0_Out_R_8_V_address0,
        i_ce0 => fft_stage_133_U0_Out_R_8_V_ce0,
        i_we0 => fft_stage_133_U0_Out_R_8_V_we0,
        i_d0 => fft_stage_133_U0_Out_R_8_V_d0,
        i_q0 => Stage_R_8_V_i_q0,
        i_address1 => fft_stage_133_U0_Out_R_8_V_address1,
        i_ce1 => fft_stage_133_U0_Out_R_8_V_ce1,
        i_we1 => fft_stage_133_U0_Out_R_8_V_we1,
        i_d1 => fft_stage_133_U0_Out_R_8_V_d1,
        i_q1 => Stage_R_8_V_i_q1,
        t_address0 => fft_stage_134_U0_X_R_8_V_address0,
        t_ce0 => fft_stage_134_U0_X_R_8_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_R_8_V_t_q0,
        t_address1 => fft_stage_134_U0_X_R_8_V_address1,
        t_ce1 => fft_stage_134_U0_X_R_8_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_R_8_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_R_8_V_i_full_n,
        i_write => ap_channel_done_Stage_R_8_V,
        t_empty_n => Stage_R_8_V_t_empty_n,
        t_read => fft_stage_134_U0_ap_ready);

    Stage_R_9_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_134_U0_Out_R_9_V_address0,
        i_ce0 => fft_stage_134_U0_Out_R_9_V_ce0,
        i_we0 => fft_stage_134_U0_Out_R_9_V_we0,
        i_d0 => fft_stage_134_U0_Out_R_9_V_d0,
        i_q0 => Stage_R_9_V_i_q0,
        i_address1 => fft_stage_134_U0_Out_R_9_V_address1,
        i_ce1 => fft_stage_134_U0_Out_R_9_V_ce1,
        i_we1 => fft_stage_134_U0_Out_R_9_V_we1,
        i_d1 => fft_stage_134_U0_Out_R_9_V_d1,
        i_q1 => Stage_R_9_V_i_q1,
        t_address0 => fft_stage35_U0_X_R_V9_address0,
        t_ce0 => fft_stage35_U0_X_R_V9_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_R_9_V_t_q0,
        t_address1 => fft_stage35_U0_X_R_V9_address1,
        t_ce1 => fft_stage35_U0_X_R_V9_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_R_9_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_R_9_V_i_full_n,
        i_write => ap_channel_done_Stage_R_9_V,
        t_empty_n => Stage_R_9_V_t_empty_n,
        t_read => fft_stage35_U0_ap_ready);

    Stage_I_0_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => bit_reverse25_U0_OUT_I_V_address0,
        i_ce0 => bit_reverse25_U0_OUT_I_V_ce0,
        i_we0 => bit_reverse25_U0_OUT_I_V_we0,
        i_d0 => bit_reverse25_U0_OUT_I_V_d0,
        i_q0 => Stage_I_0_V_i_q0,
        i_address1 => bit_reverse25_U0_OUT_I_V_address1,
        i_ce1 => bit_reverse25_U0_OUT_I_V_ce1,
        i_we1 => bit_reverse25_U0_OUT_I_V_we1,
        i_d1 => bit_reverse25_U0_OUT_I_V_d1,
        i_q1 => Stage_I_0_V_i_q1,
        t_address0 => fft_stage_126_U0_X_I_0_V_address0,
        t_ce0 => fft_stage_126_U0_X_I_0_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_I_0_V_t_q0,
        t_address1 => fft_stage_126_U0_X_I_0_V_address1,
        t_ce1 => fft_stage_126_U0_X_I_0_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_I_0_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_I_0_V_i_full_n,
        i_write => ap_channel_done_Stage_I_0_V,
        t_empty_n => Stage_I_0_V_t_empty_n,
        t_read => fft_stage_126_U0_ap_ready);

    Stage_I_1_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_126_U0_Out_I_1_V_address0,
        i_ce0 => fft_stage_126_U0_Out_I_1_V_ce0,
        i_we0 => fft_stage_126_U0_Out_I_1_V_we0,
        i_d0 => fft_stage_126_U0_Out_I_1_V_d0,
        i_q0 => Stage_I_1_V_i_q0,
        i_address1 => fft_stage_126_U0_Out_I_1_V_address1,
        i_ce1 => fft_stage_126_U0_Out_I_1_V_ce1,
        i_we1 => fft_stage_126_U0_Out_I_1_V_we1,
        i_d1 => fft_stage_126_U0_Out_I_1_V_d1,
        i_q1 => Stage_I_1_V_i_q1,
        t_address0 => fft_stage_127_U0_X_I_1_V_address0,
        t_ce0 => fft_stage_127_U0_X_I_1_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_I_1_V_t_q0,
        t_address1 => fft_stage_127_U0_X_I_1_V_address1,
        t_ce1 => fft_stage_127_U0_X_I_1_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_I_1_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_I_1_V_i_full_n,
        i_write => ap_channel_done_Stage_I_1_V,
        t_empty_n => Stage_I_1_V_t_empty_n,
        t_read => fft_stage_127_U0_ap_ready);

    Stage_I_2_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_127_U0_Out_I_2_V_address0,
        i_ce0 => fft_stage_127_U0_Out_I_2_V_ce0,
        i_we0 => fft_stage_127_U0_Out_I_2_V_we0,
        i_d0 => fft_stage_127_U0_Out_I_2_V_d0,
        i_q0 => Stage_I_2_V_i_q0,
        i_address1 => fft_stage_127_U0_Out_I_2_V_address1,
        i_ce1 => fft_stage_127_U0_Out_I_2_V_ce1,
        i_we1 => fft_stage_127_U0_Out_I_2_V_we1,
        i_d1 => fft_stage_127_U0_Out_I_2_V_d1,
        i_q1 => Stage_I_2_V_i_q1,
        t_address0 => fft_stage_128_U0_X_I_2_V_address0,
        t_ce0 => fft_stage_128_U0_X_I_2_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_I_2_V_t_q0,
        t_address1 => fft_stage_128_U0_X_I_2_V_address1,
        t_ce1 => fft_stage_128_U0_X_I_2_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_I_2_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_I_2_V_i_full_n,
        i_write => ap_channel_done_Stage_I_2_V,
        t_empty_n => Stage_I_2_V_t_empty_n,
        t_read => fft_stage_128_U0_ap_ready);

    Stage_I_3_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_128_U0_Out_I_3_V_address0,
        i_ce0 => fft_stage_128_U0_Out_I_3_V_ce0,
        i_we0 => fft_stage_128_U0_Out_I_3_V_we0,
        i_d0 => fft_stage_128_U0_Out_I_3_V_d0,
        i_q0 => Stage_I_3_V_i_q0,
        i_address1 => fft_stage_128_U0_Out_I_3_V_address1,
        i_ce1 => fft_stage_128_U0_Out_I_3_V_ce1,
        i_we1 => fft_stage_128_U0_Out_I_3_V_we1,
        i_d1 => fft_stage_128_U0_Out_I_3_V_d1,
        i_q1 => Stage_I_3_V_i_q1,
        t_address0 => fft_stage_129_U0_X_I_3_V_address0,
        t_ce0 => fft_stage_129_U0_X_I_3_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_I_3_V_t_q0,
        t_address1 => fft_stage_129_U0_X_I_3_V_address1,
        t_ce1 => fft_stage_129_U0_X_I_3_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_I_3_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_I_3_V_i_full_n,
        i_write => ap_channel_done_Stage_I_3_V,
        t_empty_n => Stage_I_3_V_t_empty_n,
        t_read => fft_stage_129_U0_ap_ready);

    Stage_I_4_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_129_U0_Out_I_4_V_address0,
        i_ce0 => fft_stage_129_U0_Out_I_4_V_ce0,
        i_we0 => fft_stage_129_U0_Out_I_4_V_we0,
        i_d0 => fft_stage_129_U0_Out_I_4_V_d0,
        i_q0 => Stage_I_4_V_i_q0,
        i_address1 => fft_stage_129_U0_Out_I_4_V_address1,
        i_ce1 => fft_stage_129_U0_Out_I_4_V_ce1,
        i_we1 => fft_stage_129_U0_Out_I_4_V_we1,
        i_d1 => fft_stage_129_U0_Out_I_4_V_d1,
        i_q1 => Stage_I_4_V_i_q1,
        t_address0 => fft_stage_130_U0_X_I_4_V_address0,
        t_ce0 => fft_stage_130_U0_X_I_4_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_I_4_V_t_q0,
        t_address1 => fft_stage_130_U0_X_I_4_V_address1,
        t_ce1 => fft_stage_130_U0_X_I_4_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_I_4_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_I_4_V_i_full_n,
        i_write => ap_channel_done_Stage_I_4_V,
        t_empty_n => Stage_I_4_V_t_empty_n,
        t_read => fft_stage_130_U0_ap_ready);

    Stage_I_5_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_130_U0_Out_I_5_V_address0,
        i_ce0 => fft_stage_130_U0_Out_I_5_V_ce0,
        i_we0 => fft_stage_130_U0_Out_I_5_V_we0,
        i_d0 => fft_stage_130_U0_Out_I_5_V_d0,
        i_q0 => Stage_I_5_V_i_q0,
        i_address1 => fft_stage_130_U0_Out_I_5_V_address1,
        i_ce1 => fft_stage_130_U0_Out_I_5_V_ce1,
        i_we1 => fft_stage_130_U0_Out_I_5_V_we1,
        i_d1 => fft_stage_130_U0_Out_I_5_V_d1,
        i_q1 => Stage_I_5_V_i_q1,
        t_address0 => fft_stage_131_U0_X_I_5_V_address0,
        t_ce0 => fft_stage_131_U0_X_I_5_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_I_5_V_t_q0,
        t_address1 => fft_stage_131_U0_X_I_5_V_address1,
        t_ce1 => fft_stage_131_U0_X_I_5_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_I_5_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_I_5_V_i_full_n,
        i_write => ap_channel_done_Stage_I_5_V,
        t_empty_n => Stage_I_5_V_t_empty_n,
        t_read => fft_stage_131_U0_ap_ready);

    Stage_I_6_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_131_U0_Out_I_6_V_address0,
        i_ce0 => fft_stage_131_U0_Out_I_6_V_ce0,
        i_we0 => fft_stage_131_U0_Out_I_6_V_we0,
        i_d0 => fft_stage_131_U0_Out_I_6_V_d0,
        i_q0 => Stage_I_6_V_i_q0,
        i_address1 => fft_stage_131_U0_Out_I_6_V_address1,
        i_ce1 => fft_stage_131_U0_Out_I_6_V_ce1,
        i_we1 => fft_stage_131_U0_Out_I_6_V_we1,
        i_d1 => fft_stage_131_U0_Out_I_6_V_d1,
        i_q1 => Stage_I_6_V_i_q1,
        t_address0 => fft_stage_132_U0_X_I_6_V_address0,
        t_ce0 => fft_stage_132_U0_X_I_6_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_I_6_V_t_q0,
        t_address1 => fft_stage_132_U0_X_I_6_V_address1,
        t_ce1 => fft_stage_132_U0_X_I_6_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_I_6_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_I_6_V_i_full_n,
        i_write => ap_channel_done_Stage_I_6_V,
        t_empty_n => Stage_I_6_V_t_empty_n,
        t_read => fft_stage_132_U0_ap_ready);

    Stage_I_7_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_132_U0_Out_I_7_V_address0,
        i_ce0 => fft_stage_132_U0_Out_I_7_V_ce0,
        i_we0 => fft_stage_132_U0_Out_I_7_V_we0,
        i_d0 => fft_stage_132_U0_Out_I_7_V_d0,
        i_q0 => Stage_I_7_V_i_q0,
        i_address1 => fft_stage_132_U0_Out_I_7_V_address1,
        i_ce1 => fft_stage_132_U0_Out_I_7_V_ce1,
        i_we1 => fft_stage_132_U0_Out_I_7_V_we1,
        i_d1 => fft_stage_132_U0_Out_I_7_V_d1,
        i_q1 => Stage_I_7_V_i_q1,
        t_address0 => fft_stage_133_U0_X_I_7_V_address0,
        t_ce0 => fft_stage_133_U0_X_I_7_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_I_7_V_t_q0,
        t_address1 => fft_stage_133_U0_X_I_7_V_address1,
        t_ce1 => fft_stage_133_U0_X_I_7_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_I_7_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_I_7_V_i_full_n,
        i_write => ap_channel_done_Stage_I_7_V,
        t_empty_n => Stage_I_7_V_t_empty_n,
        t_read => fft_stage_133_U0_ap_ready);

    Stage_I_8_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_133_U0_Out_I_8_V_address0,
        i_ce0 => fft_stage_133_U0_Out_I_8_V_ce0,
        i_we0 => fft_stage_133_U0_Out_I_8_V_we0,
        i_d0 => fft_stage_133_U0_Out_I_8_V_d0,
        i_q0 => Stage_I_8_V_i_q0,
        i_address1 => fft_stage_133_U0_Out_I_8_V_address1,
        i_ce1 => fft_stage_133_U0_Out_I_8_V_ce1,
        i_we1 => fft_stage_133_U0_Out_I_8_V_we1,
        i_d1 => fft_stage_133_U0_Out_I_8_V_d1,
        i_q1 => Stage_I_8_V_i_q1,
        t_address0 => fft_stage_134_U0_X_I_8_V_address0,
        t_ce0 => fft_stage_134_U0_X_I_8_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_I_8_V_t_q0,
        t_address1 => fft_stage_134_U0_X_I_8_V_address1,
        t_ce1 => fft_stage_134_U0_X_I_8_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_I_8_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_I_8_V_i_full_n,
        i_write => ap_channel_done_Stage_I_8_V,
        t_empty_n => Stage_I_8_V_t_empty_n,
        t_read => fft_stage_134_U0_ap_ready);

    Stage_I_9_V_U : component fft_streaming_StaBew
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage_134_U0_Out_I_9_V_address0,
        i_ce0 => fft_stage_134_U0_Out_I_9_V_ce0,
        i_we0 => fft_stage_134_U0_Out_I_9_V_we0,
        i_d0 => fft_stage_134_U0_Out_I_9_V_d0,
        i_q0 => Stage_I_9_V_i_q0,
        i_address1 => fft_stage_134_U0_Out_I_9_V_address1,
        i_ce1 => fft_stage_134_U0_Out_I_9_V_ce1,
        i_we1 => fft_stage_134_U0_Out_I_9_V_we1,
        i_d1 => fft_stage_134_U0_Out_I_9_V_d1,
        i_q1 => Stage_I_9_V_i_q1,
        t_address0 => fft_stage35_U0_X_I_V18_address0,
        t_ce0 => fft_stage35_U0_X_I_V18_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage_I_9_V_t_q0,
        t_address1 => fft_stage35_U0_X_I_V18_address1,
        t_ce1 => fft_stage35_U0_X_I_V18_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage_I_9_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage_I_9_V_i_full_n,
        i_write => ap_channel_done_Stage_I_9_V,
        t_empty_n => Stage_I_9_V_t_empty_n,
        t_read => fft_stage35_U0_ap_ready);

    bit_reverse25_U0 : component bit_reverse25
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => bit_reverse25_U0_ap_start,
        ap_done => bit_reverse25_U0_ap_done,
        ap_continue => bit_reverse25_U0_ap_continue,
        ap_idle => bit_reverse25_U0_ap_idle,
        ap_ready => bit_reverse25_U0_ap_ready,
        X_R_V_address0 => bit_reverse25_U0_X_R_V_address0,
        X_R_V_ce0 => bit_reverse25_U0_X_R_V_ce0,
        X_R_V_q0 => X_R_V_q0,
        X_R_V_address1 => bit_reverse25_U0_X_R_V_address1,
        X_R_V_ce1 => bit_reverse25_U0_X_R_V_ce1,
        X_R_V_q1 => X_R_V_q1,
        X_I_V_address0 => bit_reverse25_U0_X_I_V_address0,
        X_I_V_ce0 => bit_reverse25_U0_X_I_V_ce0,
        X_I_V_q0 => X_I_V_q0,
        X_I_V_address1 => bit_reverse25_U0_X_I_V_address1,
        X_I_V_ce1 => bit_reverse25_U0_X_I_V_ce1,
        X_I_V_q1 => X_I_V_q1,
        OUT_R_V_address0 => bit_reverse25_U0_OUT_R_V_address0,
        OUT_R_V_ce0 => bit_reverse25_U0_OUT_R_V_ce0,
        OUT_R_V_we0 => bit_reverse25_U0_OUT_R_V_we0,
        OUT_R_V_d0 => bit_reverse25_U0_OUT_R_V_d0,
        OUT_R_V_address1 => bit_reverse25_U0_OUT_R_V_address1,
        OUT_R_V_ce1 => bit_reverse25_U0_OUT_R_V_ce1,
        OUT_R_V_we1 => bit_reverse25_U0_OUT_R_V_we1,
        OUT_R_V_d1 => bit_reverse25_U0_OUT_R_V_d1,
        OUT_I_V_address0 => bit_reverse25_U0_OUT_I_V_address0,
        OUT_I_V_ce0 => bit_reverse25_U0_OUT_I_V_ce0,
        OUT_I_V_we0 => bit_reverse25_U0_OUT_I_V_we0,
        OUT_I_V_d0 => bit_reverse25_U0_OUT_I_V_d0,
        OUT_I_V_address1 => bit_reverse25_U0_OUT_I_V_address1,
        OUT_I_V_ce1 => bit_reverse25_U0_OUT_I_V_ce1,
        OUT_I_V_we1 => bit_reverse25_U0_OUT_I_V_we1,
        OUT_I_V_d1 => bit_reverse25_U0_OUT_I_V_d1);

    fft_stage_126_U0 : component fft_stage_126
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage_126_U0_ap_start,
        ap_done => fft_stage_126_U0_ap_done,
        ap_continue => fft_stage_126_U0_ap_continue,
        ap_idle => fft_stage_126_U0_ap_idle,
        ap_ready => fft_stage_126_U0_ap_ready,
        X_R_0_V_address0 => fft_stage_126_U0_X_R_0_V_address0,
        X_R_0_V_ce0 => fft_stage_126_U0_X_R_0_V_ce0,
        X_R_0_V_q0 => Stage_R_0_V_t_q0,
        X_R_0_V_address1 => fft_stage_126_U0_X_R_0_V_address1,
        X_R_0_V_ce1 => fft_stage_126_U0_X_R_0_V_ce1,
        X_R_0_V_q1 => Stage_R_0_V_t_q1,
        X_I_0_V_address0 => fft_stage_126_U0_X_I_0_V_address0,
        X_I_0_V_ce0 => fft_stage_126_U0_X_I_0_V_ce0,
        X_I_0_V_q0 => Stage_I_0_V_t_q0,
        X_I_0_V_address1 => fft_stage_126_U0_X_I_0_V_address1,
        X_I_0_V_ce1 => fft_stage_126_U0_X_I_0_V_ce1,
        X_I_0_V_q1 => Stage_I_0_V_t_q1,
        Out_R_1_V_address0 => fft_stage_126_U0_Out_R_1_V_address0,
        Out_R_1_V_ce0 => fft_stage_126_U0_Out_R_1_V_ce0,
        Out_R_1_V_we0 => fft_stage_126_U0_Out_R_1_V_we0,
        Out_R_1_V_d0 => fft_stage_126_U0_Out_R_1_V_d0,
        Out_R_1_V_address1 => fft_stage_126_U0_Out_R_1_V_address1,
        Out_R_1_V_ce1 => fft_stage_126_U0_Out_R_1_V_ce1,
        Out_R_1_V_we1 => fft_stage_126_U0_Out_R_1_V_we1,
        Out_R_1_V_d1 => fft_stage_126_U0_Out_R_1_V_d1,
        Out_I_1_V_address0 => fft_stage_126_U0_Out_I_1_V_address0,
        Out_I_1_V_ce0 => fft_stage_126_U0_Out_I_1_V_ce0,
        Out_I_1_V_we0 => fft_stage_126_U0_Out_I_1_V_we0,
        Out_I_1_V_d0 => fft_stage_126_U0_Out_I_1_V_d0,
        Out_I_1_V_address1 => fft_stage_126_U0_Out_I_1_V_address1,
        Out_I_1_V_ce1 => fft_stage_126_U0_Out_I_1_V_ce1,
        Out_I_1_V_we1 => fft_stage_126_U0_Out_I_1_V_we1,
        Out_I_1_V_d1 => fft_stage_126_U0_Out_I_1_V_d1);

    fft_stage_127_U0 : component fft_stage_127
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage_127_U0_ap_start,
        ap_done => fft_stage_127_U0_ap_done,
        ap_continue => fft_stage_127_U0_ap_continue,
        ap_idle => fft_stage_127_U0_ap_idle,
        ap_ready => fft_stage_127_U0_ap_ready,
        X_R_1_V_address0 => fft_stage_127_U0_X_R_1_V_address0,
        X_R_1_V_ce0 => fft_stage_127_U0_X_R_1_V_ce0,
        X_R_1_V_q0 => Stage_R_1_V_t_q0,
        X_R_1_V_address1 => fft_stage_127_U0_X_R_1_V_address1,
        X_R_1_V_ce1 => fft_stage_127_U0_X_R_1_V_ce1,
        X_R_1_V_q1 => Stage_R_1_V_t_q1,
        X_I_1_V_address0 => fft_stage_127_U0_X_I_1_V_address0,
        X_I_1_V_ce0 => fft_stage_127_U0_X_I_1_V_ce0,
        X_I_1_V_q0 => Stage_I_1_V_t_q0,
        X_I_1_V_address1 => fft_stage_127_U0_X_I_1_V_address1,
        X_I_1_V_ce1 => fft_stage_127_U0_X_I_1_V_ce1,
        X_I_1_V_q1 => Stage_I_1_V_t_q1,
        Out_R_2_V_address0 => fft_stage_127_U0_Out_R_2_V_address0,
        Out_R_2_V_ce0 => fft_stage_127_U0_Out_R_2_V_ce0,
        Out_R_2_V_we0 => fft_stage_127_U0_Out_R_2_V_we0,
        Out_R_2_V_d0 => fft_stage_127_U0_Out_R_2_V_d0,
        Out_R_2_V_address1 => fft_stage_127_U0_Out_R_2_V_address1,
        Out_R_2_V_ce1 => fft_stage_127_U0_Out_R_2_V_ce1,
        Out_R_2_V_we1 => fft_stage_127_U0_Out_R_2_V_we1,
        Out_R_2_V_d1 => fft_stage_127_U0_Out_R_2_V_d1,
        Out_I_2_V_address0 => fft_stage_127_U0_Out_I_2_V_address0,
        Out_I_2_V_ce0 => fft_stage_127_U0_Out_I_2_V_ce0,
        Out_I_2_V_we0 => fft_stage_127_U0_Out_I_2_V_we0,
        Out_I_2_V_d0 => fft_stage_127_U0_Out_I_2_V_d0,
        Out_I_2_V_address1 => fft_stage_127_U0_Out_I_2_V_address1,
        Out_I_2_V_ce1 => fft_stage_127_U0_Out_I_2_V_ce1,
        Out_I_2_V_we1 => fft_stage_127_U0_Out_I_2_V_we1,
        Out_I_2_V_d1 => fft_stage_127_U0_Out_I_2_V_d1);

    fft_stage_128_U0 : component fft_stage_128
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage_128_U0_ap_start,
        ap_done => fft_stage_128_U0_ap_done,
        ap_continue => fft_stage_128_U0_ap_continue,
        ap_idle => fft_stage_128_U0_ap_idle,
        ap_ready => fft_stage_128_U0_ap_ready,
        X_R_2_V_address0 => fft_stage_128_U0_X_R_2_V_address0,
        X_R_2_V_ce0 => fft_stage_128_U0_X_R_2_V_ce0,
        X_R_2_V_q0 => Stage_R_2_V_t_q0,
        X_R_2_V_address1 => fft_stage_128_U0_X_R_2_V_address1,
        X_R_2_V_ce1 => fft_stage_128_U0_X_R_2_V_ce1,
        X_R_2_V_q1 => Stage_R_2_V_t_q1,
        X_I_2_V_address0 => fft_stage_128_U0_X_I_2_V_address0,
        X_I_2_V_ce0 => fft_stage_128_U0_X_I_2_V_ce0,
        X_I_2_V_q0 => Stage_I_2_V_t_q0,
        X_I_2_V_address1 => fft_stage_128_U0_X_I_2_V_address1,
        X_I_2_V_ce1 => fft_stage_128_U0_X_I_2_V_ce1,
        X_I_2_V_q1 => Stage_I_2_V_t_q1,
        Out_R_3_V_address0 => fft_stage_128_U0_Out_R_3_V_address0,
        Out_R_3_V_ce0 => fft_stage_128_U0_Out_R_3_V_ce0,
        Out_R_3_V_we0 => fft_stage_128_U0_Out_R_3_V_we0,
        Out_R_3_V_d0 => fft_stage_128_U0_Out_R_3_V_d0,
        Out_R_3_V_address1 => fft_stage_128_U0_Out_R_3_V_address1,
        Out_R_3_V_ce1 => fft_stage_128_U0_Out_R_3_V_ce1,
        Out_R_3_V_we1 => fft_stage_128_U0_Out_R_3_V_we1,
        Out_R_3_V_d1 => fft_stage_128_U0_Out_R_3_V_d1,
        Out_I_3_V_address0 => fft_stage_128_U0_Out_I_3_V_address0,
        Out_I_3_V_ce0 => fft_stage_128_U0_Out_I_3_V_ce0,
        Out_I_3_V_we0 => fft_stage_128_U0_Out_I_3_V_we0,
        Out_I_3_V_d0 => fft_stage_128_U0_Out_I_3_V_d0,
        Out_I_3_V_address1 => fft_stage_128_U0_Out_I_3_V_address1,
        Out_I_3_V_ce1 => fft_stage_128_U0_Out_I_3_V_ce1,
        Out_I_3_V_we1 => fft_stage_128_U0_Out_I_3_V_we1,
        Out_I_3_V_d1 => fft_stage_128_U0_Out_I_3_V_d1);

    fft_stage_129_U0 : component fft_stage_129
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage_129_U0_ap_start,
        ap_done => fft_stage_129_U0_ap_done,
        ap_continue => fft_stage_129_U0_ap_continue,
        ap_idle => fft_stage_129_U0_ap_idle,
        ap_ready => fft_stage_129_U0_ap_ready,
        X_R_3_V_address0 => fft_stage_129_U0_X_R_3_V_address0,
        X_R_3_V_ce0 => fft_stage_129_U0_X_R_3_V_ce0,
        X_R_3_V_q0 => Stage_R_3_V_t_q0,
        X_R_3_V_address1 => fft_stage_129_U0_X_R_3_V_address1,
        X_R_3_V_ce1 => fft_stage_129_U0_X_R_3_V_ce1,
        X_R_3_V_q1 => Stage_R_3_V_t_q1,
        X_I_3_V_address0 => fft_stage_129_U0_X_I_3_V_address0,
        X_I_3_V_ce0 => fft_stage_129_U0_X_I_3_V_ce0,
        X_I_3_V_q0 => Stage_I_3_V_t_q0,
        X_I_3_V_address1 => fft_stage_129_U0_X_I_3_V_address1,
        X_I_3_V_ce1 => fft_stage_129_U0_X_I_3_V_ce1,
        X_I_3_V_q1 => Stage_I_3_V_t_q1,
        Out_R_4_V_address0 => fft_stage_129_U0_Out_R_4_V_address0,
        Out_R_4_V_ce0 => fft_stage_129_U0_Out_R_4_V_ce0,
        Out_R_4_V_we0 => fft_stage_129_U0_Out_R_4_V_we0,
        Out_R_4_V_d0 => fft_stage_129_U0_Out_R_4_V_d0,
        Out_R_4_V_address1 => fft_stage_129_U0_Out_R_4_V_address1,
        Out_R_4_V_ce1 => fft_stage_129_U0_Out_R_4_V_ce1,
        Out_R_4_V_we1 => fft_stage_129_U0_Out_R_4_V_we1,
        Out_R_4_V_d1 => fft_stage_129_U0_Out_R_4_V_d1,
        Out_I_4_V_address0 => fft_stage_129_U0_Out_I_4_V_address0,
        Out_I_4_V_ce0 => fft_stage_129_U0_Out_I_4_V_ce0,
        Out_I_4_V_we0 => fft_stage_129_U0_Out_I_4_V_we0,
        Out_I_4_V_d0 => fft_stage_129_U0_Out_I_4_V_d0,
        Out_I_4_V_address1 => fft_stage_129_U0_Out_I_4_V_address1,
        Out_I_4_V_ce1 => fft_stage_129_U0_Out_I_4_V_ce1,
        Out_I_4_V_we1 => fft_stage_129_U0_Out_I_4_V_we1,
        Out_I_4_V_d1 => fft_stage_129_U0_Out_I_4_V_d1);

    fft_stage_130_U0 : component fft_stage_130
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage_130_U0_ap_start,
        ap_done => fft_stage_130_U0_ap_done,
        ap_continue => fft_stage_130_U0_ap_continue,
        ap_idle => fft_stage_130_U0_ap_idle,
        ap_ready => fft_stage_130_U0_ap_ready,
        X_R_4_V_address0 => fft_stage_130_U0_X_R_4_V_address0,
        X_R_4_V_ce0 => fft_stage_130_U0_X_R_4_V_ce0,
        X_R_4_V_q0 => Stage_R_4_V_t_q0,
        X_R_4_V_address1 => fft_stage_130_U0_X_R_4_V_address1,
        X_R_4_V_ce1 => fft_stage_130_U0_X_R_4_V_ce1,
        X_R_4_V_q1 => Stage_R_4_V_t_q1,
        X_I_4_V_address0 => fft_stage_130_U0_X_I_4_V_address0,
        X_I_4_V_ce0 => fft_stage_130_U0_X_I_4_V_ce0,
        X_I_4_V_q0 => Stage_I_4_V_t_q0,
        X_I_4_V_address1 => fft_stage_130_U0_X_I_4_V_address1,
        X_I_4_V_ce1 => fft_stage_130_U0_X_I_4_V_ce1,
        X_I_4_V_q1 => Stage_I_4_V_t_q1,
        Out_R_5_V_address0 => fft_stage_130_U0_Out_R_5_V_address0,
        Out_R_5_V_ce0 => fft_stage_130_U0_Out_R_5_V_ce0,
        Out_R_5_V_we0 => fft_stage_130_U0_Out_R_5_V_we0,
        Out_R_5_V_d0 => fft_stage_130_U0_Out_R_5_V_d0,
        Out_R_5_V_address1 => fft_stage_130_U0_Out_R_5_V_address1,
        Out_R_5_V_ce1 => fft_stage_130_U0_Out_R_5_V_ce1,
        Out_R_5_V_we1 => fft_stage_130_U0_Out_R_5_V_we1,
        Out_R_5_V_d1 => fft_stage_130_U0_Out_R_5_V_d1,
        Out_I_5_V_address0 => fft_stage_130_U0_Out_I_5_V_address0,
        Out_I_5_V_ce0 => fft_stage_130_U0_Out_I_5_V_ce0,
        Out_I_5_V_we0 => fft_stage_130_U0_Out_I_5_V_we0,
        Out_I_5_V_d0 => fft_stage_130_U0_Out_I_5_V_d0,
        Out_I_5_V_address1 => fft_stage_130_U0_Out_I_5_V_address1,
        Out_I_5_V_ce1 => fft_stage_130_U0_Out_I_5_V_ce1,
        Out_I_5_V_we1 => fft_stage_130_U0_Out_I_5_V_we1,
        Out_I_5_V_d1 => fft_stage_130_U0_Out_I_5_V_d1);

    fft_stage_131_U0 : component fft_stage_131
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage_131_U0_ap_start,
        ap_done => fft_stage_131_U0_ap_done,
        ap_continue => fft_stage_131_U0_ap_continue,
        ap_idle => fft_stage_131_U0_ap_idle,
        ap_ready => fft_stage_131_U0_ap_ready,
        X_R_5_V_address0 => fft_stage_131_U0_X_R_5_V_address0,
        X_R_5_V_ce0 => fft_stage_131_U0_X_R_5_V_ce0,
        X_R_5_V_q0 => Stage_R_5_V_t_q0,
        X_R_5_V_address1 => fft_stage_131_U0_X_R_5_V_address1,
        X_R_5_V_ce1 => fft_stage_131_U0_X_R_5_V_ce1,
        X_R_5_V_q1 => Stage_R_5_V_t_q1,
        X_I_5_V_address0 => fft_stage_131_U0_X_I_5_V_address0,
        X_I_5_V_ce0 => fft_stage_131_U0_X_I_5_V_ce0,
        X_I_5_V_q0 => Stage_I_5_V_t_q0,
        X_I_5_V_address1 => fft_stage_131_U0_X_I_5_V_address1,
        X_I_5_V_ce1 => fft_stage_131_U0_X_I_5_V_ce1,
        X_I_5_V_q1 => Stage_I_5_V_t_q1,
        Out_R_6_V_address0 => fft_stage_131_U0_Out_R_6_V_address0,
        Out_R_6_V_ce0 => fft_stage_131_U0_Out_R_6_V_ce0,
        Out_R_6_V_we0 => fft_stage_131_U0_Out_R_6_V_we0,
        Out_R_6_V_d0 => fft_stage_131_U0_Out_R_6_V_d0,
        Out_R_6_V_address1 => fft_stage_131_U0_Out_R_6_V_address1,
        Out_R_6_V_ce1 => fft_stage_131_U0_Out_R_6_V_ce1,
        Out_R_6_V_we1 => fft_stage_131_U0_Out_R_6_V_we1,
        Out_R_6_V_d1 => fft_stage_131_U0_Out_R_6_V_d1,
        Out_I_6_V_address0 => fft_stage_131_U0_Out_I_6_V_address0,
        Out_I_6_V_ce0 => fft_stage_131_U0_Out_I_6_V_ce0,
        Out_I_6_V_we0 => fft_stage_131_U0_Out_I_6_V_we0,
        Out_I_6_V_d0 => fft_stage_131_U0_Out_I_6_V_d0,
        Out_I_6_V_address1 => fft_stage_131_U0_Out_I_6_V_address1,
        Out_I_6_V_ce1 => fft_stage_131_U0_Out_I_6_V_ce1,
        Out_I_6_V_we1 => fft_stage_131_U0_Out_I_6_V_we1,
        Out_I_6_V_d1 => fft_stage_131_U0_Out_I_6_V_d1);

    fft_stage_132_U0 : component fft_stage_132
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage_132_U0_ap_start,
        ap_done => fft_stage_132_U0_ap_done,
        ap_continue => fft_stage_132_U0_ap_continue,
        ap_idle => fft_stage_132_U0_ap_idle,
        ap_ready => fft_stage_132_U0_ap_ready,
        X_R_6_V_address0 => fft_stage_132_U0_X_R_6_V_address0,
        X_R_6_V_ce0 => fft_stage_132_U0_X_R_6_V_ce0,
        X_R_6_V_q0 => Stage_R_6_V_t_q0,
        X_R_6_V_address1 => fft_stage_132_U0_X_R_6_V_address1,
        X_R_6_V_ce1 => fft_stage_132_U0_X_R_6_V_ce1,
        X_R_6_V_q1 => Stage_R_6_V_t_q1,
        X_I_6_V_address0 => fft_stage_132_U0_X_I_6_V_address0,
        X_I_6_V_ce0 => fft_stage_132_U0_X_I_6_V_ce0,
        X_I_6_V_q0 => Stage_I_6_V_t_q0,
        X_I_6_V_address1 => fft_stage_132_U0_X_I_6_V_address1,
        X_I_6_V_ce1 => fft_stage_132_U0_X_I_6_V_ce1,
        X_I_6_V_q1 => Stage_I_6_V_t_q1,
        Out_R_7_V_address0 => fft_stage_132_U0_Out_R_7_V_address0,
        Out_R_7_V_ce0 => fft_stage_132_U0_Out_R_7_V_ce0,
        Out_R_7_V_we0 => fft_stage_132_U0_Out_R_7_V_we0,
        Out_R_7_V_d0 => fft_stage_132_U0_Out_R_7_V_d0,
        Out_R_7_V_address1 => fft_stage_132_U0_Out_R_7_V_address1,
        Out_R_7_V_ce1 => fft_stage_132_U0_Out_R_7_V_ce1,
        Out_R_7_V_we1 => fft_stage_132_U0_Out_R_7_V_we1,
        Out_R_7_V_d1 => fft_stage_132_U0_Out_R_7_V_d1,
        Out_I_7_V_address0 => fft_stage_132_U0_Out_I_7_V_address0,
        Out_I_7_V_ce0 => fft_stage_132_U0_Out_I_7_V_ce0,
        Out_I_7_V_we0 => fft_stage_132_U0_Out_I_7_V_we0,
        Out_I_7_V_d0 => fft_stage_132_U0_Out_I_7_V_d0,
        Out_I_7_V_address1 => fft_stage_132_U0_Out_I_7_V_address1,
        Out_I_7_V_ce1 => fft_stage_132_U0_Out_I_7_V_ce1,
        Out_I_7_V_we1 => fft_stage_132_U0_Out_I_7_V_we1,
        Out_I_7_V_d1 => fft_stage_132_U0_Out_I_7_V_d1);

    fft_stage_133_U0 : component fft_stage_133
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage_133_U0_ap_start,
        ap_done => fft_stage_133_U0_ap_done,
        ap_continue => fft_stage_133_U0_ap_continue,
        ap_idle => fft_stage_133_U0_ap_idle,
        ap_ready => fft_stage_133_U0_ap_ready,
        X_R_7_V_address0 => fft_stage_133_U0_X_R_7_V_address0,
        X_R_7_V_ce0 => fft_stage_133_U0_X_R_7_V_ce0,
        X_R_7_V_q0 => Stage_R_7_V_t_q0,
        X_R_7_V_address1 => fft_stage_133_U0_X_R_7_V_address1,
        X_R_7_V_ce1 => fft_stage_133_U0_X_R_7_V_ce1,
        X_R_7_V_q1 => Stage_R_7_V_t_q1,
        X_I_7_V_address0 => fft_stage_133_U0_X_I_7_V_address0,
        X_I_7_V_ce0 => fft_stage_133_U0_X_I_7_V_ce0,
        X_I_7_V_q0 => Stage_I_7_V_t_q0,
        X_I_7_V_address1 => fft_stage_133_U0_X_I_7_V_address1,
        X_I_7_V_ce1 => fft_stage_133_U0_X_I_7_V_ce1,
        X_I_7_V_q1 => Stage_I_7_V_t_q1,
        Out_R_8_V_address0 => fft_stage_133_U0_Out_R_8_V_address0,
        Out_R_8_V_ce0 => fft_stage_133_U0_Out_R_8_V_ce0,
        Out_R_8_V_we0 => fft_stage_133_U0_Out_R_8_V_we0,
        Out_R_8_V_d0 => fft_stage_133_U0_Out_R_8_V_d0,
        Out_R_8_V_address1 => fft_stage_133_U0_Out_R_8_V_address1,
        Out_R_8_V_ce1 => fft_stage_133_U0_Out_R_8_V_ce1,
        Out_R_8_V_we1 => fft_stage_133_U0_Out_R_8_V_we1,
        Out_R_8_V_d1 => fft_stage_133_U0_Out_R_8_V_d1,
        Out_I_8_V_address0 => fft_stage_133_U0_Out_I_8_V_address0,
        Out_I_8_V_ce0 => fft_stage_133_U0_Out_I_8_V_ce0,
        Out_I_8_V_we0 => fft_stage_133_U0_Out_I_8_V_we0,
        Out_I_8_V_d0 => fft_stage_133_U0_Out_I_8_V_d0,
        Out_I_8_V_address1 => fft_stage_133_U0_Out_I_8_V_address1,
        Out_I_8_V_ce1 => fft_stage_133_U0_Out_I_8_V_ce1,
        Out_I_8_V_we1 => fft_stage_133_U0_Out_I_8_V_we1,
        Out_I_8_V_d1 => fft_stage_133_U0_Out_I_8_V_d1);

    fft_stage_134_U0 : component fft_stage_134
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage_134_U0_ap_start,
        ap_done => fft_stage_134_U0_ap_done,
        ap_continue => fft_stage_134_U0_ap_continue,
        ap_idle => fft_stage_134_U0_ap_idle,
        ap_ready => fft_stage_134_U0_ap_ready,
        X_R_8_V_address0 => fft_stage_134_U0_X_R_8_V_address0,
        X_R_8_V_ce0 => fft_stage_134_U0_X_R_8_V_ce0,
        X_R_8_V_q0 => Stage_R_8_V_t_q0,
        X_R_8_V_address1 => fft_stage_134_U0_X_R_8_V_address1,
        X_R_8_V_ce1 => fft_stage_134_U0_X_R_8_V_ce1,
        X_R_8_V_q1 => Stage_R_8_V_t_q1,
        X_I_8_V_address0 => fft_stage_134_U0_X_I_8_V_address0,
        X_I_8_V_ce0 => fft_stage_134_U0_X_I_8_V_ce0,
        X_I_8_V_q0 => Stage_I_8_V_t_q0,
        X_I_8_V_address1 => fft_stage_134_U0_X_I_8_V_address1,
        X_I_8_V_ce1 => fft_stage_134_U0_X_I_8_V_ce1,
        X_I_8_V_q1 => Stage_I_8_V_t_q1,
        Out_R_9_V_address0 => fft_stage_134_U0_Out_R_9_V_address0,
        Out_R_9_V_ce0 => fft_stage_134_U0_Out_R_9_V_ce0,
        Out_R_9_V_we0 => fft_stage_134_U0_Out_R_9_V_we0,
        Out_R_9_V_d0 => fft_stage_134_U0_Out_R_9_V_d0,
        Out_R_9_V_address1 => fft_stage_134_U0_Out_R_9_V_address1,
        Out_R_9_V_ce1 => fft_stage_134_U0_Out_R_9_V_ce1,
        Out_R_9_V_we1 => fft_stage_134_U0_Out_R_9_V_we1,
        Out_R_9_V_d1 => fft_stage_134_U0_Out_R_9_V_d1,
        Out_I_9_V_address0 => fft_stage_134_U0_Out_I_9_V_address0,
        Out_I_9_V_ce0 => fft_stage_134_U0_Out_I_9_V_ce0,
        Out_I_9_V_we0 => fft_stage_134_U0_Out_I_9_V_we0,
        Out_I_9_V_d0 => fft_stage_134_U0_Out_I_9_V_d0,
        Out_I_9_V_address1 => fft_stage_134_U0_Out_I_9_V_address1,
        Out_I_9_V_ce1 => fft_stage_134_U0_Out_I_9_V_ce1,
        Out_I_9_V_we1 => fft_stage_134_U0_Out_I_9_V_we1,
        Out_I_9_V_d1 => fft_stage_134_U0_Out_I_9_V_d1);

    fft_stage35_U0 : component fft_stage35
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage35_U0_ap_start,
        ap_done => fft_stage35_U0_ap_done,
        ap_continue => fft_stage35_U0_ap_continue,
        ap_idle => fft_stage35_U0_ap_idle,
        ap_ready => fft_stage35_U0_ap_ready,
        X_R_V9_address0 => fft_stage35_U0_X_R_V9_address0,
        X_R_V9_ce0 => fft_stage35_U0_X_R_V9_ce0,
        X_R_V9_q0 => Stage_R_9_V_t_q0,
        X_R_V9_address1 => fft_stage35_U0_X_R_V9_address1,
        X_R_V9_ce1 => fft_stage35_U0_X_R_V9_ce1,
        X_R_V9_q1 => Stage_R_9_V_t_q1,
        X_I_V18_address0 => fft_stage35_U0_X_I_V18_address0,
        X_I_V18_ce0 => fft_stage35_U0_X_I_V18_ce0,
        X_I_V18_q0 => Stage_I_9_V_t_q0,
        X_I_V18_address1 => fft_stage35_U0_X_I_V18_address1,
        X_I_V18_ce1 => fft_stage35_U0_X_I_V18_ce1,
        X_I_V18_q1 => Stage_I_9_V_t_q1,
        Out_R_V_address0 => fft_stage35_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage35_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage35_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage35_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage35_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage35_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage35_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage35_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage35_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage35_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage35_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage35_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage35_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage35_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage35_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage35_U0_Out_I_V_d1);





    ap_sync_reg_channel_write_Stage_I_0_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_I_0_V <= ap_const_logic_0;
            else
                if (((bit_reverse25_U0_ap_done and bit_reverse25_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_I_0_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_I_0_V <= ap_sync_channel_write_Stage_I_0_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_I_1_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_I_1_V <= ap_const_logic_0;
            else
                if (((fft_stage_126_U0_ap_done and fft_stage_126_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_I_1_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_I_1_V <= ap_sync_channel_write_Stage_I_1_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_I_2_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_I_2_V <= ap_const_logic_0;
            else
                if (((fft_stage_127_U0_ap_done and fft_stage_127_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_I_2_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_I_2_V <= ap_sync_channel_write_Stage_I_2_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_I_3_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_I_3_V <= ap_const_logic_0;
            else
                if (((fft_stage_128_U0_ap_done and fft_stage_128_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_I_3_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_I_3_V <= ap_sync_channel_write_Stage_I_3_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_I_4_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_I_4_V <= ap_const_logic_0;
            else
                if (((fft_stage_129_U0_ap_done and fft_stage_129_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_I_4_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_I_4_V <= ap_sync_channel_write_Stage_I_4_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_I_5_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_I_5_V <= ap_const_logic_0;
            else
                if (((fft_stage_130_U0_ap_done and fft_stage_130_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_I_5_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_I_5_V <= ap_sync_channel_write_Stage_I_5_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_I_6_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_I_6_V <= ap_const_logic_0;
            else
                if (((fft_stage_131_U0_ap_done and fft_stage_131_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_I_6_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_I_6_V <= ap_sync_channel_write_Stage_I_6_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_I_7_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_I_7_V <= ap_const_logic_0;
            else
                if (((fft_stage_132_U0_ap_done and fft_stage_132_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_I_7_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_I_7_V <= ap_sync_channel_write_Stage_I_7_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_I_8_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_I_8_V <= ap_const_logic_0;
            else
                if (((fft_stage_133_U0_ap_done and fft_stage_133_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_I_8_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_I_8_V <= ap_sync_channel_write_Stage_I_8_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_I_9_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_I_9_V <= ap_const_logic_0;
            else
                if (((fft_stage_134_U0_ap_done and fft_stage_134_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_I_9_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_I_9_V <= ap_sync_channel_write_Stage_I_9_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_R_0_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_R_0_V <= ap_const_logic_0;
            else
                if (((bit_reverse25_U0_ap_done and bit_reverse25_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_R_0_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_R_0_V <= ap_sync_channel_write_Stage_R_0_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_R_1_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_R_1_V <= ap_const_logic_0;
            else
                if (((fft_stage_126_U0_ap_done and fft_stage_126_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_R_1_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_R_1_V <= ap_sync_channel_write_Stage_R_1_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_R_2_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_R_2_V <= ap_const_logic_0;
            else
                if (((fft_stage_127_U0_ap_done and fft_stage_127_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_R_2_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_R_2_V <= ap_sync_channel_write_Stage_R_2_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_R_3_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_R_3_V <= ap_const_logic_0;
            else
                if (((fft_stage_128_U0_ap_done and fft_stage_128_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_R_3_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_R_3_V <= ap_sync_channel_write_Stage_R_3_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_R_4_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_R_4_V <= ap_const_logic_0;
            else
                if (((fft_stage_129_U0_ap_done and fft_stage_129_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_R_4_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_R_4_V <= ap_sync_channel_write_Stage_R_4_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_R_5_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_R_5_V <= ap_const_logic_0;
            else
                if (((fft_stage_130_U0_ap_done and fft_stage_130_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_R_5_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_R_5_V <= ap_sync_channel_write_Stage_R_5_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_R_6_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_R_6_V <= ap_const_logic_0;
            else
                if (((fft_stage_131_U0_ap_done and fft_stage_131_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_R_6_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_R_6_V <= ap_sync_channel_write_Stage_R_6_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_R_7_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_R_7_V <= ap_const_logic_0;
            else
                if (((fft_stage_132_U0_ap_done and fft_stage_132_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_R_7_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_R_7_V <= ap_sync_channel_write_Stage_R_7_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_R_8_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_R_8_V <= ap_const_logic_0;
            else
                if (((fft_stage_133_U0_ap_done and fft_stage_133_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_R_8_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_R_8_V <= ap_sync_channel_write_Stage_R_8_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage_R_9_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage_R_9_V <= ap_const_logic_0;
            else
                if (((fft_stage_134_U0_ap_done and fft_stage_134_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage_R_9_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage_R_9_V <= ap_sync_channel_write_Stage_R_9_V;
                end if; 
            end if;
        end if;
    end process;

    OUT_I_V_address0 <= fft_stage35_U0_Out_I_V_address0;
    OUT_I_V_address1 <= fft_stage35_U0_Out_I_V_address1;
    OUT_I_V_ce0 <= fft_stage35_U0_Out_I_V_ce0;
    OUT_I_V_ce1 <= fft_stage35_U0_Out_I_V_ce1;
    OUT_I_V_d0 <= fft_stage35_U0_Out_I_V_d0;
    OUT_I_V_d1 <= fft_stage35_U0_Out_I_V_d1;
    OUT_I_V_we0 <= fft_stage35_U0_Out_I_V_we0;
    OUT_I_V_we1 <= fft_stage35_U0_Out_I_V_we1;
    OUT_R_V_address0 <= fft_stage35_U0_Out_R_V_address0;
    OUT_R_V_address1 <= fft_stage35_U0_Out_R_V_address1;
    OUT_R_V_ce0 <= fft_stage35_U0_Out_R_V_ce0;
    OUT_R_V_ce1 <= fft_stage35_U0_Out_R_V_ce1;
    OUT_R_V_d0 <= fft_stage35_U0_Out_R_V_d0;
    OUT_R_V_d1 <= fft_stage35_U0_Out_R_V_d1;
    OUT_R_V_we0 <= fft_stage35_U0_Out_R_V_we0;
    OUT_R_V_we1 <= fft_stage35_U0_Out_R_V_we1;
    X_I_V_address0 <= bit_reverse25_U0_X_I_V_address0;
    X_I_V_address1 <= bit_reverse25_U0_X_I_V_address1;
    X_I_V_ce0 <= bit_reverse25_U0_X_I_V_ce0;
    X_I_V_ce1 <= bit_reverse25_U0_X_I_V_ce1;
    X_I_V_d0 <= ap_const_lv22_0;
    X_I_V_d1 <= ap_const_lv22_0;
    X_I_V_we0 <= ap_const_logic_0;
    X_I_V_we1 <= ap_const_logic_0;
    X_R_V_address0 <= bit_reverse25_U0_X_R_V_address0;
    X_R_V_address1 <= bit_reverse25_U0_X_R_V_address1;
    X_R_V_ce0 <= bit_reverse25_U0_X_R_V_ce0;
    X_R_V_ce1 <= bit_reverse25_U0_X_R_V_ce1;
    X_R_V_d0 <= ap_const_lv22_0;
    X_R_V_d1 <= ap_const_lv22_0;
    X_R_V_we0 <= ap_const_logic_0;
    X_R_V_we1 <= ap_const_logic_0;
    ap_channel_done_Stage_I_0_V <= ((ap_sync_reg_channel_write_Stage_I_0_V xor ap_const_logic_1) and bit_reverse25_U0_ap_done);
    ap_channel_done_Stage_I_1_V <= (fft_stage_126_U0_ap_done and (ap_sync_reg_channel_write_Stage_I_1_V xor ap_const_logic_1));
    ap_channel_done_Stage_I_2_V <= (fft_stage_127_U0_ap_done and (ap_sync_reg_channel_write_Stage_I_2_V xor ap_const_logic_1));
    ap_channel_done_Stage_I_3_V <= (fft_stage_128_U0_ap_done and (ap_sync_reg_channel_write_Stage_I_3_V xor ap_const_logic_1));
    ap_channel_done_Stage_I_4_V <= (fft_stage_129_U0_ap_done and (ap_sync_reg_channel_write_Stage_I_4_V xor ap_const_logic_1));
    ap_channel_done_Stage_I_5_V <= (fft_stage_130_U0_ap_done and (ap_sync_reg_channel_write_Stage_I_5_V xor ap_const_logic_1));
    ap_channel_done_Stage_I_6_V <= (fft_stage_131_U0_ap_done and (ap_sync_reg_channel_write_Stage_I_6_V xor ap_const_logic_1));
    ap_channel_done_Stage_I_7_V <= (fft_stage_132_U0_ap_done and (ap_sync_reg_channel_write_Stage_I_7_V xor ap_const_logic_1));
    ap_channel_done_Stage_I_8_V <= (fft_stage_133_U0_ap_done and (ap_sync_reg_channel_write_Stage_I_8_V xor ap_const_logic_1));
    ap_channel_done_Stage_I_9_V <= (fft_stage_134_U0_ap_done and (ap_sync_reg_channel_write_Stage_I_9_V xor ap_const_logic_1));
    ap_channel_done_Stage_R_0_V <= ((ap_sync_reg_channel_write_Stage_R_0_V xor ap_const_logic_1) and bit_reverse25_U0_ap_done);
    ap_channel_done_Stage_R_1_V <= (fft_stage_126_U0_ap_done and (ap_sync_reg_channel_write_Stage_R_1_V xor ap_const_logic_1));
    ap_channel_done_Stage_R_2_V <= (fft_stage_127_U0_ap_done and (ap_sync_reg_channel_write_Stage_R_2_V xor ap_const_logic_1));
    ap_channel_done_Stage_R_3_V <= (fft_stage_128_U0_ap_done and (ap_sync_reg_channel_write_Stage_R_3_V xor ap_const_logic_1));
    ap_channel_done_Stage_R_4_V <= (fft_stage_129_U0_ap_done and (ap_sync_reg_channel_write_Stage_R_4_V xor ap_const_logic_1));
    ap_channel_done_Stage_R_5_V <= (fft_stage_130_U0_ap_done and (ap_sync_reg_channel_write_Stage_R_5_V xor ap_const_logic_1));
    ap_channel_done_Stage_R_6_V <= (fft_stage_131_U0_ap_done and (ap_sync_reg_channel_write_Stage_R_6_V xor ap_const_logic_1));
    ap_channel_done_Stage_R_7_V <= (fft_stage_132_U0_ap_done and (ap_sync_reg_channel_write_Stage_R_7_V xor ap_const_logic_1));
    ap_channel_done_Stage_R_8_V <= (fft_stage_133_U0_ap_done and (ap_sync_reg_channel_write_Stage_R_8_V xor ap_const_logic_1));
    ap_channel_done_Stage_R_9_V <= (fft_stage_134_U0_ap_done and (ap_sync_reg_channel_write_Stage_R_9_V xor ap_const_logic_1));
    ap_done <= fft_stage35_U0_ap_done;
    ap_idle <= (fft_stage_134_U0_ap_idle and fft_stage_133_U0_ap_idle and fft_stage_132_U0_ap_idle and fft_stage_131_U0_ap_idle and fft_stage_130_U0_ap_idle and fft_stage_129_U0_ap_idle and fft_stage_128_U0_ap_idle and fft_stage_127_U0_ap_idle and fft_stage_126_U0_ap_idle and fft_stage35_U0_ap_idle and (ap_const_logic_1 xor Stage_I_9_V_t_empty_n) and (ap_const_logic_1 xor Stage_R_9_V_t_empty_n) and (ap_const_logic_1 xor Stage_I_8_V_t_empty_n) and (ap_const_logic_1 xor Stage_R_8_V_t_empty_n) and (ap_const_logic_1 xor Stage_I_7_V_t_empty_n) and (ap_const_logic_1 xor Stage_R_7_V_t_empty_n) and (ap_const_logic_1 xor Stage_I_6_V_t_empty_n) and (ap_const_logic_1 xor Stage_R_6_V_t_empty_n) and (ap_const_logic_1 xor Stage_I_5_V_t_empty_n) and (ap_const_logic_1 xor Stage_R_5_V_t_empty_n) and (ap_const_logic_1 xor Stage_I_4_V_t_empty_n) and (ap_const_logic_1 xor Stage_R_4_V_t_empty_n) and (ap_const_logic_1 xor Stage_I_3_V_t_empty_n) and (ap_const_logic_1 xor Stage_R_3_V_t_empty_n) and (ap_const_logic_1 xor Stage_I_2_V_t_empty_n) and (ap_const_logic_1 xor Stage_R_2_V_t_empty_n) and (ap_const_logic_1 xor Stage_I_1_V_t_empty_n) and (ap_const_logic_1 xor Stage_R_1_V_t_empty_n) and (ap_const_logic_1 xor Stage_I_0_V_t_empty_n) and (ap_const_logic_1 xor Stage_R_0_V_t_empty_n) and bit_reverse25_U0_ap_idle);
    ap_ready <= bit_reverse25_U0_ap_ready;
    ap_sync_channel_write_Stage_I_0_V <= ((bit_reverse25_U0_OUT_I_V_full_n and ap_channel_done_Stage_I_0_V) or ap_sync_reg_channel_write_Stage_I_0_V);
    ap_sync_channel_write_Stage_I_1_V <= ((fft_stage_126_U0_Out_I_1_V_full_n and ap_channel_done_Stage_I_1_V) or ap_sync_reg_channel_write_Stage_I_1_V);
    ap_sync_channel_write_Stage_I_2_V <= ((fft_stage_127_U0_Out_I_2_V_full_n and ap_channel_done_Stage_I_2_V) or ap_sync_reg_channel_write_Stage_I_2_V);
    ap_sync_channel_write_Stage_I_3_V <= ((fft_stage_128_U0_Out_I_3_V_full_n and ap_channel_done_Stage_I_3_V) or ap_sync_reg_channel_write_Stage_I_3_V);
    ap_sync_channel_write_Stage_I_4_V <= ((fft_stage_129_U0_Out_I_4_V_full_n and ap_channel_done_Stage_I_4_V) or ap_sync_reg_channel_write_Stage_I_4_V);
    ap_sync_channel_write_Stage_I_5_V <= ((fft_stage_130_U0_Out_I_5_V_full_n and ap_channel_done_Stage_I_5_V) or ap_sync_reg_channel_write_Stage_I_5_V);
    ap_sync_channel_write_Stage_I_6_V <= ((fft_stage_131_U0_Out_I_6_V_full_n and ap_channel_done_Stage_I_6_V) or ap_sync_reg_channel_write_Stage_I_6_V);
    ap_sync_channel_write_Stage_I_7_V <= ((fft_stage_132_U0_Out_I_7_V_full_n and ap_channel_done_Stage_I_7_V) or ap_sync_reg_channel_write_Stage_I_7_V);
    ap_sync_channel_write_Stage_I_8_V <= ((fft_stage_133_U0_Out_I_8_V_full_n and ap_channel_done_Stage_I_8_V) or ap_sync_reg_channel_write_Stage_I_8_V);
    ap_sync_channel_write_Stage_I_9_V <= ((fft_stage_134_U0_Out_I_9_V_full_n and ap_channel_done_Stage_I_9_V) or ap_sync_reg_channel_write_Stage_I_9_V);
    ap_sync_channel_write_Stage_R_0_V <= ((bit_reverse25_U0_OUT_R_V_full_n and ap_channel_done_Stage_R_0_V) or ap_sync_reg_channel_write_Stage_R_0_V);
    ap_sync_channel_write_Stage_R_1_V <= ((fft_stage_126_U0_Out_R_1_V_full_n and ap_channel_done_Stage_R_1_V) or ap_sync_reg_channel_write_Stage_R_1_V);
    ap_sync_channel_write_Stage_R_2_V <= ((fft_stage_127_U0_Out_R_2_V_full_n and ap_channel_done_Stage_R_2_V) or ap_sync_reg_channel_write_Stage_R_2_V);
    ap_sync_channel_write_Stage_R_3_V <= ((fft_stage_128_U0_Out_R_3_V_full_n and ap_channel_done_Stage_R_3_V) or ap_sync_reg_channel_write_Stage_R_3_V);
    ap_sync_channel_write_Stage_R_4_V <= ((fft_stage_129_U0_Out_R_4_V_full_n and ap_channel_done_Stage_R_4_V) or ap_sync_reg_channel_write_Stage_R_4_V);
    ap_sync_channel_write_Stage_R_5_V <= ((fft_stage_130_U0_Out_R_5_V_full_n and ap_channel_done_Stage_R_5_V) or ap_sync_reg_channel_write_Stage_R_5_V);
    ap_sync_channel_write_Stage_R_6_V <= ((fft_stage_131_U0_Out_R_6_V_full_n and ap_channel_done_Stage_R_6_V) or ap_sync_reg_channel_write_Stage_R_6_V);
    ap_sync_channel_write_Stage_R_7_V <= ((fft_stage_132_U0_Out_R_7_V_full_n and ap_channel_done_Stage_R_7_V) or ap_sync_reg_channel_write_Stage_R_7_V);
    ap_sync_channel_write_Stage_R_8_V <= ((fft_stage_133_U0_Out_R_8_V_full_n and ap_channel_done_Stage_R_8_V) or ap_sync_reg_channel_write_Stage_R_8_V);
    ap_sync_channel_write_Stage_R_9_V <= ((fft_stage_134_U0_Out_R_9_V_full_n and ap_channel_done_Stage_R_9_V) or ap_sync_reg_channel_write_Stage_R_9_V);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= fft_stage35_U0_ap_done;
    ap_sync_ready <= bit_reverse25_U0_ap_ready;
    bit_reverse25_U0_OUT_I_V_full_n <= Stage_I_0_V_i_full_n;
    bit_reverse25_U0_OUT_R_V_full_n <= Stage_R_0_V_i_full_n;
    bit_reverse25_U0_ap_continue <= (ap_sync_channel_write_Stage_R_0_V and ap_sync_channel_write_Stage_I_0_V);
    bit_reverse25_U0_ap_start <= ap_start;
    bit_reverse25_U0_start_full_n <= ap_const_logic_1;
    bit_reverse25_U0_start_write <= ap_const_logic_0;
    fft_stage35_U0_ap_continue <= ap_const_logic_1;
    fft_stage35_U0_ap_start <= (Stage_R_9_V_t_empty_n and Stage_I_9_V_t_empty_n);
    fft_stage35_U0_start_full_n <= ap_const_logic_1;
    fft_stage35_U0_start_write <= ap_const_logic_0;
    fft_stage_126_U0_Out_I_1_V_full_n <= Stage_I_1_V_i_full_n;
    fft_stage_126_U0_Out_R_1_V_full_n <= Stage_R_1_V_i_full_n;
    fft_stage_126_U0_ap_continue <= (ap_sync_channel_write_Stage_R_1_V and ap_sync_channel_write_Stage_I_1_V);
    fft_stage_126_U0_ap_start <= (Stage_R_0_V_t_empty_n and Stage_I_0_V_t_empty_n);
    fft_stage_126_U0_start_full_n <= ap_const_logic_1;
    fft_stage_126_U0_start_write <= ap_const_logic_0;
    fft_stage_127_U0_Out_I_2_V_full_n <= Stage_I_2_V_i_full_n;
    fft_stage_127_U0_Out_R_2_V_full_n <= Stage_R_2_V_i_full_n;
    fft_stage_127_U0_ap_continue <= (ap_sync_channel_write_Stage_R_2_V and ap_sync_channel_write_Stage_I_2_V);
    fft_stage_127_U0_ap_start <= (Stage_R_1_V_t_empty_n and Stage_I_1_V_t_empty_n);
    fft_stage_127_U0_start_full_n <= ap_const_logic_1;
    fft_stage_127_U0_start_write <= ap_const_logic_0;
    fft_stage_128_U0_Out_I_3_V_full_n <= Stage_I_3_V_i_full_n;
    fft_stage_128_U0_Out_R_3_V_full_n <= Stage_R_3_V_i_full_n;
    fft_stage_128_U0_ap_continue <= (ap_sync_channel_write_Stage_R_3_V and ap_sync_channel_write_Stage_I_3_V);
    fft_stage_128_U0_ap_start <= (Stage_R_2_V_t_empty_n and Stage_I_2_V_t_empty_n);
    fft_stage_128_U0_start_full_n <= ap_const_logic_1;
    fft_stage_128_U0_start_write <= ap_const_logic_0;
    fft_stage_129_U0_Out_I_4_V_full_n <= Stage_I_4_V_i_full_n;
    fft_stage_129_U0_Out_R_4_V_full_n <= Stage_R_4_V_i_full_n;
    fft_stage_129_U0_ap_continue <= (ap_sync_channel_write_Stage_R_4_V and ap_sync_channel_write_Stage_I_4_V);
    fft_stage_129_U0_ap_start <= (Stage_R_3_V_t_empty_n and Stage_I_3_V_t_empty_n);
    fft_stage_129_U0_start_full_n <= ap_const_logic_1;
    fft_stage_129_U0_start_write <= ap_const_logic_0;
    fft_stage_130_U0_Out_I_5_V_full_n <= Stage_I_5_V_i_full_n;
    fft_stage_130_U0_Out_R_5_V_full_n <= Stage_R_5_V_i_full_n;
    fft_stage_130_U0_ap_continue <= (ap_sync_channel_write_Stage_R_5_V and ap_sync_channel_write_Stage_I_5_V);
    fft_stage_130_U0_ap_start <= (Stage_R_4_V_t_empty_n and Stage_I_4_V_t_empty_n);
    fft_stage_130_U0_start_full_n <= ap_const_logic_1;
    fft_stage_130_U0_start_write <= ap_const_logic_0;
    fft_stage_131_U0_Out_I_6_V_full_n <= Stage_I_6_V_i_full_n;
    fft_stage_131_U0_Out_R_6_V_full_n <= Stage_R_6_V_i_full_n;
    fft_stage_131_U0_ap_continue <= (ap_sync_channel_write_Stage_R_6_V and ap_sync_channel_write_Stage_I_6_V);
    fft_stage_131_U0_ap_start <= (Stage_R_5_V_t_empty_n and Stage_I_5_V_t_empty_n);
    fft_stage_131_U0_start_full_n <= ap_const_logic_1;
    fft_stage_131_U0_start_write <= ap_const_logic_0;
    fft_stage_132_U0_Out_I_7_V_full_n <= Stage_I_7_V_i_full_n;
    fft_stage_132_U0_Out_R_7_V_full_n <= Stage_R_7_V_i_full_n;
    fft_stage_132_U0_ap_continue <= (ap_sync_channel_write_Stage_R_7_V and ap_sync_channel_write_Stage_I_7_V);
    fft_stage_132_U0_ap_start <= (Stage_R_6_V_t_empty_n and Stage_I_6_V_t_empty_n);
    fft_stage_132_U0_start_full_n <= ap_const_logic_1;
    fft_stage_132_U0_start_write <= ap_const_logic_0;
    fft_stage_133_U0_Out_I_8_V_full_n <= Stage_I_8_V_i_full_n;
    fft_stage_133_U0_Out_R_8_V_full_n <= Stage_R_8_V_i_full_n;
    fft_stage_133_U0_ap_continue <= (ap_sync_channel_write_Stage_R_8_V and ap_sync_channel_write_Stage_I_8_V);
    fft_stage_133_U0_ap_start <= (Stage_R_7_V_t_empty_n and Stage_I_7_V_t_empty_n);
    fft_stage_133_U0_start_full_n <= ap_const_logic_1;
    fft_stage_133_U0_start_write <= ap_const_logic_0;
    fft_stage_134_U0_Out_I_9_V_full_n <= Stage_I_9_V_i_full_n;
    fft_stage_134_U0_Out_R_9_V_full_n <= Stage_R_9_V_i_full_n;
    fft_stage_134_U0_ap_continue <= (ap_sync_channel_write_Stage_R_9_V and ap_sync_channel_write_Stage_I_9_V);
    fft_stage_134_U0_ap_start <= (Stage_R_8_V_t_empty_n and Stage_I_8_V_t_empty_n);
    fft_stage_134_U0_start_full_n <= ap_const_logic_1;
    fft_stage_134_U0_start_write <= ap_const_logic_0;
end behav;
