

================================================================
== Vivado HLS Report for 'bit_reverse25'
================================================================
* Date:           Thu Jul 13 17:33:49 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        fft_stages_loop.proj
* Solution:       solution2
* Product family: zynquplus
* Target device:  xqzu5ev-ffrb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 2.704 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1027|     1027| 10.270 us | 10.270 us |  1027|  1027|   none  |
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- bit_reverse_loop  |     1025|     1025|         3|          1|          1|  1024|    yes   |
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 5 3 
3 --> 4 
4 --> 2 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 6 [1/1] (0.75ns)   --->   "br label %1" [fft_stages_loop.cpp:24]   --->   Operation 6 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 1.35>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%input_assign = phi i11 [ 0, %0 ], [ %i, %bit_reverse_loop_end ]"   --->   Operation 7 'phi' 'input_assign' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.85ns)   --->   "%icmp_ln24 = icmp eq i11 %input_assign, -1024" [fft_stages_loop.cpp:24]   --->   Operation 8 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)"   --->   Operation 9 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.94ns)   --->   "%i = add i11 %input_assign, 1" [fft_stages_loop.cpp:24]   --->   Operation 10 'add' 'i' <Predicate = true> <Delay = 0.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "br i1 %icmp_ln24, label %3, label %bit_reverse_loop_begin" [fft_stages_loop.cpp:24]   --->   Operation 11 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%reversed = call i10 @_ssdm_op_PartSelect.i10.i11.i32.i32(i11 %input_assign, i32 9, i32 0)" [fft_stages_loop.cpp:11->fft_stages_loop.cpp:25]   --->   Operation 12 'partselect' 'reversed' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i10 %reversed to i11" [fft_stages_loop.cpp:11->fft_stages_loop.cpp:25]   --->   Operation 13 'zext' 'zext_ln11' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.85ns)   --->   "%icmp_ln26 = icmp ugt i11 %input_assign, %zext_ln11" [fft_stages_loop.cpp:26]   --->   Operation 14 'icmp' 'icmp_ln26' <Predicate = (!icmp_ln24)> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "br i1 %icmp_ln26, label %bit_reverse_loop_end, label %2" [fft_stages_loop.cpp:26]   --->   Operation 15 'br' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln29 = zext i10 %reversed to i64" [fft_stages_loop.cpp:29]   --->   Operation 16 'zext' 'zext_ln29' <Predicate = (!icmp_ln24 & !icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%X_R_V_addr_1 = getelementptr [1024 x i22]* %X_R_V, i64 0, i64 %zext_ln29" [fft_stages_loop.cpp:29]   --->   Operation 17 'getelementptr' 'X_R_V_addr_1' <Predicate = (!icmp_ln24 & !icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 18 [2/2] (1.35ns)   --->   "%X_R_V_load = load i22* %X_R_V_addr_1, align 4" [fft_stages_loop.cpp:29]   --->   Operation 18 'load' 'X_R_V_load' <Predicate = (!icmp_ln24 & !icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%X_I_V_addr_1 = getelementptr [1024 x i22]* %X_I_V, i64 0, i64 %zext_ln29" [fft_stages_loop.cpp:34]   --->   Operation 19 'getelementptr' 'X_I_V_addr_1' <Predicate = (!icmp_ln24 & !icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 20 [2/2] (1.35ns)   --->   "%X_I_V_load = load i22* %X_I_V_addr_1, align 4" [fft_stages_loop.cpp:34]   --->   Operation 20 'load' 'X_I_V_load' <Predicate = (!icmp_ln24 & !icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>

State 3 <SV = 2> <Delay = 2.70>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i11 %input_assign to i64" [fft_stages_loop.cpp:28]   --->   Operation 21 'zext' 'zext_ln28' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%X_R_V_addr = getelementptr [1024 x i22]* %X_R_V, i64 0, i64 %zext_ln28" [fft_stages_loop.cpp:28]   --->   Operation 22 'getelementptr' 'X_R_V_addr' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_3 : Operation 23 [2/2] (1.35ns)   --->   "%temp_V = load i22* %X_R_V_addr, align 4" [fft_stages_loop.cpp:28]   --->   Operation 23 'load' 'temp_V' <Predicate = (!icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>
ST_3 : Operation 24 [1/2] (1.35ns)   --->   "%X_R_V_load = load i22* %X_R_V_addr_1, align 4" [fft_stages_loop.cpp:29]   --->   Operation 24 'load' 'X_R_V_load' <Predicate = (!icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%OUT_R_V_addr = getelementptr [1024 x i22]* %OUT_R_V, i64 0, i64 %zext_ln28" [fft_stages_loop.cpp:29]   --->   Operation 25 'getelementptr' 'OUT_R_V_addr' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (1.35ns)   --->   "store i22 %X_R_V_load, i22* %OUT_R_V_addr, align 4" [fft_stages_loop.cpp:29]   --->   Operation 26 'store' <Predicate = (!icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%X_I_V_addr = getelementptr [1024 x i22]* %X_I_V, i64 0, i64 %zext_ln28" [fft_stages_loop.cpp:33]   --->   Operation 27 'getelementptr' 'X_I_V_addr' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_3 : Operation 28 [2/2] (1.35ns)   --->   "%temp_V_1 = load i22* %X_I_V_addr, align 4" [fft_stages_loop.cpp:33]   --->   Operation 28 'load' 'temp_V_1' <Predicate = (!icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>
ST_3 : Operation 29 [1/2] (1.35ns)   --->   "%X_I_V_load = load i22* %X_I_V_addr_1, align 4" [fft_stages_loop.cpp:34]   --->   Operation 29 'load' 'X_I_V_load' <Predicate = (!icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%OUT_I_V_addr = getelementptr [1024 x i22]* %OUT_I_V, i64 0, i64 %zext_ln28" [fft_stages_loop.cpp:34]   --->   Operation 30 'getelementptr' 'OUT_I_V_addr' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (1.35ns)   --->   "store i22 %X_I_V_load, i22* %OUT_I_V_addr, align 4" [fft_stages_loop.cpp:34]   --->   Operation 31 'store' <Predicate = (!icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>

State 4 <SV = 3> <Delay = 2.70>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str4) nounwind" [fft_stages_loop.cpp:24]   --->   Operation 32 'specloopname' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @p_str4)" [fft_stages_loop.cpp:24]   --->   Operation 33 'specregionbegin' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind" [fft_stages_loop.cpp:25]   --->   Operation 34 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/2] (1.35ns)   --->   "%temp_V = load i22* %X_R_V_addr, align 4" [fft_stages_loop.cpp:28]   --->   Operation 35 'load' 'temp_V' <Predicate = (!icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%OUT_R_V_addr_1 = getelementptr [1024 x i22]* %OUT_R_V, i64 0, i64 %zext_ln29" [fft_stages_loop.cpp:30]   --->   Operation 36 'getelementptr' 'OUT_R_V_addr_1' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (1.35ns)   --->   "store i22 %temp_V, i22* %OUT_R_V_addr_1, align 4" [fft_stages_loop.cpp:30]   --->   Operation 37 'store' <Predicate = (!icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>
ST_4 : Operation 38 [1/2] (1.35ns)   --->   "%temp_V_1 = load i22* %X_I_V_addr, align 4" [fft_stages_loop.cpp:33]   --->   Operation 38 'load' 'temp_V_1' <Predicate = (!icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%OUT_I_V_addr_1 = getelementptr [1024 x i22]* %OUT_I_V, i64 0, i64 %zext_ln29" [fft_stages_loop.cpp:35]   --->   Operation 39 'getelementptr' 'OUT_I_V_addr_1' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (1.35ns)   --->   "store i22 %temp_V_1, i22* %OUT_I_V_addr_1, align 4" [fft_stages_loop.cpp:35]   --->   Operation 40 'store' <Predicate = (!icmp_ln26)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 22> <Depth = 1024> <RAM>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "br label %bit_reverse_loop_end" [fft_stages_loop.cpp:36]   --->   Operation 41 'br' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%empty_21 = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @p_str4, i32 %tmp)" [fft_stages_loop.cpp:37]   --->   Operation 42 'specregionend' 'empty_21' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "br label %1" [fft_stages_loop.cpp:24]   --->   Operation 43 'br' <Predicate = (!icmp_ln24)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "ret void" [fft_stages_loop.cpp:38]   --->   Operation 44 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', fft_stages_loop.cpp:24) [7]  (0.755 ns)

 <State 2>: 1.35ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', fft_stages_loop.cpp:24) [7]  (0 ns)
	'getelementptr' operation ('X_R_V_addr_1', fft_stages_loop.cpp:29) [25]  (0 ns)
	'load' operation ('X_R_V_load', fft_stages_loop.cpp:29) on array 'X_R_V' [26]  (1.35 ns)

 <State 3>: 2.7ns
The critical path consists of the following:
	'load' operation ('X_R_V_load', fft_stages_loop.cpp:29) on array 'X_R_V' [26]  (1.35 ns)
	'store' operation ('store_ln29', fft_stages_loop.cpp:29) of variable 'X_R_V_load', fft_stages_loop.cpp:29 on array 'OUT_R_V' [28]  (1.35 ns)

 <State 4>: 2.7ns
The critical path consists of the following:
	'load' operation ('temp.V', fft_stages_loop.cpp:28) on array 'X_R_V' [23]  (1.35 ns)
	'store' operation ('store_ln30', fft_stages_loop.cpp:30) of variable 'temp.V', fft_stages_loop.cpp:28 on array 'OUT_R_V' [30]  (1.35 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
