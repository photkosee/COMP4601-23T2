-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_stage88 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_R_V_ce0 : OUT STD_LOGIC;
    X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_R_V_ce1 : OUT STD_LOGIC;
    X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_I_V_ce0 : OUT STD_LOGIC;
    X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_I_V_ce1 : OUT STD_LOGIC;
    X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
    Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    Out_R_V_ce0 : OUT STD_LOGIC;
    Out_R_V_we0 : OUT STD_LOGIC;
    Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    Out_R_V_ce1 : OUT STD_LOGIC;
    Out_R_V_we1 : OUT STD_LOGIC;
    Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
    Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    Out_I_V_ce0 : OUT STD_LOGIC;
    Out_I_V_we0 : OUT STD_LOGIC;
    Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    Out_I_V_ce1 : OUT STD_LOGIC;
    Out_I_V_we1 : OUT STD_LOGIC;
    Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
end;


architecture behav of fft_stage88 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv22_3FFFFF : STD_LOGIC_VECTOR (21 downto 0) := "1111111111111111111111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv22_3FFFCB : STD_LOGIC_VECTOR (21 downto 0) := "1111111111111111001011";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv14_3FCD : STD_LOGIC_VECTOR (13 downto 0) := "11111111001101";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_B : STD_LOGIC_VECTOR (10 downto 0) := "00000001011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_B : STD_LOGIC_VECTOR (11 downto 0) := "000000001011";
    constant ap_const_lv12_FF5 : STD_LOGIC_VECTOR (11 downto 0) := "111111110101";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_16 : STD_LOGIC_VECTOR (11 downto 0) := "000000010110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv22_1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal zext_ln891_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln891_reg_1335 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal j_fu_329_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_reg_1343 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln885_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln885_reg_1348 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_s_reg_1353 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_26_reg_1358 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln893_fu_577_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln893_reg_1363 : STD_LOGIC_VECTOR (10 downto 0);
    signal a_V_fu_581_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal a_V_reg_1368 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln885_fu_632_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln885_reg_1373 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_sin_or_cos_double_s_fu_281_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal v_assign_reg_1379 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_sin_or_cos_double_s_fu_281_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_281_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_300_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_300_ap_done : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal grp_sin_or_cos_double_s_fu_300_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal v_assign_3_reg_1384 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1118_fu_1199_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln1118_reg_1389 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sext_ln1118_7_fu_1203_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln1118_7_reg_1395 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln55_fu_1229_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_reg_1404 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln53_fu_1217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln57_fu_1235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln57_reg_1420 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_5_fu_1241_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_5_reg_1436 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_double_s_fu_281_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_281_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_281_do_cos : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_300_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_300_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_300_do_cos : STD_LOGIC;
    signal tmp_V_reg_250 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal i_reg_261 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_0_reg_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_sin_or_cos_double_s_fu_281_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_or_cos_double_s_fu_300_ap_start_reg : STD_LOGIC := '0';
    signal tmp_V_6_fu_341_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln889_fu_347_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Result_s_fu_351_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Result_58_fu_361_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_369_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln894_fu_377_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_393_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln897_fu_409_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln897_fu_413_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln897_fu_419_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal lshr_ln897_fu_423_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Result_51_fu_429_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal icmp_ln897_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln897_1_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_447_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln894_fu_383_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln899_fu_461_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Result_52_fu_467_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln899_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln899_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln899_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln907_3_fu_499_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln908_fu_509_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln908_fu_515_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln908_fu_525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fu_495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln908_1_fu_531_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln908_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln908_fu_521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln908_fu_535_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln_fu_487_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln911_fu_549_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_12_fu_541_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_13_fu_553_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln915_fu_597_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln915_fu_590_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln915_fu_602_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal m_16_fu_587_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_608_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_59_fu_616_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln729_fu_628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_641_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_656_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_670_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_2_fu_674_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_61_fu_682_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_60_fu_648_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_11_fu_686_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_fu_644_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_1_fu_666_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_706_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_1_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_1_fu_718_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_1_fu_724_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_730_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_12_fu_692_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln581_fu_738_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_1_fu_768_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_1_fu_772_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_28_fu_782_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_752_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln581_7_fu_742_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal icmp_ln571_1_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_1_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_1_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_1_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_1_fu_798_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln586_fu_778_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal and_ln585_7_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_790_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal and_ln582_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_fu_870_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln603_15_fu_884_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal or_ln603_11_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_12_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_16_fu_898_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal ireg_V_3_fu_920_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_3_fu_935_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_3_fu_949_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_3_fu_953_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_63_fu_961_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_62_fu_927_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_14_fu_965_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_3_fu_923_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_fu_945_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_3_fu_985_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_997_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_1003_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_3_fu_1009_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_15_fu_971_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln581_8_fu_1017_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_fu_1047_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_1051_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_30_fu_1061_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_3_fu_1031_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln581_9_fu_1021_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal icmp_ln571_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_fu_1025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_3_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_3_fu_1095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_3_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_3_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_3_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_3_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_3_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_3_fu_1143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_1077_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln586_3_fu_1057_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal and_ln585_9_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_8_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_3_fu_1069_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal and_ln582_3_fu_1089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_13_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_18_fu_1149_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln603_19_fu_1163_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal or_ln603_14_fu_1171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_15_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_20_fu_1177_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal c_V_fu_912_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal s_V_fu_1191_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_31_fu_1207_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal i_lower_fu_1223_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln700_fu_1255_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln700_fu_1255_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_8_fu_1247_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln1193_fu_1260_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1193_fu_1260_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_9_fu_1251_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln700_fu_1255_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln1193_fu_1260_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_fu_1265_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln700_3_fu_1281_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln700_3_fu_1281_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_fu_1286_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_fu_1286_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_fu_1286_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln700_3_fu_1281_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_15_fu_1291_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal temp_R_V_fu_1271_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal temp_I_V_fu_1297_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);

    component sin_or_cos_double_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (63 downto 0);
        do_cos : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_sin_or_cos_double_s_fu_281 : component sin_or_cos_double_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_double_s_fu_281_ap_start,
        ap_done => grp_sin_or_cos_double_s_fu_281_ap_done,
        ap_idle => grp_sin_or_cos_double_s_fu_281_ap_idle,
        ap_ready => grp_sin_or_cos_double_s_fu_281_ap_ready,
        t_in => select_ln885_reg_1373,
        do_cos => grp_sin_or_cos_double_s_fu_281_do_cos,
        ap_return => grp_sin_or_cos_double_s_fu_281_ap_return);

    grp_sin_or_cos_double_s_fu_300 : component sin_or_cos_double_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_double_s_fu_300_ap_start,
        ap_done => grp_sin_or_cos_double_s_fu_300_ap_done,
        ap_idle => grp_sin_or_cos_double_s_fu_300_ap_idle,
        ap_ready => grp_sin_or_cos_double_s_fu_300_ap_ready,
        t_in => select_ln885_reg_1373,
        do_cos => grp_sin_or_cos_double_s_fu_300_do_cos,
        ap_return => grp_sin_or_cos_double_s_fu_300_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln47_fu_323_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_double_s_fu_281_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_double_s_fu_281_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_sin_or_cos_double_s_fu_281_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_double_s_fu_281_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_double_s_fu_281_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_double_s_fu_300_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_double_s_fu_300_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_sin_or_cos_double_s_fu_300_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_double_s_fu_300_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_double_s_fu_300_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_0_reg_272 <= i_5_reg_1436;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_0_reg_272 <= zext_ln891_reg_1335;
            end if; 
        end if;
    end process;

    i_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_fu_1217_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_reg_261 <= j_reg_1343;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_261 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    tmp_V_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln53_fu_1217_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                tmp_V_reg_250 <= a_V_reg_1368;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tmp_V_reg_250 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln47_fu_323_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                a_V_reg_1368 <= a_V_fu_581_p2;
                icmp_ln885_reg_1348 <= icmp_ln885_fu_335_p2;
                m_s_reg_1353 <= m_13_fu_553_p2(63 downto 1);
                tmp_26_reg_1358 <= m_13_fu_553_p2(54 downto 54);
                trunc_ln893_reg_1363 <= trunc_ln893_fu_577_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln53_fu_1217_p2 = ap_const_lv1_1))) then
                i_5_reg_1436 <= i_5_fu_1241_p2;
                sext_ln55_reg_1404 <= sext_ln55_fu_1229_p1;
                sext_ln57_reg_1420 <= sext_ln57_fu_1235_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                j_reg_1343 <= j_fu_329_p2;
                    zext_ln891_reg_1335(7 downto 0) <= zext_ln891_fu_319_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                select_ln885_reg_1373 <= select_ln885_fu_632_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                sext_ln1118_7_reg_1395 <= sext_ln1118_7_fu_1203_p1;
                sext_ln1118_reg_1389 <= sext_ln1118_fu_1199_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                v_assign_3_reg_1384 <= grp_sin_or_cos_double_s_fu_300_ap_return;
                v_assign_reg_1379 <= grp_sin_or_cos_double_s_fu_281_ap_return;
            end if;
        end if;
    end process;
    zext_ln891_reg_1335(31 downto 8) <= "000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln47_fu_323_p2, ap_CS_fsm_state4, ap_block_state4_on_subcall_done, ap_CS_fsm_state6, icmp_ln53_fu_1217_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln47_fu_323_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln53_fu_1217_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    F2_3_fu_985_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_945_p1));
    F2_fu_706_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_1_fu_666_p1));
    Out_I_V_address0 <= sext_ln55_reg_1404(10 - 1 downto 0);
    Out_I_V_address1 <= sext_ln57_reg_1420(10 - 1 downto 0);

    Out_I_V_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            Out_I_V_ce0 <= ap_const_logic_1;
        else 
            Out_I_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Out_I_V_ce1_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            Out_I_V_ce1 <= ap_const_logic_1;
        else 
            Out_I_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Out_I_V_d0 <= std_logic_vector(unsigned(X_I_V_q1) - unsigned(temp_I_V_fu_1297_p4));
    Out_I_V_d1 <= std_logic_vector(unsigned(X_I_V_q1) + unsigned(temp_I_V_fu_1297_p4));

    Out_I_V_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            Out_I_V_we0 <= ap_const_logic_1;
        else 
            Out_I_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Out_I_V_we1_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            Out_I_V_we1 <= ap_const_logic_1;
        else 
            Out_I_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    Out_R_V_address0 <= sext_ln55_reg_1404(10 - 1 downto 0);
    Out_R_V_address1 <= sext_ln57_reg_1420(10 - 1 downto 0);

    Out_R_V_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            Out_R_V_ce0 <= ap_const_logic_1;
        else 
            Out_R_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Out_R_V_ce1_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            Out_R_V_ce1 <= ap_const_logic_1;
        else 
            Out_R_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Out_R_V_d0 <= std_logic_vector(unsigned(X_R_V_q1) - unsigned(temp_R_V_fu_1271_p4));
    Out_R_V_d1 <= std_logic_vector(unsigned(X_R_V_q1) + unsigned(temp_R_V_fu_1271_p4));

    Out_R_V_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            Out_R_V_we0 <= ap_const_logic_1;
        else 
            Out_R_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Out_R_V_we1_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            Out_R_V_we1 <= ap_const_logic_1;
        else 
            Out_R_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    X_I_V_address0 <= sext_ln55_fu_1229_p1(10 - 1 downto 0);
    X_I_V_address1 <= sext_ln57_fu_1235_p1(10 - 1 downto 0);

    X_I_V_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            X_I_V_ce0 <= ap_const_logic_1;
        else 
            X_I_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_V_ce1_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            X_I_V_ce1 <= ap_const_logic_1;
        else 
            X_I_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    X_R_V_address0 <= sext_ln55_fu_1229_p1(10 - 1 downto 0);
    X_R_V_address1 <= sext_ln57_fu_1235_p1(10 - 1 downto 0);

    X_R_V_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            X_R_V_ce0 <= ap_const_logic_1;
        else 
            X_R_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_V_ce1_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            X_R_V_ce1 <= ap_const_logic_1;
        else 
            X_R_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    a_V_fu_581_p2 <= std_logic_vector(signed(ap_const_lv14_3FCD) + signed(tmp_V_reg_250));
    a_fu_441_p2 <= (icmp_ln897_fu_403_p2 and icmp_ln897_1_fu_435_p2);
    add_ln581_1_fu_718_p2 <= std_logic_vector(signed(ap_const_lv12_FF5) + signed(F2_fu_706_p2));
    add_ln581_fu_997_p2 <= std_logic_vector(signed(ap_const_lv12_FF5) + signed(F2_3_fu_985_p2));
    add_ln899_fu_461_p2 <= std_logic_vector(signed(ap_const_lv22_3FFFCB) + signed(trunc_ln894_fu_383_p1));
    add_ln908_fu_509_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCA) + signed(sub_ln894_fu_377_p2));
    add_ln915_fu_602_p2 <= std_logic_vector(unsigned(sub_ln915_fu_597_p2) + unsigned(select_ln915_fu_590_p3));
    and_ln581_3_fu_1107_p2 <= (xor_ln582_3_fu_1101_p2 and icmp_ln581_fu_991_p2);
    and_ln581_fu_828_p2 <= (xor_ln582_fu_822_p2 and icmp_ln581_1_fu_712_p2);
    and_ln582_3_fu_1089_p2 <= (xor_ln571_3_fu_1083_p2 and icmp_ln582_fu_1025_p2);
    and_ln582_fu_810_p2 <= (xor_ln571_fu_804_p2 and icmp_ln582_1_fu_746_p2);
    and_ln585_7_fu_846_p2 <= (icmp_ln585_1_fu_756_p2 and and_ln581_fu_828_p2);
    and_ln585_8_fu_1119_p2 <= (xor_ln585_3_fu_1113_p2 and and_ln581_3_fu_1107_p2);
    and_ln585_9_fu_1125_p2 <= (icmp_ln585_fu_1035_p2 and and_ln581_3_fu_1107_p2);
    and_ln585_fu_840_p2 <= (xor_ln585_fu_834_p2 and and_ln581_fu_828_p2);
    and_ln603_3_fu_1143_p2 <= (xor_ln581_3_fu_1137_p2 and icmp_ln603_fu_1041_p2);
    and_ln603_fu_864_p2 <= (xor_ln581_fu_858_p2 and icmp_ln603_1_fu_762_p2);
    and_ln899_fu_475_p2 <= (xor_ln899_fu_455_p2 and p_Result_52_fu_467_p3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_sin_or_cos_double_s_fu_281_ap_done, grp_sin_or_cos_double_s_fu_300_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_sin_or_cos_double_s_fu_300_ap_done = ap_const_logic_0) or (grp_sin_or_cos_double_s_fu_281_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln47_fu_323_p2)
    begin
        if (((icmp_ln47_fu_323_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln47_fu_323_p2)
    begin
        if (((icmp_ln47_fu_323_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_1_fu_772_p2 <= std_logic_vector(shift_right(signed(man_V_12_fu_692_p3),to_integer(unsigned('0' & zext_ln586_1_fu_768_p1(31-1 downto 0)))));
    ashr_ln586_fu_1051_p2 <= std_logic_vector(shift_right(signed(man_V_15_fu_971_p3),to_integer(unsigned('0' & zext_ln586_fu_1047_p1(31-1 downto 0)))));
    bitcast_ln729_fu_628_p1 <= p_Result_59_fu_616_p5;
    c_V_fu_912_p3 <= 
        select_ln603_16_fu_898_p3 when (or_ln603_12_fu_906_p2(0) = '1') else 
        ap_const_lv22_0;
    exp_tmp_V_3_fu_935_p4 <= ireg_V_3_fu_920_p1(62 downto 52);
    exp_tmp_V_fu_656_p4 <= ireg_V_fu_641_p1(62 downto 52);
    grp_sin_or_cos_double_s_fu_281_ap_start <= grp_sin_or_cos_double_s_fu_281_ap_start_reg;
    grp_sin_or_cos_double_s_fu_281_do_cos <= ap_const_logic_1;
    grp_sin_or_cos_double_s_fu_300_ap_start <= grp_sin_or_cos_double_s_fu_300_ap_start_reg;
    grp_sin_or_cos_double_s_fu_300_do_cos <= ap_const_logic_0;
    i_5_fu_1241_p2 <= std_logic_vector(signed(i_0_reg_272) + signed(ap_const_lv32_100));
    i_lower_fu_1223_p2 <= std_logic_vector(signed(i_0_reg_272) + signed(ap_const_lv32_80));
    icmp_ln47_fu_323_p2 <= "1" when (i_reg_261 = ap_const_lv8_80) else "0";
    icmp_ln53_fu_1217_p2 <= "1" when (signed(tmp_31_fu_1207_p4) < signed(ap_const_lv22_1)) else "0";
    icmp_ln571_1_fu_700_p2 <= "1" when (trunc_ln556_fu_644_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_fu_979_p2 <= "1" when (trunc_ln556_3_fu_923_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_1_fu_712_p2 <= "1" when (signed(F2_fu_706_p2) > signed(ap_const_lv12_B)) else "0";
    icmp_ln581_fu_991_p2 <= "1" when (signed(F2_3_fu_985_p2) > signed(ap_const_lv12_B)) else "0";
    icmp_ln582_1_fu_746_p2 <= "1" when (F2_fu_706_p2 = ap_const_lv12_B) else "0";
    icmp_ln582_fu_1025_p2 <= "1" when (F2_3_fu_985_p2 = ap_const_lv12_B) else "0";
    icmp_ln585_1_fu_756_p2 <= "1" when (unsigned(sh_amt_fu_730_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_fu_1035_p2 <= "1" when (unsigned(sh_amt_3_fu_1009_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_1_fu_762_p2 <= "1" when (unsigned(sh_amt_fu_730_p3) < unsigned(ap_const_lv12_16)) else "0";
    icmp_ln603_fu_1041_p2 <= "1" when (unsigned(sh_amt_3_fu_1009_p3) < unsigned(ap_const_lv12_16)) else "0";
    icmp_ln885_fu_335_p2 <= "1" when (tmp_V_reg_250 = ap_const_lv14_0) else "0";
    icmp_ln897_1_fu_435_p2 <= "0" when (p_Result_51_fu_429_p2 = ap_const_lv22_0) else "1";
    icmp_ln897_fu_403_p2 <= "1" when (signed(tmp_fu_393_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln908_fu_503_p2 <= "1" when (signed(lsb_index_fu_387_p2) > signed(ap_const_lv32_0)) else "0";
    ireg_V_3_fu_920_p1 <= v_assign_3_reg_1384;
    ireg_V_fu_641_p1 <= v_assign_reg_1379;
    j_fu_329_p2 <= std_logic_vector(unsigned(i_reg_261) + unsigned(ap_const_lv8_1));
    
    l_fu_369_p3_proc : process(p_Result_58_fu_361_p3)
    begin
        l_fu_369_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_58_fu_361_p3(i) = '1' then
                l_fu_369_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_fu_387_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFCB) + signed(sub_ln894_fu_377_p2));
    lshr_ln897_fu_423_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv22_3FFFFF),to_integer(unsigned('0' & zext_ln897_fu_419_p1(22-1 downto 0)))));
    lshr_ln908_fu_515_p2 <= std_logic_vector(shift_right(unsigned(zext_ln907_3_fu_499_p1),to_integer(unsigned('0' & add_ln908_fu_509_p2(31-1 downto 0)))));
    m_12_fu_541_p3 <= 
        zext_ln908_fu_521_p1 when (icmp_ln908_fu_503_p2(0) = '1') else 
        shl_ln908_fu_535_p2;
    m_13_fu_553_p2 <= std_logic_vector(unsigned(zext_ln911_fu_549_p1) + unsigned(m_12_fu_541_p3));
    m_16_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_s_reg_1353),64));
    m_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_6_fu_341_p2),64));
    man_V_11_fu_686_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_61_fu_682_p1));
    man_V_12_fu_692_p3 <= 
        man_V_11_fu_686_p2 when (p_Result_60_fu_648_p3(0) = '1') else 
        p_Result_61_fu_682_p1;
    man_V_14_fu_965_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_63_fu_961_p1));
    man_V_15_fu_971_p3 <= 
        man_V_14_fu_965_p2 when (p_Result_62_fu_927_p3(0) = '1') else 
        p_Result_63_fu_961_p1;
    mul_ln1192_fu_1286_p0 <= sext_ln1118_7_reg_1395(22 - 1 downto 0);
    mul_ln1192_fu_1286_p1 <= sext_ln1118_8_fu_1247_p1(22 - 1 downto 0);
    mul_ln1192_fu_1286_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_fu_1286_p0) * signed(mul_ln1192_fu_1286_p1))), 33));
    mul_ln1193_fu_1260_p0 <= sext_ln1118_7_reg_1395(22 - 1 downto 0);
    mul_ln1193_fu_1260_p1 <= sext_ln1118_9_fu_1251_p1(22 - 1 downto 0);
    mul_ln1193_fu_1260_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1193_fu_1260_p0) * signed(mul_ln1193_fu_1260_p1))), 33));
    mul_ln700_3_fu_1281_p0 <= sext_ln1118_9_fu_1251_p1(22 - 1 downto 0);
    mul_ln700_3_fu_1281_p1 <= sext_ln1118_reg_1389(22 - 1 downto 0);
    mul_ln700_3_fu_1281_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_3_fu_1281_p0) * signed(mul_ln700_3_fu_1281_p1))), 33));
    mul_ln700_fu_1255_p0 <= sext_ln1118_reg_1389(22 - 1 downto 0);
    mul_ln700_fu_1255_p1 <= sext_ln1118_8_fu_1247_p1(22 - 1 downto 0);
    mul_ln700_fu_1255_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_fu_1255_p0) * signed(mul_ln700_fu_1255_p1))), 33));
    or_ln581_3_fu_1131_p2 <= (or_ln582_3_fu_1095_p2 or icmp_ln581_fu_991_p2);
    or_ln581_fu_852_p2 <= (or_ln582_fu_816_p2 or icmp_ln581_1_fu_712_p2);
    or_ln582_3_fu_1095_p2 <= (icmp_ln582_fu_1025_p2 or icmp_ln571_fu_979_p2);
    or_ln582_fu_816_p2 <= (icmp_ln582_1_fu_746_p2 or icmp_ln571_1_fu_700_p2);
    or_ln603_11_fu_892_p2 <= (and_ln585_fu_840_p2 or and_ln582_fu_810_p2);
    or_ln603_12_fu_906_p2 <= (or_ln603_fu_878_p2 or or_ln603_11_fu_892_p2);
    or_ln603_13_fu_1157_p2 <= (and_ln603_3_fu_1143_p2 or and_ln585_9_fu_1125_p2);
    or_ln603_14_fu_1171_p2 <= (and_ln585_8_fu_1119_p2 or and_ln582_3_fu_1089_p2);
    or_ln603_15_fu_1185_p2 <= (or_ln603_14_fu_1171_p2 or or_ln603_13_fu_1157_p2);
    or_ln603_fu_878_p2 <= (and_ln603_fu_864_p2 or and_ln585_7_fu_846_p2);
    or_ln899_fu_481_p2 <= (and_ln899_fu_475_p2 or a_fu_441_p2);
    or_ln_fu_487_p3 <= (ap_const_lv31_0 & or_ln899_fu_481_p2);
    p_Result_51_fu_429_p2 <= (zext_ln889_fu_347_p1 and lshr_ln897_fu_423_p2);
    p_Result_52_fu_467_p3 <= zext_ln889_fu_347_p1(to_integer(unsigned(add_ln899_fu_461_p2)) downto to_integer(unsigned(add_ln899_fu_461_p2))) when (to_integer(unsigned(add_ln899_fu_461_p2))>= 0 and to_integer(unsigned(add_ln899_fu_461_p2))<=21) else "-";
    p_Result_58_fu_361_p3 <= (ap_const_lv10_3FF & p_Result_s_fu_351_p4);
    p_Result_59_fu_616_p5 <= (tmp_1_fu_608_p3 & m_16_fu_587_p1(51 downto 0));
    p_Result_60_fu_648_p3 <= ireg_V_fu_641_p1(63 downto 63);
    p_Result_61_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_674_p3),54));
    p_Result_62_fu_927_p3 <= ireg_V_3_fu_920_p1(63 downto 63);
    p_Result_63_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_953_p3),54));
    
    p_Result_s_fu_351_p4_proc : process(zext_ln889_fu_347_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(22+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(22+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(22 - 1 downto 0);
    variable p_Result_s_fu_351_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(22 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(22 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(22 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_15(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := zext_ln889_fu_347_p1;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(22-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(22-1-unsigned(ap_const_lv32_15(5-1 downto 0)));
            for p_Result_s_fu_351_p4_i in 0 to 22-1 loop
                v0_cpy(p_Result_s_fu_351_p4_i) := zext_ln889_fu_347_p1(22-1-p_Result_s_fu_351_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(22-1 downto 0)))));
        res_mask := res_mask(22-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_351_p4 <= resvalue(22-1 downto 0);
    end process;

    ret_V_15_fu_1291_p2 <= std_logic_vector(unsigned(mul_ln1192_fu_1286_p2) + unsigned(mul_ln700_3_fu_1281_p2));
    ret_V_fu_1265_p2 <= std_logic_vector(unsigned(mul_ln700_fu_1255_p2) - unsigned(mul_ln1193_fu_1260_p2));
    s_V_fu_1191_p3 <= 
        select_ln603_20_fu_1177_p3 when (or_ln603_15_fu_1185_p2(0) = '1') else 
        ap_const_lv22_0;
    select_ln588_3_fu_1069_p3 <= 
        ap_const_lv22_3FFFFF when (tmp_30_fu_1061_p3(0) = '1') else 
        ap_const_lv22_0;
    select_ln588_fu_790_p3 <= 
        ap_const_lv22_3FFFFF when (tmp_28_fu_782_p3(0) = '1') else 
        ap_const_lv22_0;
    select_ln603_15_fu_884_p3 <= 
        select_ln588_fu_790_p3 when (and_ln585_fu_840_p2(0) = '1') else 
        trunc_ln583_fu_752_p1;
    select_ln603_16_fu_898_p3 <= 
        select_ln603_fu_870_p3 when (or_ln603_fu_878_p2(0) = '1') else 
        select_ln603_15_fu_884_p3;
    select_ln603_18_fu_1149_p3 <= 
        shl_ln604_fu_1077_p2 when (and_ln603_3_fu_1143_p2(0) = '1') else 
        trunc_ln586_3_fu_1057_p1;
    select_ln603_19_fu_1163_p3 <= 
        select_ln588_3_fu_1069_p3 when (and_ln585_8_fu_1119_p2(0) = '1') else 
        trunc_ln583_3_fu_1031_p1;
    select_ln603_20_fu_1177_p3 <= 
        select_ln603_18_fu_1149_p3 when (or_ln603_13_fu_1157_p2(0) = '1') else 
        select_ln603_19_fu_1163_p3;
    select_ln603_fu_870_p3 <= 
        shl_ln604_1_fu_798_p2 when (and_ln603_fu_864_p2(0) = '1') else 
        trunc_ln586_fu_778_p1;
    select_ln885_fu_632_p3 <= 
        ap_const_lv64_0 when (icmp_ln885_reg_1348(0) = '1') else 
        bitcast_ln729_fu_628_p1;
    select_ln915_fu_590_p3 <= 
        ap_const_lv11_3FF when (tmp_26_reg_1358(0) = '1') else 
        ap_const_lv11_3FE;
        sext_ln1118_7_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_V_fu_1191_p3),33));

        sext_ln1118_8_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(X_R_V_q0),33));

        sext_ln1118_9_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(X_I_V_q0),33));

        sext_ln1118_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_V_fu_912_p3),33));

        sext_ln55_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_lower_fu_1223_p2),64));

        sext_ln57_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_0_reg_272),64));

        sext_ln581_7_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_730_p3),22));

        sext_ln581_8_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_3_fu_1009_p3),32));

        sext_ln581_9_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_3_fu_1009_p3),22));

        sext_ln581_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_730_p3),32));

    sh_amt_3_fu_1009_p3 <= 
        add_ln581_fu_997_p2 when (icmp_ln581_fu_991_p2(0) = '1') else 
        sub_ln581_fu_1003_p2;
    sh_amt_fu_730_p3 <= 
        add_ln581_1_fu_718_p2 when (icmp_ln581_1_fu_712_p2(0) = '1') else 
        sub_ln581_1_fu_724_p2;
    shl_ln604_1_fu_798_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_fu_752_p1),to_integer(unsigned('0' & sext_ln581_7_fu_742_p1(22-1 downto 0)))));
    shl_ln604_fu_1077_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_3_fu_1031_p1),to_integer(unsigned('0' & sext_ln581_9_fu_1021_p1(22-1 downto 0)))));
    shl_ln908_fu_535_p2 <= std_logic_vector(shift_left(unsigned(m_fu_495_p1),to_integer(unsigned('0' & zext_ln908_1_fu_531_p1(31-1 downto 0)))));
    sub_ln581_1_fu_724_p2 <= std_logic_vector(unsigned(ap_const_lv12_B) - unsigned(F2_fu_706_p2));
    sub_ln581_fu_1003_p2 <= std_logic_vector(unsigned(ap_const_lv12_B) - unsigned(F2_3_fu_985_p2));
    sub_ln894_fu_377_p2 <= std_logic_vector(unsigned(ap_const_lv32_16) - unsigned(l_fu_369_p3));
    sub_ln897_fu_413_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) - unsigned(trunc_ln897_fu_409_p1));
    sub_ln908_fu_525_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln894_fu_377_p2));
    sub_ln915_fu_597_p2 <= std_logic_vector(unsigned(ap_const_lv11_B) - unsigned(trunc_ln893_reg_1363));
    temp_I_V_fu_1297_p4 <= ret_V_15_fu_1291_p2(32 downto 11);
    temp_R_V_fu_1271_p4 <= ret_V_fu_1265_p2(32 downto 11);
    tmp_1_fu_608_p3 <= (ap_const_lv1_1 & add_ln915_fu_602_p2);
    tmp_25_fu_447_p3 <= lsb_index_fu_387_p2(31 downto 31);
    tmp_28_fu_782_p3 <= ireg_V_fu_641_p1(63 downto 63);
    tmp_2_fu_674_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_670_p1);
    tmp_30_fu_1061_p3 <= ireg_V_3_fu_920_p1(63 downto 63);
    tmp_31_fu_1207_p4 <= i_0_reg_272(31 downto 10);
    tmp_3_fu_953_p3 <= (ap_const_lv1_1 & trunc_ln565_3_fu_949_p1);
    tmp_V_6_fu_341_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(tmp_V_reg_250));
    tmp_fu_393_p4 <= lsb_index_fu_387_p2(31 downto 1);
    trunc_ln556_3_fu_923_p1 <= ireg_V_3_fu_920_p1(63 - 1 downto 0);
    trunc_ln556_fu_644_p1 <= ireg_V_fu_641_p1(63 - 1 downto 0);
    trunc_ln565_3_fu_949_p1 <= ireg_V_3_fu_920_p1(52 - 1 downto 0);
    trunc_ln565_fu_670_p1 <= ireg_V_fu_641_p1(52 - 1 downto 0);
    trunc_ln583_3_fu_1031_p1 <= man_V_15_fu_971_p3(22 - 1 downto 0);
    trunc_ln583_fu_752_p1 <= man_V_12_fu_692_p3(22 - 1 downto 0);
    trunc_ln586_3_fu_1057_p1 <= ashr_ln586_fu_1051_p2(22 - 1 downto 0);
    trunc_ln586_fu_778_p1 <= ashr_ln586_1_fu_772_p2(22 - 1 downto 0);
    trunc_ln893_fu_577_p1 <= l_fu_369_p3(11 - 1 downto 0);
    trunc_ln894_fu_383_p1 <= sub_ln894_fu_377_p2(22 - 1 downto 0);
    trunc_ln897_fu_409_p1 <= sub_ln894_fu_377_p2(5 - 1 downto 0);
    xor_ln571_3_fu_1083_p2 <= (icmp_ln571_fu_979_p2 xor ap_const_lv1_1);
    xor_ln571_fu_804_p2 <= (icmp_ln571_1_fu_700_p2 xor ap_const_lv1_1);
    xor_ln581_3_fu_1137_p2 <= (or_ln581_3_fu_1131_p2 xor ap_const_lv1_1);
    xor_ln581_fu_858_p2 <= (or_ln581_fu_852_p2 xor ap_const_lv1_1);
    xor_ln582_3_fu_1101_p2 <= (or_ln582_3_fu_1095_p2 xor ap_const_lv1_1);
    xor_ln582_fu_822_p2 <= (or_ln582_fu_816_p2 xor ap_const_lv1_1);
    xor_ln585_3_fu_1113_p2 <= (icmp_ln585_fu_1035_p2 xor ap_const_lv1_1);
    xor_ln585_fu_834_p2 <= (icmp_ln585_1_fu_756_p2 xor ap_const_lv1_1);
    xor_ln899_fu_455_p2 <= (tmp_25_fu_447_p3 xor ap_const_lv1_1);
    zext_ln461_1_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_656_p4),12));
    zext_ln461_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_3_fu_935_p4),12));
    zext_ln586_1_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_738_p1),54));
    zext_ln586_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_8_fu_1017_p1),54));
    zext_ln889_fu_347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_6_fu_341_p2),22));
    zext_ln891_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_261),32));
    zext_ln897_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln897_fu_413_p2),22));
    zext_ln907_3_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_6_fu_341_p2),32));
    zext_ln908_1_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln908_fu_525_p2),64));
    zext_ln908_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln908_fu_515_p2),64));
    zext_ln911_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_487_p3),64));
end behav;
