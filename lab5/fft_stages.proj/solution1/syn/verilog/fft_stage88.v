// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft_stage88 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        X_R_V_address0,
        X_R_V_ce0,
        X_R_V_q0,
        X_R_V_address1,
        X_R_V_ce1,
        X_R_V_q1,
        X_I_V_address0,
        X_I_V_ce0,
        X_I_V_q0,
        X_I_V_address1,
        X_I_V_ce1,
        X_I_V_q1,
        Out_R_V_address0,
        Out_R_V_ce0,
        Out_R_V_we0,
        Out_R_V_d0,
        Out_R_V_address1,
        Out_R_V_ce1,
        Out_R_V_we1,
        Out_R_V_d1,
        Out_I_V_address0,
        Out_I_V_ce0,
        Out_I_V_we0,
        Out_I_V_d0,
        Out_I_V_address1,
        Out_I_V_ce1,
        Out_I_V_we1,
        Out_I_V_d1
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [9:0] X_R_V_address0;
output   X_R_V_ce0;
input  [21:0] X_R_V_q0;
output  [9:0] X_R_V_address1;
output   X_R_V_ce1;
input  [21:0] X_R_V_q1;
output  [9:0] X_I_V_address0;
output   X_I_V_ce0;
input  [21:0] X_I_V_q0;
output  [9:0] X_I_V_address1;
output   X_I_V_ce1;
input  [21:0] X_I_V_q1;
output  [9:0] Out_R_V_address0;
output   Out_R_V_ce0;
output   Out_R_V_we0;
output  [21:0] Out_R_V_d0;
output  [9:0] Out_R_V_address1;
output   Out_R_V_ce1;
output   Out_R_V_we1;
output  [21:0] Out_R_V_d1;
output  [9:0] Out_I_V_address0;
output   Out_I_V_ce0;
output   Out_I_V_we0;
output  [21:0] Out_I_V_d0;
output  [9:0] Out_I_V_address1;
output   Out_I_V_ce1;
output   Out_I_V_we1;
output  [21:0] Out_I_V_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg X_R_V_ce0;
reg X_R_V_ce1;
reg X_I_V_ce0;
reg X_I_V_ce1;
reg Out_R_V_ce0;
reg Out_R_V_we0;
reg Out_R_V_ce1;
reg Out_R_V_we1;
reg Out_I_V_ce0;
reg Out_I_V_we0;
reg Out_I_V_ce1;
reg Out_I_V_we1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] zext_ln891_fu_319_p1;
reg   [31:0] zext_ln891_reg_1335;
wire    ap_CS_fsm_state2;
wire   [7:0] j_fu_329_p2;
reg   [7:0] j_reg_1343;
wire   [0:0] icmp_ln885_fu_335_p2;
reg   [0:0] icmp_ln885_reg_1348;
wire   [0:0] icmp_ln47_fu_323_p2;
reg   [62:0] m_s_reg_1353;
reg   [0:0] tmp_26_reg_1358;
wire   [10:0] trunc_ln893_fu_577_p1;
reg   [10:0] trunc_ln893_reg_1363;
wire   [13:0] a_V_fu_581_p2;
reg   [13:0] a_V_reg_1368;
wire   [63:0] select_ln885_fu_632_p3;
reg   [63:0] select_ln885_reg_1373;
wire    ap_CS_fsm_state3;
wire   [63:0] grp_sin_or_cos_double_s_fu_281_ap_return;
reg   [63:0] v_assign_reg_1379;
wire    ap_CS_fsm_state4;
wire    grp_sin_or_cos_double_s_fu_281_ap_ready;
wire    grp_sin_or_cos_double_s_fu_281_ap_done;
wire    grp_sin_or_cos_double_s_fu_300_ap_ready;
wire    grp_sin_or_cos_double_s_fu_300_ap_done;
reg    ap_block_state4_on_subcall_done;
wire   [63:0] grp_sin_or_cos_double_s_fu_300_ap_return;
reg   [63:0] v_assign_3_reg_1384;
wire  signed [32:0] sext_ln1118_fu_1199_p1;
reg  signed [32:0] sext_ln1118_reg_1389;
wire    ap_CS_fsm_state5;
wire  signed [32:0] sext_ln1118_7_fu_1203_p1;
reg  signed [32:0] sext_ln1118_7_reg_1395;
wire  signed [63:0] sext_ln55_fu_1229_p1;
reg  signed [63:0] sext_ln55_reg_1404;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln53_fu_1217_p2;
wire  signed [63:0] sext_ln57_fu_1235_p1;
reg  signed [63:0] sext_ln57_reg_1420;
wire   [31:0] i_5_fu_1241_p2;
reg   [31:0] i_5_reg_1436;
wire    grp_sin_or_cos_double_s_fu_281_ap_start;
wire    grp_sin_or_cos_double_s_fu_281_ap_idle;
wire    grp_sin_or_cos_double_s_fu_281_do_cos;
wire    grp_sin_or_cos_double_s_fu_300_ap_start;
wire    grp_sin_or_cos_double_s_fu_300_ap_idle;
wire    grp_sin_or_cos_double_s_fu_300_do_cos;
reg   [13:0] tmp_V_reg_250;
reg    ap_block_state1;
reg   [7:0] i_reg_261;
reg  signed [31:0] i_0_reg_272;
wire    ap_CS_fsm_state7;
reg    grp_sin_or_cos_double_s_fu_281_ap_start_reg;
reg    grp_sin_or_cos_double_s_fu_300_ap_start_reg;
wire   [13:0] tmp_V_6_fu_341_p2;
wire   [21:0] zext_ln889_fu_347_p1;
reg   [21:0] p_Result_s_fu_351_p4;
wire   [31:0] p_Result_58_fu_361_p3;
reg   [31:0] l_fu_369_p3;
wire   [31:0] sub_ln894_fu_377_p2;
wire   [31:0] lsb_index_fu_387_p2;
wire   [30:0] tmp_fu_393_p4;
wire   [4:0] trunc_ln897_fu_409_p1;
wire   [4:0] sub_ln897_fu_413_p2;
wire   [21:0] zext_ln897_fu_419_p1;
wire   [21:0] lshr_ln897_fu_423_p2;
wire   [21:0] p_Result_51_fu_429_p2;
wire   [0:0] icmp_ln897_fu_403_p2;
wire   [0:0] icmp_ln897_1_fu_435_p2;
wire   [0:0] tmp_25_fu_447_p3;
wire   [21:0] trunc_ln894_fu_383_p1;
wire   [21:0] add_ln899_fu_461_p2;
wire   [0:0] p_Result_52_fu_467_p3;
wire   [0:0] xor_ln899_fu_455_p2;
wire   [0:0] and_ln899_fu_475_p2;
wire   [0:0] a_fu_441_p2;
wire   [0:0] or_ln899_fu_481_p2;
wire   [31:0] zext_ln907_3_fu_499_p1;
wire   [31:0] add_ln908_fu_509_p2;
wire   [31:0] lshr_ln908_fu_515_p2;
wire   [31:0] sub_ln908_fu_525_p2;
wire   [63:0] m_fu_495_p1;
wire   [63:0] zext_ln908_1_fu_531_p1;
wire   [0:0] icmp_ln908_fu_503_p2;
wire   [63:0] zext_ln908_fu_521_p1;
wire   [63:0] shl_ln908_fu_535_p2;
wire   [31:0] or_ln_fu_487_p3;
wire   [63:0] zext_ln911_fu_549_p1;
wire   [63:0] m_12_fu_541_p3;
wire   [63:0] m_13_fu_553_p2;
wire   [10:0] sub_ln915_fu_597_p2;
wire   [10:0] select_ln915_fu_590_p3;
wire   [10:0] add_ln915_fu_602_p2;
wire   [63:0] m_16_fu_587_p1;
wire   [11:0] tmp_1_fu_608_p3;
wire   [63:0] p_Result_59_fu_616_p5;
wire   [63:0] bitcast_ln729_fu_628_p1;
wire   [63:0] ireg_V_fu_641_p1;
wire   [10:0] exp_tmp_V_fu_656_p4;
wire   [51:0] trunc_ln565_fu_670_p1;
wire   [52:0] tmp_2_fu_674_p3;
wire   [53:0] p_Result_61_fu_682_p1;
wire   [0:0] p_Result_60_fu_648_p3;
wire   [53:0] man_V_11_fu_686_p2;
wire   [62:0] trunc_ln556_fu_644_p1;
wire   [11:0] zext_ln461_1_fu_666_p1;
wire   [11:0] F2_fu_706_p2;
wire   [0:0] icmp_ln581_1_fu_712_p2;
wire   [11:0] add_ln581_1_fu_718_p2;
wire   [11:0] sub_ln581_1_fu_724_p2;
wire  signed [11:0] sh_amt_fu_730_p3;
wire   [53:0] man_V_12_fu_692_p3;
wire  signed [31:0] sext_ln581_fu_738_p1;
wire   [53:0] zext_ln586_1_fu_768_p1;
wire   [53:0] ashr_ln586_1_fu_772_p2;
wire   [0:0] tmp_28_fu_782_p3;
wire   [21:0] trunc_ln583_fu_752_p1;
wire  signed [21:0] sext_ln581_7_fu_742_p1;
wire   [0:0] icmp_ln571_1_fu_700_p2;
wire   [0:0] icmp_ln582_1_fu_746_p2;
wire   [0:0] xor_ln571_fu_804_p2;
wire   [0:0] or_ln582_fu_816_p2;
wire   [0:0] xor_ln582_fu_822_p2;
wire   [0:0] icmp_ln585_1_fu_756_p2;
wire   [0:0] and_ln581_fu_828_p2;
wire   [0:0] xor_ln585_fu_834_p2;
wire   [0:0] or_ln581_fu_852_p2;
wire   [0:0] icmp_ln603_1_fu_762_p2;
wire   [0:0] xor_ln581_fu_858_p2;
wire   [0:0] and_ln603_fu_864_p2;
wire   [21:0] shl_ln604_1_fu_798_p2;
wire   [21:0] trunc_ln586_fu_778_p1;
wire   [0:0] and_ln585_7_fu_846_p2;
wire   [0:0] and_ln585_fu_840_p2;
wire   [21:0] select_ln588_fu_790_p3;
wire   [0:0] and_ln582_fu_810_p2;
wire   [0:0] or_ln603_fu_878_p2;
wire   [21:0] select_ln603_fu_870_p3;
wire   [21:0] select_ln603_15_fu_884_p3;
wire   [0:0] or_ln603_11_fu_892_p2;
wire   [0:0] or_ln603_12_fu_906_p2;
wire   [21:0] select_ln603_16_fu_898_p3;
wire   [63:0] ireg_V_3_fu_920_p1;
wire   [10:0] exp_tmp_V_3_fu_935_p4;
wire   [51:0] trunc_ln565_3_fu_949_p1;
wire   [52:0] tmp_3_fu_953_p3;
wire   [53:0] p_Result_63_fu_961_p1;
wire   [0:0] p_Result_62_fu_927_p3;
wire   [53:0] man_V_14_fu_965_p2;
wire   [62:0] trunc_ln556_3_fu_923_p1;
wire   [11:0] zext_ln461_fu_945_p1;
wire   [11:0] F2_3_fu_985_p2;
wire   [0:0] icmp_ln581_fu_991_p2;
wire   [11:0] add_ln581_fu_997_p2;
wire   [11:0] sub_ln581_fu_1003_p2;
wire  signed [11:0] sh_amt_3_fu_1009_p3;
wire   [53:0] man_V_15_fu_971_p3;
wire  signed [31:0] sext_ln581_8_fu_1017_p1;
wire   [53:0] zext_ln586_fu_1047_p1;
wire   [53:0] ashr_ln586_fu_1051_p2;
wire   [0:0] tmp_30_fu_1061_p3;
wire   [21:0] trunc_ln583_3_fu_1031_p1;
wire  signed [21:0] sext_ln581_9_fu_1021_p1;
wire   [0:0] icmp_ln571_fu_979_p2;
wire   [0:0] icmp_ln582_fu_1025_p2;
wire   [0:0] xor_ln571_3_fu_1083_p2;
wire   [0:0] or_ln582_3_fu_1095_p2;
wire   [0:0] xor_ln582_3_fu_1101_p2;
wire   [0:0] icmp_ln585_fu_1035_p2;
wire   [0:0] and_ln581_3_fu_1107_p2;
wire   [0:0] xor_ln585_3_fu_1113_p2;
wire   [0:0] or_ln581_3_fu_1131_p2;
wire   [0:0] icmp_ln603_fu_1041_p2;
wire   [0:0] xor_ln581_3_fu_1137_p2;
wire   [0:0] and_ln603_3_fu_1143_p2;
wire   [21:0] shl_ln604_fu_1077_p2;
wire   [21:0] trunc_ln586_3_fu_1057_p1;
wire   [0:0] and_ln585_9_fu_1125_p2;
wire   [0:0] and_ln585_8_fu_1119_p2;
wire   [21:0] select_ln588_3_fu_1069_p3;
wire   [0:0] and_ln582_3_fu_1089_p2;
wire   [0:0] or_ln603_13_fu_1157_p2;
wire   [21:0] select_ln603_18_fu_1149_p3;
wire   [21:0] select_ln603_19_fu_1163_p3;
wire   [0:0] or_ln603_14_fu_1171_p2;
wire   [0:0] or_ln603_15_fu_1185_p2;
wire   [21:0] select_ln603_20_fu_1177_p3;
wire   [21:0] c_V_fu_912_p3;
wire   [21:0] s_V_fu_1191_p3;
wire   [21:0] tmp_31_fu_1207_p4;
wire   [31:0] i_lower_fu_1223_p2;
wire  signed [21:0] mul_ln700_fu_1255_p0;
wire  signed [21:0] mul_ln700_fu_1255_p1;
wire  signed [32:0] sext_ln1118_8_fu_1247_p1;
wire  signed [21:0] mul_ln1193_fu_1260_p0;
wire  signed [21:0] mul_ln1193_fu_1260_p1;
wire  signed [32:0] sext_ln1118_9_fu_1251_p1;
wire   [32:0] mul_ln700_fu_1255_p2;
wire   [32:0] mul_ln1193_fu_1260_p2;
wire   [32:0] ret_V_fu_1265_p2;
wire  signed [21:0] mul_ln700_3_fu_1281_p0;
wire  signed [21:0] mul_ln700_3_fu_1281_p1;
wire  signed [21:0] mul_ln1192_fu_1286_p0;
wire  signed [21:0] mul_ln1192_fu_1286_p1;
wire   [32:0] mul_ln1192_fu_1286_p2;
wire   [32:0] mul_ln700_3_fu_1281_p2;
wire   [32:0] ret_V_15_fu_1291_p2;
wire   [21:0] temp_R_V_fu_1271_p4;
wire   [21:0] temp_I_V_fu_1297_p4;
reg   [6:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 grp_sin_or_cos_double_s_fu_281_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_300_ap_start_reg = 1'b0;
end

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_281(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_281_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_281_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_281_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_281_ap_ready),
    .t_in(select_ln885_reg_1373),
    .do_cos(grp_sin_or_cos_double_s_fu_281_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_281_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_300(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_300_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_300_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_300_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_300_ap_ready),
    .t_in(select_ln885_reg_1373),
    .do_cos(grp_sin_or_cos_double_s_fu_300_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_300_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln47_fu_323_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_281_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_sin_or_cos_double_s_fu_281_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_281_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_281_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_300_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_sin_or_cos_double_s_fu_300_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_300_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_300_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_0_reg_272 <= i_5_reg_1436;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_reg_272 <= zext_ln891_reg_1335;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_1217_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_reg_261 <= j_reg_1343;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_261 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_1217_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_reg_250 <= a_V_reg_1368;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_V_reg_250 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln47_fu_323_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        a_V_reg_1368 <= a_V_fu_581_p2;
        icmp_ln885_reg_1348 <= icmp_ln885_fu_335_p2;
        m_s_reg_1353 <= {{m_13_fu_553_p2[63:1]}};
        tmp_26_reg_1358 <= m_13_fu_553_p2[32'd54];
        trunc_ln893_reg_1363 <= trunc_ln893_fu_577_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln53_fu_1217_p2 == 1'd1))) begin
        i_5_reg_1436 <= i_5_fu_1241_p2;
        sext_ln55_reg_1404 <= sext_ln55_fu_1229_p1;
        sext_ln57_reg_1420 <= sext_ln57_fu_1235_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        j_reg_1343 <= j_fu_329_p2;
        zext_ln891_reg_1335[7 : 0] <= zext_ln891_fu_319_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        select_ln885_reg_1373 <= select_ln885_fu_632_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sext_ln1118_7_reg_1395 <= sext_ln1118_7_fu_1203_p1;
        sext_ln1118_reg_1389 <= sext_ln1118_fu_1199_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
        v_assign_3_reg_1384 <= grp_sin_or_cos_double_s_fu_300_ap_return;
        v_assign_reg_1379 <= grp_sin_or_cos_double_s_fu_281_ap_return;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Out_I_V_ce0 = 1'b1;
    end else begin
        Out_I_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Out_I_V_ce1 = 1'b1;
    end else begin
        Out_I_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Out_I_V_we0 = 1'b1;
    end else begin
        Out_I_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Out_I_V_we1 = 1'b1;
    end else begin
        Out_I_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Out_R_V_ce0 = 1'b1;
    end else begin
        Out_R_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Out_R_V_ce1 = 1'b1;
    end else begin
        Out_R_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Out_R_V_we0 = 1'b1;
    end else begin
        Out_R_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Out_R_V_we1 = 1'b1;
    end else begin
        Out_R_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        X_I_V_ce0 = 1'b1;
    end else begin
        X_I_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        X_I_V_ce1 = 1'b1;
    end else begin
        X_I_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        X_R_V_ce0 = 1'b1;
    end else begin
        X_R_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        X_R_V_ce1 = 1'b1;
    end else begin
        X_R_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln47_fu_323_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln47_fu_323_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln47_fu_323_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln53_fu_1217_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_3_fu_985_p2 = (12'd1075 - zext_ln461_fu_945_p1);

assign F2_fu_706_p2 = (12'd1075 - zext_ln461_1_fu_666_p1);

assign Out_I_V_address0 = sext_ln55_reg_1404;

assign Out_I_V_address1 = sext_ln57_reg_1420;

assign Out_I_V_d0 = (X_I_V_q1 - temp_I_V_fu_1297_p4);

assign Out_I_V_d1 = (X_I_V_q1 + temp_I_V_fu_1297_p4);

assign Out_R_V_address0 = sext_ln55_reg_1404;

assign Out_R_V_address1 = sext_ln57_reg_1420;

assign Out_R_V_d0 = (X_R_V_q1 - temp_R_V_fu_1271_p4);

assign Out_R_V_d1 = (X_R_V_q1 + temp_R_V_fu_1271_p4);

assign X_I_V_address0 = sext_ln55_fu_1229_p1;

assign X_I_V_address1 = sext_ln57_fu_1235_p1;

assign X_R_V_address0 = sext_ln55_fu_1229_p1;

assign X_R_V_address1 = sext_ln57_fu_1235_p1;

assign a_V_fu_581_p2 = ($signed(14'd16333) + $signed(tmp_V_reg_250));

assign a_fu_441_p2 = (icmp_ln897_fu_403_p2 & icmp_ln897_1_fu_435_p2);

assign add_ln581_1_fu_718_p2 = ($signed(12'd4085) + $signed(F2_fu_706_p2));

assign add_ln581_fu_997_p2 = ($signed(12'd4085) + $signed(F2_3_fu_985_p2));

assign add_ln899_fu_461_p2 = ($signed(22'd4194251) + $signed(trunc_ln894_fu_383_p1));

assign add_ln908_fu_509_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_fu_377_p2));

assign add_ln915_fu_602_p2 = (sub_ln915_fu_597_p2 + select_ln915_fu_590_p3);

assign and_ln581_3_fu_1107_p2 = (xor_ln582_3_fu_1101_p2 & icmp_ln581_fu_991_p2);

assign and_ln581_fu_828_p2 = (xor_ln582_fu_822_p2 & icmp_ln581_1_fu_712_p2);

assign and_ln582_3_fu_1089_p2 = (xor_ln571_3_fu_1083_p2 & icmp_ln582_fu_1025_p2);

assign and_ln582_fu_810_p2 = (xor_ln571_fu_804_p2 & icmp_ln582_1_fu_746_p2);

assign and_ln585_7_fu_846_p2 = (icmp_ln585_1_fu_756_p2 & and_ln581_fu_828_p2);

assign and_ln585_8_fu_1119_p2 = (xor_ln585_3_fu_1113_p2 & and_ln581_3_fu_1107_p2);

assign and_ln585_9_fu_1125_p2 = (icmp_ln585_fu_1035_p2 & and_ln581_3_fu_1107_p2);

assign and_ln585_fu_840_p2 = (xor_ln585_fu_834_p2 & and_ln581_fu_828_p2);

assign and_ln603_3_fu_1143_p2 = (xor_ln581_3_fu_1137_p2 & icmp_ln603_fu_1041_p2);

assign and_ln603_fu_864_p2 = (xor_ln581_fu_858_p2 & icmp_ln603_1_fu_762_p2);

assign and_ln899_fu_475_p2 = (xor_ln899_fu_455_p2 & p_Result_52_fu_467_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_sin_or_cos_double_s_fu_300_ap_done == 1'b0) | (grp_sin_or_cos_double_s_fu_281_ap_done == 1'b0));
end

assign ashr_ln586_1_fu_772_p2 = $signed(man_V_12_fu_692_p3) >>> zext_ln586_1_fu_768_p1;

assign ashr_ln586_fu_1051_p2 = $signed(man_V_15_fu_971_p3) >>> zext_ln586_fu_1047_p1;

assign bitcast_ln729_fu_628_p1 = p_Result_59_fu_616_p5;

assign c_V_fu_912_p3 = ((or_ln603_12_fu_906_p2[0:0] === 1'b1) ? select_ln603_16_fu_898_p3 : 22'd0);

assign exp_tmp_V_3_fu_935_p4 = {{ireg_V_3_fu_920_p1[62:52]}};

assign exp_tmp_V_fu_656_p4 = {{ireg_V_fu_641_p1[62:52]}};

assign grp_sin_or_cos_double_s_fu_281_ap_start = grp_sin_or_cos_double_s_fu_281_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_281_do_cos = 1'd1;

assign grp_sin_or_cos_double_s_fu_300_ap_start = grp_sin_or_cos_double_s_fu_300_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_300_do_cos = 1'd0;

assign i_5_fu_1241_p2 = ($signed(i_0_reg_272) + $signed(32'd256));

assign i_lower_fu_1223_p2 = ($signed(i_0_reg_272) + $signed(32'd128));

assign icmp_ln47_fu_323_p2 = ((i_reg_261 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1217_p2 = (($signed(tmp_31_fu_1207_p4) < $signed(22'd1)) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_700_p2 = ((trunc_ln556_fu_644_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_979_p2 = ((trunc_ln556_3_fu_923_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_1_fu_712_p2 = (($signed(F2_fu_706_p2) > $signed(12'd11)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_991_p2 = (($signed(F2_3_fu_985_p2) > $signed(12'd11)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_746_p2 = ((F2_fu_706_p2 == 12'd11) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1025_p2 = ((F2_3_fu_985_p2 == 12'd11) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_756_p2 = ((sh_amt_fu_730_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1035_p2 = ((sh_amt_3_fu_1009_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_762_p2 = ((sh_amt_fu_730_p3 < 12'd22) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1041_p2 = ((sh_amt_3_fu_1009_p3 < 12'd22) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_335_p2 = ((tmp_V_reg_250 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_1_fu_435_p2 = ((p_Result_51_fu_429_p2 != 22'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_403_p2 = (($signed(tmp_fu_393_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_503_p2 = (($signed(lsb_index_fu_387_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_V_3_fu_920_p1 = v_assign_3_reg_1384;

assign ireg_V_fu_641_p1 = v_assign_reg_1379;

assign j_fu_329_p2 = (i_reg_261 + 8'd1);


always @ (p_Result_58_fu_361_p3) begin
    if (p_Result_58_fu_361_p3[0] == 1'b1) begin
        l_fu_369_p3 = 32'd0;
    end else if (p_Result_58_fu_361_p3[1] == 1'b1) begin
        l_fu_369_p3 = 32'd1;
    end else if (p_Result_58_fu_361_p3[2] == 1'b1) begin
        l_fu_369_p3 = 32'd2;
    end else if (p_Result_58_fu_361_p3[3] == 1'b1) begin
        l_fu_369_p3 = 32'd3;
    end else if (p_Result_58_fu_361_p3[4] == 1'b1) begin
        l_fu_369_p3 = 32'd4;
    end else if (p_Result_58_fu_361_p3[5] == 1'b1) begin
        l_fu_369_p3 = 32'd5;
    end else if (p_Result_58_fu_361_p3[6] == 1'b1) begin
        l_fu_369_p3 = 32'd6;
    end else if (p_Result_58_fu_361_p3[7] == 1'b1) begin
        l_fu_369_p3 = 32'd7;
    end else if (p_Result_58_fu_361_p3[8] == 1'b1) begin
        l_fu_369_p3 = 32'd8;
    end else if (p_Result_58_fu_361_p3[9] == 1'b1) begin
        l_fu_369_p3 = 32'd9;
    end else if (p_Result_58_fu_361_p3[10] == 1'b1) begin
        l_fu_369_p3 = 32'd10;
    end else if (p_Result_58_fu_361_p3[11] == 1'b1) begin
        l_fu_369_p3 = 32'd11;
    end else if (p_Result_58_fu_361_p3[12] == 1'b1) begin
        l_fu_369_p3 = 32'd12;
    end else if (p_Result_58_fu_361_p3[13] == 1'b1) begin
        l_fu_369_p3 = 32'd13;
    end else if (p_Result_58_fu_361_p3[14] == 1'b1) begin
        l_fu_369_p3 = 32'd14;
    end else if (p_Result_58_fu_361_p3[15] == 1'b1) begin
        l_fu_369_p3 = 32'd15;
    end else if (p_Result_58_fu_361_p3[16] == 1'b1) begin
        l_fu_369_p3 = 32'd16;
    end else if (p_Result_58_fu_361_p3[17] == 1'b1) begin
        l_fu_369_p3 = 32'd17;
    end else if (p_Result_58_fu_361_p3[18] == 1'b1) begin
        l_fu_369_p3 = 32'd18;
    end else if (p_Result_58_fu_361_p3[19] == 1'b1) begin
        l_fu_369_p3 = 32'd19;
    end else if (p_Result_58_fu_361_p3[20] == 1'b1) begin
        l_fu_369_p3 = 32'd20;
    end else if (p_Result_58_fu_361_p3[21] == 1'b1) begin
        l_fu_369_p3 = 32'd21;
    end else if (p_Result_58_fu_361_p3[22] == 1'b1) begin
        l_fu_369_p3 = 32'd22;
    end else if (p_Result_58_fu_361_p3[23] == 1'b1) begin
        l_fu_369_p3 = 32'd23;
    end else if (p_Result_58_fu_361_p3[24] == 1'b1) begin
        l_fu_369_p3 = 32'd24;
    end else if (p_Result_58_fu_361_p3[25] == 1'b1) begin
        l_fu_369_p3 = 32'd25;
    end else if (p_Result_58_fu_361_p3[26] == 1'b1) begin
        l_fu_369_p3 = 32'd26;
    end else if (p_Result_58_fu_361_p3[27] == 1'b1) begin
        l_fu_369_p3 = 32'd27;
    end else if (p_Result_58_fu_361_p3[28] == 1'b1) begin
        l_fu_369_p3 = 32'd28;
    end else if (p_Result_58_fu_361_p3[29] == 1'b1) begin
        l_fu_369_p3 = 32'd29;
    end else if (p_Result_58_fu_361_p3[30] == 1'b1) begin
        l_fu_369_p3 = 32'd30;
    end else if (p_Result_58_fu_361_p3[31] == 1'b1) begin
        l_fu_369_p3 = 32'd31;
    end else begin
        l_fu_369_p3 = 32'd32;
    end
end

assign lsb_index_fu_387_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_377_p2));

assign lshr_ln897_fu_423_p2 = 22'd4194303 >> zext_ln897_fu_419_p1;

assign lshr_ln908_fu_515_p2 = zext_ln907_3_fu_499_p1 >> add_ln908_fu_509_p2;

assign m_12_fu_541_p3 = ((icmp_ln908_fu_503_p2[0:0] === 1'b1) ? zext_ln908_fu_521_p1 : shl_ln908_fu_535_p2);

assign m_13_fu_553_p2 = (zext_ln911_fu_549_p1 + m_12_fu_541_p3);

assign m_16_fu_587_p1 = m_s_reg_1353;

assign m_fu_495_p1 = tmp_V_6_fu_341_p2;

assign man_V_11_fu_686_p2 = (54'd0 - p_Result_61_fu_682_p1);

assign man_V_12_fu_692_p3 = ((p_Result_60_fu_648_p3[0:0] === 1'b1) ? man_V_11_fu_686_p2 : p_Result_61_fu_682_p1);

assign man_V_14_fu_965_p2 = (54'd0 - p_Result_63_fu_961_p1);

assign man_V_15_fu_971_p3 = ((p_Result_62_fu_927_p3[0:0] === 1'b1) ? man_V_14_fu_965_p2 : p_Result_63_fu_961_p1);

assign mul_ln1192_fu_1286_p0 = sext_ln1118_7_reg_1395;

assign mul_ln1192_fu_1286_p1 = sext_ln1118_8_fu_1247_p1;

assign mul_ln1192_fu_1286_p2 = ($signed(mul_ln1192_fu_1286_p0) * $signed(mul_ln1192_fu_1286_p1));

assign mul_ln1193_fu_1260_p0 = sext_ln1118_7_reg_1395;

assign mul_ln1193_fu_1260_p1 = sext_ln1118_9_fu_1251_p1;

assign mul_ln1193_fu_1260_p2 = ($signed(mul_ln1193_fu_1260_p0) * $signed(mul_ln1193_fu_1260_p1));

assign mul_ln700_3_fu_1281_p0 = sext_ln1118_9_fu_1251_p1;

assign mul_ln700_3_fu_1281_p1 = sext_ln1118_reg_1389;

assign mul_ln700_3_fu_1281_p2 = ($signed(mul_ln700_3_fu_1281_p0) * $signed(mul_ln700_3_fu_1281_p1));

assign mul_ln700_fu_1255_p0 = sext_ln1118_reg_1389;

assign mul_ln700_fu_1255_p1 = sext_ln1118_8_fu_1247_p1;

assign mul_ln700_fu_1255_p2 = ($signed(mul_ln700_fu_1255_p0) * $signed(mul_ln700_fu_1255_p1));

assign or_ln581_3_fu_1131_p2 = (or_ln582_3_fu_1095_p2 | icmp_ln581_fu_991_p2);

assign or_ln581_fu_852_p2 = (or_ln582_fu_816_p2 | icmp_ln581_1_fu_712_p2);

assign or_ln582_3_fu_1095_p2 = (icmp_ln582_fu_1025_p2 | icmp_ln571_fu_979_p2);

assign or_ln582_fu_816_p2 = (icmp_ln582_1_fu_746_p2 | icmp_ln571_1_fu_700_p2);

assign or_ln603_11_fu_892_p2 = (and_ln585_fu_840_p2 | and_ln582_fu_810_p2);

assign or_ln603_12_fu_906_p2 = (or_ln603_fu_878_p2 | or_ln603_11_fu_892_p2);

assign or_ln603_13_fu_1157_p2 = (and_ln603_3_fu_1143_p2 | and_ln585_9_fu_1125_p2);

assign or_ln603_14_fu_1171_p2 = (and_ln585_8_fu_1119_p2 | and_ln582_3_fu_1089_p2);

assign or_ln603_15_fu_1185_p2 = (or_ln603_14_fu_1171_p2 | or_ln603_13_fu_1157_p2);

assign or_ln603_fu_878_p2 = (and_ln603_fu_864_p2 | and_ln585_7_fu_846_p2);

assign or_ln899_fu_481_p2 = (and_ln899_fu_475_p2 | a_fu_441_p2);

assign or_ln_fu_487_p3 = {{31'd0}, {or_ln899_fu_481_p2}};

assign p_Result_51_fu_429_p2 = (zext_ln889_fu_347_p1 & lshr_ln897_fu_423_p2);

assign p_Result_52_fu_467_p3 = zext_ln889_fu_347_p1[add_ln899_fu_461_p2];

assign p_Result_58_fu_361_p3 = {{10'd1023}, {p_Result_s_fu_351_p4}};

assign p_Result_59_fu_616_p5 = {{tmp_1_fu_608_p3}, {m_16_fu_587_p1[51:0]}};

assign p_Result_60_fu_648_p3 = ireg_V_fu_641_p1[32'd63];

assign p_Result_61_fu_682_p1 = tmp_2_fu_674_p3;

assign p_Result_62_fu_927_p3 = ireg_V_3_fu_920_p1[32'd63];

assign p_Result_63_fu_961_p1 = tmp_3_fu_953_p3;

integer ap_tvar_int_0;

always @ (zext_ln889_fu_347_p1) begin
    for (ap_tvar_int_0 = 22 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 21 - 0) begin
            p_Result_s_fu_351_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_351_p4[ap_tvar_int_0] = zext_ln889_fu_347_p1[21 - ap_tvar_int_0];
        end
    end
end

assign ret_V_15_fu_1291_p2 = (mul_ln1192_fu_1286_p2 + mul_ln700_3_fu_1281_p2);

assign ret_V_fu_1265_p2 = (mul_ln700_fu_1255_p2 - mul_ln1193_fu_1260_p2);

assign s_V_fu_1191_p3 = ((or_ln603_15_fu_1185_p2[0:0] === 1'b1) ? select_ln603_20_fu_1177_p3 : 22'd0);

assign select_ln588_3_fu_1069_p3 = ((tmp_30_fu_1061_p3[0:0] === 1'b1) ? 22'd4194303 : 22'd0);

assign select_ln588_fu_790_p3 = ((tmp_28_fu_782_p3[0:0] === 1'b1) ? 22'd4194303 : 22'd0);

assign select_ln603_15_fu_884_p3 = ((and_ln585_fu_840_p2[0:0] === 1'b1) ? select_ln588_fu_790_p3 : trunc_ln583_fu_752_p1);

assign select_ln603_16_fu_898_p3 = ((or_ln603_fu_878_p2[0:0] === 1'b1) ? select_ln603_fu_870_p3 : select_ln603_15_fu_884_p3);

assign select_ln603_18_fu_1149_p3 = ((and_ln603_3_fu_1143_p2[0:0] === 1'b1) ? shl_ln604_fu_1077_p2 : trunc_ln586_3_fu_1057_p1);

assign select_ln603_19_fu_1163_p3 = ((and_ln585_8_fu_1119_p2[0:0] === 1'b1) ? select_ln588_3_fu_1069_p3 : trunc_ln583_3_fu_1031_p1);

assign select_ln603_20_fu_1177_p3 = ((or_ln603_13_fu_1157_p2[0:0] === 1'b1) ? select_ln603_18_fu_1149_p3 : select_ln603_19_fu_1163_p3);

assign select_ln603_fu_870_p3 = ((and_ln603_fu_864_p2[0:0] === 1'b1) ? shl_ln604_1_fu_798_p2 : trunc_ln586_fu_778_p1);

assign select_ln885_fu_632_p3 = ((icmp_ln885_reg_1348[0:0] === 1'b1) ? 64'd0 : bitcast_ln729_fu_628_p1);

assign select_ln915_fu_590_p3 = ((tmp_26_reg_1358[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1118_7_fu_1203_p1 = $signed(s_V_fu_1191_p3);

assign sext_ln1118_8_fu_1247_p1 = $signed(X_R_V_q0);

assign sext_ln1118_9_fu_1251_p1 = $signed(X_I_V_q0);

assign sext_ln1118_fu_1199_p1 = $signed(c_V_fu_912_p3);

assign sext_ln55_fu_1229_p1 = $signed(i_lower_fu_1223_p2);

assign sext_ln57_fu_1235_p1 = i_0_reg_272;

assign sext_ln581_7_fu_742_p1 = sh_amt_fu_730_p3;

assign sext_ln581_8_fu_1017_p1 = sh_amt_3_fu_1009_p3;

assign sext_ln581_9_fu_1021_p1 = sh_amt_3_fu_1009_p3;

assign sext_ln581_fu_738_p1 = sh_amt_fu_730_p3;

assign sh_amt_3_fu_1009_p3 = ((icmp_ln581_fu_991_p2[0:0] === 1'b1) ? add_ln581_fu_997_p2 : sub_ln581_fu_1003_p2);

assign sh_amt_fu_730_p3 = ((icmp_ln581_1_fu_712_p2[0:0] === 1'b1) ? add_ln581_1_fu_718_p2 : sub_ln581_1_fu_724_p2);

assign shl_ln604_1_fu_798_p2 = trunc_ln583_fu_752_p1 << sext_ln581_7_fu_742_p1;

assign shl_ln604_fu_1077_p2 = trunc_ln583_3_fu_1031_p1 << sext_ln581_9_fu_1021_p1;

assign shl_ln908_fu_535_p2 = m_fu_495_p1 << zext_ln908_1_fu_531_p1;

assign sub_ln581_1_fu_724_p2 = (12'd11 - F2_fu_706_p2);

assign sub_ln581_fu_1003_p2 = (12'd11 - F2_3_fu_985_p2);

assign sub_ln894_fu_377_p2 = (32'd22 - l_fu_369_p3);

assign sub_ln897_fu_413_p2 = (5'd12 - trunc_ln897_fu_409_p1);

assign sub_ln908_fu_525_p2 = (32'd54 - sub_ln894_fu_377_p2);

assign sub_ln915_fu_597_p2 = (11'd11 - trunc_ln893_reg_1363);

assign temp_I_V_fu_1297_p4 = {{ret_V_15_fu_1291_p2[32:11]}};

assign temp_R_V_fu_1271_p4 = {{ret_V_fu_1265_p2[32:11]}};

assign tmp_1_fu_608_p3 = {{1'd1}, {add_ln915_fu_602_p2}};

assign tmp_25_fu_447_p3 = lsb_index_fu_387_p2[32'd31];

assign tmp_28_fu_782_p3 = ireg_V_fu_641_p1[32'd63];

assign tmp_2_fu_674_p3 = {{1'd1}, {trunc_ln565_fu_670_p1}};

assign tmp_30_fu_1061_p3 = ireg_V_3_fu_920_p1[32'd63];

assign tmp_31_fu_1207_p4 = {{i_0_reg_272[31:10]}};

assign tmp_3_fu_953_p3 = {{1'd1}, {trunc_ln565_3_fu_949_p1}};

assign tmp_V_6_fu_341_p2 = (14'd0 - tmp_V_reg_250);

assign tmp_fu_393_p4 = {{lsb_index_fu_387_p2[31:1]}};

assign trunc_ln556_3_fu_923_p1 = ireg_V_3_fu_920_p1[62:0];

assign trunc_ln556_fu_644_p1 = ireg_V_fu_641_p1[62:0];

assign trunc_ln565_3_fu_949_p1 = ireg_V_3_fu_920_p1[51:0];

assign trunc_ln565_fu_670_p1 = ireg_V_fu_641_p1[51:0];

assign trunc_ln583_3_fu_1031_p1 = man_V_15_fu_971_p3[21:0];

assign trunc_ln583_fu_752_p1 = man_V_12_fu_692_p3[21:0];

assign trunc_ln586_3_fu_1057_p1 = ashr_ln586_fu_1051_p2[21:0];

assign trunc_ln586_fu_778_p1 = ashr_ln586_1_fu_772_p2[21:0];

assign trunc_ln893_fu_577_p1 = l_fu_369_p3[10:0];

assign trunc_ln894_fu_383_p1 = sub_ln894_fu_377_p2[21:0];

assign trunc_ln897_fu_409_p1 = sub_ln894_fu_377_p2[4:0];

assign xor_ln571_3_fu_1083_p2 = (icmp_ln571_fu_979_p2 ^ 1'd1);

assign xor_ln571_fu_804_p2 = (icmp_ln571_1_fu_700_p2 ^ 1'd1);

assign xor_ln581_3_fu_1137_p2 = (or_ln581_3_fu_1131_p2 ^ 1'd1);

assign xor_ln581_fu_858_p2 = (or_ln581_fu_852_p2 ^ 1'd1);

assign xor_ln582_3_fu_1101_p2 = (or_ln582_3_fu_1095_p2 ^ 1'd1);

assign xor_ln582_fu_822_p2 = (or_ln582_fu_816_p2 ^ 1'd1);

assign xor_ln585_3_fu_1113_p2 = (icmp_ln585_fu_1035_p2 ^ 1'd1);

assign xor_ln585_fu_834_p2 = (icmp_ln585_1_fu_756_p2 ^ 1'd1);

assign xor_ln899_fu_455_p2 = (tmp_25_fu_447_p3 ^ 1'd1);

assign zext_ln461_1_fu_666_p1 = exp_tmp_V_fu_656_p4;

assign zext_ln461_fu_945_p1 = exp_tmp_V_3_fu_935_p4;

assign zext_ln586_1_fu_768_p1 = $unsigned(sext_ln581_fu_738_p1);

assign zext_ln586_fu_1047_p1 = $unsigned(sext_ln581_8_fu_1017_p1);

assign zext_ln889_fu_347_p1 = tmp_V_6_fu_341_p2;

assign zext_ln891_fu_319_p1 = i_reg_261;

assign zext_ln897_fu_419_p1 = sub_ln897_fu_413_p2;

assign zext_ln907_3_fu_499_p1 = tmp_V_6_fu_341_p2;

assign zext_ln908_1_fu_531_p1 = sub_ln908_fu_525_p2;

assign zext_ln908_fu_521_p1 = lshr_ln908_fu_515_p2;

assign zext_ln911_fu_549_p1 = or_ln_fu_487_p3;

always @ (posedge ap_clk) begin
    zext_ln891_reg_1335[31:8] <= 24'b000000000000000000000000;
end

endmodule //fft_stage88
