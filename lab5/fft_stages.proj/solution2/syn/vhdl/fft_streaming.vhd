-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_streaming is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_R_V_ce0 : OUT STD_LOGIC;
    X_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_R_V_we0 : OUT STD_LOGIC;
    X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_R_V_ce1 : OUT STD_LOGIC;
    X_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
    X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_R_V_we1 : OUT STD_LOGIC;
    X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_I_V_ce0 : OUT STD_LOGIC;
    X_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_I_V_we0 : OUT STD_LOGIC;
    X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    X_I_V_ce1 : OUT STD_LOGIC;
    X_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
    X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
    X_I_V_we1 : OUT STD_LOGIC;
    OUT_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    OUT_R_V_ce0 : OUT STD_LOGIC;
    OUT_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    OUT_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
    OUT_R_V_we0 : OUT STD_LOGIC;
    OUT_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    OUT_R_V_ce1 : OUT STD_LOGIC;
    OUT_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
    OUT_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
    OUT_R_V_we1 : OUT STD_LOGIC;
    OUT_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    OUT_I_V_ce0 : OUT STD_LOGIC;
    OUT_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    OUT_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
    OUT_I_V_we0 : OUT STD_LOGIC;
    OUT_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    OUT_I_V_ce1 : OUT STD_LOGIC;
    OUT_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
    OUT_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
    OUT_I_V_we1 : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of fft_streaming is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fft_streaming,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xqzu5ev-ffrb900-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.635000,HLS_SYN_LAT=564720,HLS_SYN_TPT=281090,HLS_SYN_MEM=200,HLS_SYN_DSP=600,HLS_SYN_FF=45992,HLS_SYN_LUT=140819,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal Stage1_R_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage1_R_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage1_R_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage1_R_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage1_I_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage1_I_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage1_I_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage1_I_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage2_R_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage2_R_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage2_R_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage2_R_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage2_I_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage2_I_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage2_I_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage2_I_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage3_R_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage3_R_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage3_R_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage3_R_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage3_I_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage3_I_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage3_I_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage3_I_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage4_R_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage4_R_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage4_R_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage4_R_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage4_I_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage4_I_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage4_I_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage4_I_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage5_R_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage5_R_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage5_R_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage5_R_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage5_I_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage5_I_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage5_I_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage5_I_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage6_R_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage6_R_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage6_R_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage6_R_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage6_I_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage6_I_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage6_I_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage6_I_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage7_R_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage7_R_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage7_R_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage7_R_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage7_I_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage7_I_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage7_I_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage7_I_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage8_R_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage8_R_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage8_R_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage8_R_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage8_I_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage8_I_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage8_I_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage8_I_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage9_R_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage9_R_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage9_R_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage9_R_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage9_I_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage9_I_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage9_I_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage9_I_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage10_R_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage10_R_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage10_R_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage10_R_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage10_I_V_i_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage10_I_V_i_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage10_I_V_t_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage10_I_V_t_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal bit_reverse_U0_ap_start : STD_LOGIC;
    signal bit_reverse_U0_ap_done : STD_LOGIC;
    signal bit_reverse_U0_ap_continue : STD_LOGIC;
    signal bit_reverse_U0_ap_idle : STD_LOGIC;
    signal bit_reverse_U0_ap_ready : STD_LOGIC;
    signal bit_reverse_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse_U0_X_R_V_ce0 : STD_LOGIC;
    signal bit_reverse_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse_U0_X_I_V_ce0 : STD_LOGIC;
    signal bit_reverse_U0_OUT_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse_U0_OUT_R_V_ce0 : STD_LOGIC;
    signal bit_reverse_U0_OUT_R_V_we0 : STD_LOGIC;
    signal bit_reverse_U0_OUT_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal bit_reverse_U0_OUT_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_reverse_U0_OUT_I_V_ce0 : STD_LOGIC;
    signal bit_reverse_U0_OUT_I_V_we0 : STD_LOGIC;
    signal bit_reverse_U0_OUT_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage1_I_V : STD_LOGIC;
    signal bit_reverse_U0_OUT_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage1_I_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage1_I_V : STD_LOGIC;
    signal ap_channel_done_Stage1_R_V : STD_LOGIC;
    signal bit_reverse_U0_OUT_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage1_R_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage1_R_V : STD_LOGIC;
    signal fft_stage81_U0_ap_start : STD_LOGIC;
    signal fft_stage81_U0_ap_done : STD_LOGIC;
    signal fft_stage81_U0_ap_continue : STD_LOGIC;
    signal fft_stage81_U0_ap_idle : STD_LOGIC;
    signal fft_stage81_U0_ap_ready : STD_LOGIC;
    signal fft_stage81_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage81_U0_X_R_V_ce0 : STD_LOGIC;
    signal fft_stage81_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage81_U0_X_R_V_ce1 : STD_LOGIC;
    signal fft_stage81_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage81_U0_X_I_V_ce0 : STD_LOGIC;
    signal fft_stage81_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage81_U0_X_I_V_ce1 : STD_LOGIC;
    signal fft_stage81_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage81_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage81_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage81_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage81_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage81_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage81_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage81_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage81_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage81_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage81_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage81_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage81_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage81_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage81_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage81_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage2_I_V : STD_LOGIC;
    signal fft_stage81_U0_Out_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage2_I_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage2_I_V : STD_LOGIC;
    signal ap_channel_done_Stage2_R_V : STD_LOGIC;
    signal fft_stage81_U0_Out_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage2_R_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage2_R_V : STD_LOGIC;
    signal fft_stage82_U0_ap_start : STD_LOGIC;
    signal fft_stage82_U0_ap_done : STD_LOGIC;
    signal fft_stage82_U0_ap_continue : STD_LOGIC;
    signal fft_stage82_U0_ap_idle : STD_LOGIC;
    signal fft_stage82_U0_ap_ready : STD_LOGIC;
    signal fft_stage82_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage82_U0_X_R_V_ce0 : STD_LOGIC;
    signal fft_stage82_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage82_U0_X_R_V_ce1 : STD_LOGIC;
    signal fft_stage82_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage82_U0_X_I_V_ce0 : STD_LOGIC;
    signal fft_stage82_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage82_U0_X_I_V_ce1 : STD_LOGIC;
    signal fft_stage82_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage82_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage82_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage82_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage82_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage82_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage82_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage82_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage82_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage82_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage82_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage82_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage82_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage82_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage82_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage82_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage3_I_V : STD_LOGIC;
    signal fft_stage82_U0_Out_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage3_I_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage3_I_V : STD_LOGIC;
    signal ap_channel_done_Stage3_R_V : STD_LOGIC;
    signal fft_stage82_U0_Out_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage3_R_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage3_R_V : STD_LOGIC;
    signal fft_stage83_U0_ap_start : STD_LOGIC;
    signal fft_stage83_U0_ap_done : STD_LOGIC;
    signal fft_stage83_U0_ap_continue : STD_LOGIC;
    signal fft_stage83_U0_ap_idle : STD_LOGIC;
    signal fft_stage83_U0_ap_ready : STD_LOGIC;
    signal fft_stage83_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage83_U0_X_R_V_ce0 : STD_LOGIC;
    signal fft_stage83_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage83_U0_X_R_V_ce1 : STD_LOGIC;
    signal fft_stage83_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage83_U0_X_I_V_ce0 : STD_LOGIC;
    signal fft_stage83_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage83_U0_X_I_V_ce1 : STD_LOGIC;
    signal fft_stage83_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage83_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage83_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage83_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage83_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage83_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage83_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage83_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage83_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage83_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage83_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage83_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage83_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage83_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage83_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage83_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage4_I_V : STD_LOGIC;
    signal fft_stage83_U0_Out_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage4_I_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage4_I_V : STD_LOGIC;
    signal ap_channel_done_Stage4_R_V : STD_LOGIC;
    signal fft_stage83_U0_Out_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage4_R_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage4_R_V : STD_LOGIC;
    signal fft_stage84_U0_ap_start : STD_LOGIC;
    signal fft_stage84_U0_ap_done : STD_LOGIC;
    signal fft_stage84_U0_ap_continue : STD_LOGIC;
    signal fft_stage84_U0_ap_idle : STD_LOGIC;
    signal fft_stage84_U0_ap_ready : STD_LOGIC;
    signal fft_stage84_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage84_U0_X_R_V_ce0 : STD_LOGIC;
    signal fft_stage84_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage84_U0_X_R_V_ce1 : STD_LOGIC;
    signal fft_stage84_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage84_U0_X_I_V_ce0 : STD_LOGIC;
    signal fft_stage84_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage84_U0_X_I_V_ce1 : STD_LOGIC;
    signal fft_stage84_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage84_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage84_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage84_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage84_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage84_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage84_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage84_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage84_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage84_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage84_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage84_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage84_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage84_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage84_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage84_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage5_I_V : STD_LOGIC;
    signal fft_stage84_U0_Out_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage5_I_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage5_I_V : STD_LOGIC;
    signal ap_channel_done_Stage5_R_V : STD_LOGIC;
    signal fft_stage84_U0_Out_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage5_R_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage5_R_V : STD_LOGIC;
    signal fft_stage85_U0_ap_start : STD_LOGIC;
    signal fft_stage85_U0_ap_done : STD_LOGIC;
    signal fft_stage85_U0_ap_continue : STD_LOGIC;
    signal fft_stage85_U0_ap_idle : STD_LOGIC;
    signal fft_stage85_U0_ap_ready : STD_LOGIC;
    signal fft_stage85_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage85_U0_X_R_V_ce0 : STD_LOGIC;
    signal fft_stage85_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage85_U0_X_R_V_ce1 : STD_LOGIC;
    signal fft_stage85_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage85_U0_X_I_V_ce0 : STD_LOGIC;
    signal fft_stage85_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage85_U0_X_I_V_ce1 : STD_LOGIC;
    signal fft_stage85_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage85_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage85_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage85_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage85_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage85_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage85_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage85_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage85_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage85_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage85_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage85_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage85_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage85_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage85_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage85_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage6_I_V : STD_LOGIC;
    signal fft_stage85_U0_Out_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage6_I_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage6_I_V : STD_LOGIC;
    signal ap_channel_done_Stage6_R_V : STD_LOGIC;
    signal fft_stage85_U0_Out_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage6_R_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage6_R_V : STD_LOGIC;
    signal fft_stage86_U0_ap_start : STD_LOGIC;
    signal fft_stage86_U0_ap_done : STD_LOGIC;
    signal fft_stage86_U0_ap_continue : STD_LOGIC;
    signal fft_stage86_U0_ap_idle : STD_LOGIC;
    signal fft_stage86_U0_ap_ready : STD_LOGIC;
    signal fft_stage86_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage86_U0_X_R_V_ce0 : STD_LOGIC;
    signal fft_stage86_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage86_U0_X_R_V_ce1 : STD_LOGIC;
    signal fft_stage86_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage86_U0_X_I_V_ce0 : STD_LOGIC;
    signal fft_stage86_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage86_U0_X_I_V_ce1 : STD_LOGIC;
    signal fft_stage86_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage86_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage86_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage86_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage86_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage86_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage86_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage86_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage86_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage86_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage86_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage86_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage86_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage86_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage86_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage86_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage7_I_V : STD_LOGIC;
    signal fft_stage86_U0_Out_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage7_I_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage7_I_V : STD_LOGIC;
    signal ap_channel_done_Stage7_R_V : STD_LOGIC;
    signal fft_stage86_U0_Out_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage7_R_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage7_R_V : STD_LOGIC;
    signal fft_stage87_U0_ap_start : STD_LOGIC;
    signal fft_stage87_U0_ap_done : STD_LOGIC;
    signal fft_stage87_U0_ap_continue : STD_LOGIC;
    signal fft_stage87_U0_ap_idle : STD_LOGIC;
    signal fft_stage87_U0_ap_ready : STD_LOGIC;
    signal fft_stage87_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage87_U0_X_R_V_ce0 : STD_LOGIC;
    signal fft_stage87_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage87_U0_X_R_V_ce1 : STD_LOGIC;
    signal fft_stage87_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage87_U0_X_I_V_ce0 : STD_LOGIC;
    signal fft_stage87_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage87_U0_X_I_V_ce1 : STD_LOGIC;
    signal fft_stage87_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage87_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage87_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage87_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage87_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage87_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage87_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage87_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage87_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage87_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage87_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage87_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage87_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage87_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage87_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage87_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage8_I_V : STD_LOGIC;
    signal fft_stage87_U0_Out_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage8_I_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage8_I_V : STD_LOGIC;
    signal ap_channel_done_Stage8_R_V : STD_LOGIC;
    signal fft_stage87_U0_Out_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage8_R_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage8_R_V : STD_LOGIC;
    signal fft_stage88_U0_ap_start : STD_LOGIC;
    signal fft_stage88_U0_ap_done : STD_LOGIC;
    signal fft_stage88_U0_ap_continue : STD_LOGIC;
    signal fft_stage88_U0_ap_idle : STD_LOGIC;
    signal fft_stage88_U0_ap_ready : STD_LOGIC;
    signal fft_stage88_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage88_U0_X_R_V_ce0 : STD_LOGIC;
    signal fft_stage88_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage88_U0_X_R_V_ce1 : STD_LOGIC;
    signal fft_stage88_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage88_U0_X_I_V_ce0 : STD_LOGIC;
    signal fft_stage88_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage88_U0_X_I_V_ce1 : STD_LOGIC;
    signal fft_stage88_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage88_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage88_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage88_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage88_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage88_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage88_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage88_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage88_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage88_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage88_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage88_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage88_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage88_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage88_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage88_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage9_I_V : STD_LOGIC;
    signal fft_stage88_U0_Out_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage9_I_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage9_I_V : STD_LOGIC;
    signal ap_channel_done_Stage9_R_V : STD_LOGIC;
    signal fft_stage88_U0_Out_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage9_R_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage9_R_V : STD_LOGIC;
    signal fft_stage89_U0_ap_start : STD_LOGIC;
    signal fft_stage89_U0_ap_done : STD_LOGIC;
    signal fft_stage89_U0_ap_continue : STD_LOGIC;
    signal fft_stage89_U0_ap_idle : STD_LOGIC;
    signal fft_stage89_U0_ap_ready : STD_LOGIC;
    signal fft_stage89_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage89_U0_X_R_V_ce0 : STD_LOGIC;
    signal fft_stage89_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage89_U0_X_R_V_ce1 : STD_LOGIC;
    signal fft_stage89_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage89_U0_X_I_V_ce0 : STD_LOGIC;
    signal fft_stage89_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage89_U0_X_I_V_ce1 : STD_LOGIC;
    signal fft_stage89_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage89_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage89_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage89_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage89_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage89_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage89_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage89_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage89_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage89_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage89_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage89_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage89_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage89_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage89_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage89_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_channel_done_Stage10_I_V : STD_LOGIC;
    signal fft_stage89_U0_Out_I_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage10_I_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage10_I_V : STD_LOGIC;
    signal ap_channel_done_Stage10_R_V : STD_LOGIC;
    signal fft_stage89_U0_Out_R_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage10_R_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage10_R_V : STD_LOGIC;
    signal fft_stage90_U0_ap_start : STD_LOGIC;
    signal fft_stage90_U0_ap_done : STD_LOGIC;
    signal fft_stage90_U0_ap_continue : STD_LOGIC;
    signal fft_stage90_U0_ap_idle : STD_LOGIC;
    signal fft_stage90_U0_ap_ready : STD_LOGIC;
    signal fft_stage90_U0_X_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage90_U0_X_R_V_ce0 : STD_LOGIC;
    signal fft_stage90_U0_X_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage90_U0_X_R_V_ce1 : STD_LOGIC;
    signal fft_stage90_U0_X_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage90_U0_X_I_V_ce0 : STD_LOGIC;
    signal fft_stage90_U0_X_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage90_U0_X_I_V_ce1 : STD_LOGIC;
    signal fft_stage90_U0_Out_R_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage90_U0_Out_R_V_ce0 : STD_LOGIC;
    signal fft_stage90_U0_Out_R_V_we0 : STD_LOGIC;
    signal fft_stage90_U0_Out_R_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage90_U0_Out_R_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage90_U0_Out_R_V_ce1 : STD_LOGIC;
    signal fft_stage90_U0_Out_R_V_we1 : STD_LOGIC;
    signal fft_stage90_U0_Out_R_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage90_U0_Out_I_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage90_U0_Out_I_V_ce0 : STD_LOGIC;
    signal fft_stage90_U0_Out_I_V_we0 : STD_LOGIC;
    signal fft_stage90_U0_Out_I_V_d0 : STD_LOGIC_VECTOR (21 downto 0);
    signal fft_stage90_U0_Out_I_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal fft_stage90_U0_Out_I_V_ce1 : STD_LOGIC;
    signal fft_stage90_U0_Out_I_V_we1 : STD_LOGIC;
    signal fft_stage90_U0_Out_I_V_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal Stage1_R_V_i_full_n : STD_LOGIC;
    signal Stage1_R_V_t_empty_n : STD_LOGIC;
    signal Stage1_R_V_t_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage1_R_V_t_we1 : STD_LOGIC;
    signal Stage1_I_V_i_full_n : STD_LOGIC;
    signal Stage1_I_V_t_empty_n : STD_LOGIC;
    signal Stage1_I_V_t_d1 : STD_LOGIC_VECTOR (21 downto 0);
    signal Stage1_I_V_t_we1 : STD_LOGIC;
    signal Stage2_R_V_i_full_n : STD_LOGIC;
    signal Stage2_R_V_t_empty_n : STD_LOGIC;
    signal Stage2_I_V_i_full_n : STD_LOGIC;
    signal Stage2_I_V_t_empty_n : STD_LOGIC;
    signal Stage3_R_V_i_full_n : STD_LOGIC;
    signal Stage3_R_V_t_empty_n : STD_LOGIC;
    signal Stage3_I_V_i_full_n : STD_LOGIC;
    signal Stage3_I_V_t_empty_n : STD_LOGIC;
    signal Stage4_R_V_i_full_n : STD_LOGIC;
    signal Stage4_R_V_t_empty_n : STD_LOGIC;
    signal Stage4_I_V_i_full_n : STD_LOGIC;
    signal Stage4_I_V_t_empty_n : STD_LOGIC;
    signal Stage5_R_V_i_full_n : STD_LOGIC;
    signal Stage5_R_V_t_empty_n : STD_LOGIC;
    signal Stage5_I_V_i_full_n : STD_LOGIC;
    signal Stage5_I_V_t_empty_n : STD_LOGIC;
    signal Stage6_R_V_i_full_n : STD_LOGIC;
    signal Stage6_R_V_t_empty_n : STD_LOGIC;
    signal Stage6_I_V_i_full_n : STD_LOGIC;
    signal Stage6_I_V_t_empty_n : STD_LOGIC;
    signal Stage7_R_V_i_full_n : STD_LOGIC;
    signal Stage7_R_V_t_empty_n : STD_LOGIC;
    signal Stage7_I_V_i_full_n : STD_LOGIC;
    signal Stage7_I_V_t_empty_n : STD_LOGIC;
    signal Stage8_R_V_i_full_n : STD_LOGIC;
    signal Stage8_R_V_t_empty_n : STD_LOGIC;
    signal Stage8_I_V_i_full_n : STD_LOGIC;
    signal Stage8_I_V_t_empty_n : STD_LOGIC;
    signal Stage9_R_V_i_full_n : STD_LOGIC;
    signal Stage9_R_V_t_empty_n : STD_LOGIC;
    signal Stage9_I_V_i_full_n : STD_LOGIC;
    signal Stage9_I_V_t_empty_n : STD_LOGIC;
    signal Stage10_R_V_i_full_n : STD_LOGIC;
    signal Stage10_R_V_t_empty_n : STD_LOGIC;
    signal Stage10_I_V_i_full_n : STD_LOGIC;
    signal Stage10_I_V_t_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal bit_reverse_U0_start_full_n : STD_LOGIC;
    signal bit_reverse_U0_start_write : STD_LOGIC;
    signal fft_stage81_U0_start_full_n : STD_LOGIC;
    signal fft_stage81_U0_start_write : STD_LOGIC;
    signal fft_stage82_U0_start_full_n : STD_LOGIC;
    signal fft_stage82_U0_start_write : STD_LOGIC;
    signal fft_stage83_U0_start_full_n : STD_LOGIC;
    signal fft_stage83_U0_start_write : STD_LOGIC;
    signal fft_stage84_U0_start_full_n : STD_LOGIC;
    signal fft_stage84_U0_start_write : STD_LOGIC;
    signal fft_stage85_U0_start_full_n : STD_LOGIC;
    signal fft_stage85_U0_start_write : STD_LOGIC;
    signal fft_stage86_U0_start_full_n : STD_LOGIC;
    signal fft_stage86_U0_start_write : STD_LOGIC;
    signal fft_stage87_U0_start_full_n : STD_LOGIC;
    signal fft_stage87_U0_start_write : STD_LOGIC;
    signal fft_stage88_U0_start_full_n : STD_LOGIC;
    signal fft_stage88_U0_start_write : STD_LOGIC;
    signal fft_stage89_U0_start_full_n : STD_LOGIC;
    signal fft_stage89_U0_start_write : STD_LOGIC;
    signal fft_stage90_U0_start_full_n : STD_LOGIC;
    signal fft_stage90_U0_start_write : STD_LOGIC;

    component bit_reverse IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        OUT_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        OUT_R_V_ce0 : OUT STD_LOGIC;
        OUT_R_V_we0 : OUT STD_LOGIC;
        OUT_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        OUT_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        OUT_I_V_ce0 : OUT STD_LOGIC;
        OUT_I_V_we0 : OUT STD_LOGIC;
        OUT_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage81 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage82 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage83 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage84 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage85 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage86 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage87 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage88 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage89 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_stage90 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce0 : OUT STD_LOGIC;
        X_R_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_V_ce1 : OUT STD_LOGIC;
        X_R_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce0 : OUT STD_LOGIC;
        X_I_V_q0 : IN STD_LOGIC_VECTOR (21 downto 0);
        X_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_V_ce1 : OUT STD_LOGIC;
        X_I_V_q1 : IN STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce0 : OUT STD_LOGIC;
        Out_R_V_we0 : OUT STD_LOGIC;
        Out_R_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_R_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_R_V_ce1 : OUT STD_LOGIC;
        Out_R_V_we1 : OUT STD_LOGIC;
        Out_R_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce0 : OUT STD_LOGIC;
        Out_I_V_we0 : OUT STD_LOGIC;
        Out_I_V_d0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        Out_I_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Out_I_V_ce1 : OUT STD_LOGIC;
        Out_I_V_we1 : OUT STD_LOGIC;
        Out_I_V_d1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component fft_streaming_StalbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (21 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (21 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component fft_streaming_Stancg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (21 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (21 downto 0);
        i_q1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (21 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (21 downto 0);
        t_q1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;



begin
    Stage1_R_V_U : component fft_streaming_StalbW
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => bit_reverse_U0_OUT_R_V_address0,
        i_ce0 => bit_reverse_U0_OUT_R_V_ce0,
        i_we0 => bit_reverse_U0_OUT_R_V_we0,
        i_d0 => bit_reverse_U0_OUT_R_V_d0,
        i_q0 => Stage1_R_V_i_q0,
        i_address1 => ap_const_lv10_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => Stage1_R_V_i_q1,
        t_address0 => fft_stage81_U0_X_R_V_address0,
        t_ce0 => fft_stage81_U0_X_R_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage1_R_V_t_q0,
        t_address1 => fft_stage81_U0_X_R_V_address1,
        t_ce1 => fft_stage81_U0_X_R_V_ce1,
        t_q1 => Stage1_R_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage1_R_V_i_full_n,
        i_write => ap_channel_done_Stage1_R_V,
        t_empty_n => Stage1_R_V_t_empty_n,
        t_read => fft_stage81_U0_ap_ready);

    Stage1_I_V_U : component fft_streaming_StalbW
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => bit_reverse_U0_OUT_I_V_address0,
        i_ce0 => bit_reverse_U0_OUT_I_V_ce0,
        i_we0 => bit_reverse_U0_OUT_I_V_we0,
        i_d0 => bit_reverse_U0_OUT_I_V_d0,
        i_q0 => Stage1_I_V_i_q0,
        i_address1 => ap_const_lv10_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => Stage1_I_V_i_q1,
        t_address0 => fft_stage81_U0_X_I_V_address0,
        t_ce0 => fft_stage81_U0_X_I_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage1_I_V_t_q0,
        t_address1 => fft_stage81_U0_X_I_V_address1,
        t_ce1 => fft_stage81_U0_X_I_V_ce1,
        t_q1 => Stage1_I_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage1_I_V_i_full_n,
        i_write => ap_channel_done_Stage1_I_V,
        t_empty_n => Stage1_I_V_t_empty_n,
        t_read => fft_stage81_U0_ap_ready);

    Stage2_R_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage81_U0_Out_R_V_address0,
        i_ce0 => fft_stage81_U0_Out_R_V_ce0,
        i_we0 => fft_stage81_U0_Out_R_V_we0,
        i_d0 => fft_stage81_U0_Out_R_V_d0,
        i_q0 => Stage2_R_V_i_q0,
        i_address1 => fft_stage81_U0_Out_R_V_address1,
        i_ce1 => fft_stage81_U0_Out_R_V_ce1,
        i_we1 => fft_stage81_U0_Out_R_V_we1,
        i_d1 => fft_stage81_U0_Out_R_V_d1,
        i_q1 => Stage2_R_V_i_q1,
        t_address0 => fft_stage82_U0_X_R_V_address0,
        t_ce0 => fft_stage82_U0_X_R_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage2_R_V_t_q0,
        t_address1 => fft_stage82_U0_X_R_V_address1,
        t_ce1 => fft_stage82_U0_X_R_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage2_R_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage2_R_V_i_full_n,
        i_write => ap_channel_done_Stage2_R_V,
        t_empty_n => Stage2_R_V_t_empty_n,
        t_read => fft_stage82_U0_ap_ready);

    Stage2_I_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage81_U0_Out_I_V_address0,
        i_ce0 => fft_stage81_U0_Out_I_V_ce0,
        i_we0 => fft_stage81_U0_Out_I_V_we0,
        i_d0 => fft_stage81_U0_Out_I_V_d0,
        i_q0 => Stage2_I_V_i_q0,
        i_address1 => fft_stage81_U0_Out_I_V_address1,
        i_ce1 => fft_stage81_U0_Out_I_V_ce1,
        i_we1 => fft_stage81_U0_Out_I_V_we1,
        i_d1 => fft_stage81_U0_Out_I_V_d1,
        i_q1 => Stage2_I_V_i_q1,
        t_address0 => fft_stage82_U0_X_I_V_address0,
        t_ce0 => fft_stage82_U0_X_I_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage2_I_V_t_q0,
        t_address1 => fft_stage82_U0_X_I_V_address1,
        t_ce1 => fft_stage82_U0_X_I_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage2_I_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage2_I_V_i_full_n,
        i_write => ap_channel_done_Stage2_I_V,
        t_empty_n => Stage2_I_V_t_empty_n,
        t_read => fft_stage82_U0_ap_ready);

    Stage3_R_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage82_U0_Out_R_V_address0,
        i_ce0 => fft_stage82_U0_Out_R_V_ce0,
        i_we0 => fft_stage82_U0_Out_R_V_we0,
        i_d0 => fft_stage82_U0_Out_R_V_d0,
        i_q0 => Stage3_R_V_i_q0,
        i_address1 => fft_stage82_U0_Out_R_V_address1,
        i_ce1 => fft_stage82_U0_Out_R_V_ce1,
        i_we1 => fft_stage82_U0_Out_R_V_we1,
        i_d1 => fft_stage82_U0_Out_R_V_d1,
        i_q1 => Stage3_R_V_i_q1,
        t_address0 => fft_stage83_U0_X_R_V_address0,
        t_ce0 => fft_stage83_U0_X_R_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage3_R_V_t_q0,
        t_address1 => fft_stage83_U0_X_R_V_address1,
        t_ce1 => fft_stage83_U0_X_R_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage3_R_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage3_R_V_i_full_n,
        i_write => ap_channel_done_Stage3_R_V,
        t_empty_n => Stage3_R_V_t_empty_n,
        t_read => fft_stage83_U0_ap_ready);

    Stage3_I_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage82_U0_Out_I_V_address0,
        i_ce0 => fft_stage82_U0_Out_I_V_ce0,
        i_we0 => fft_stage82_U0_Out_I_V_we0,
        i_d0 => fft_stage82_U0_Out_I_V_d0,
        i_q0 => Stage3_I_V_i_q0,
        i_address1 => fft_stage82_U0_Out_I_V_address1,
        i_ce1 => fft_stage82_U0_Out_I_V_ce1,
        i_we1 => fft_stage82_U0_Out_I_V_we1,
        i_d1 => fft_stage82_U0_Out_I_V_d1,
        i_q1 => Stage3_I_V_i_q1,
        t_address0 => fft_stage83_U0_X_I_V_address0,
        t_ce0 => fft_stage83_U0_X_I_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage3_I_V_t_q0,
        t_address1 => fft_stage83_U0_X_I_V_address1,
        t_ce1 => fft_stage83_U0_X_I_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage3_I_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage3_I_V_i_full_n,
        i_write => ap_channel_done_Stage3_I_V,
        t_empty_n => Stage3_I_V_t_empty_n,
        t_read => fft_stage83_U0_ap_ready);

    Stage4_R_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage83_U0_Out_R_V_address0,
        i_ce0 => fft_stage83_U0_Out_R_V_ce0,
        i_we0 => fft_stage83_U0_Out_R_V_we0,
        i_d0 => fft_stage83_U0_Out_R_V_d0,
        i_q0 => Stage4_R_V_i_q0,
        i_address1 => fft_stage83_U0_Out_R_V_address1,
        i_ce1 => fft_stage83_U0_Out_R_V_ce1,
        i_we1 => fft_stage83_U0_Out_R_V_we1,
        i_d1 => fft_stage83_U0_Out_R_V_d1,
        i_q1 => Stage4_R_V_i_q1,
        t_address0 => fft_stage84_U0_X_R_V_address0,
        t_ce0 => fft_stage84_U0_X_R_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage4_R_V_t_q0,
        t_address1 => fft_stage84_U0_X_R_V_address1,
        t_ce1 => fft_stage84_U0_X_R_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage4_R_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage4_R_V_i_full_n,
        i_write => ap_channel_done_Stage4_R_V,
        t_empty_n => Stage4_R_V_t_empty_n,
        t_read => fft_stage84_U0_ap_ready);

    Stage4_I_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage83_U0_Out_I_V_address0,
        i_ce0 => fft_stage83_U0_Out_I_V_ce0,
        i_we0 => fft_stage83_U0_Out_I_V_we0,
        i_d0 => fft_stage83_U0_Out_I_V_d0,
        i_q0 => Stage4_I_V_i_q0,
        i_address1 => fft_stage83_U0_Out_I_V_address1,
        i_ce1 => fft_stage83_U0_Out_I_V_ce1,
        i_we1 => fft_stage83_U0_Out_I_V_we1,
        i_d1 => fft_stage83_U0_Out_I_V_d1,
        i_q1 => Stage4_I_V_i_q1,
        t_address0 => fft_stage84_U0_X_I_V_address0,
        t_ce0 => fft_stage84_U0_X_I_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage4_I_V_t_q0,
        t_address1 => fft_stage84_U0_X_I_V_address1,
        t_ce1 => fft_stage84_U0_X_I_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage4_I_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage4_I_V_i_full_n,
        i_write => ap_channel_done_Stage4_I_V,
        t_empty_n => Stage4_I_V_t_empty_n,
        t_read => fft_stage84_U0_ap_ready);

    Stage5_R_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage84_U0_Out_R_V_address0,
        i_ce0 => fft_stage84_U0_Out_R_V_ce0,
        i_we0 => fft_stage84_U0_Out_R_V_we0,
        i_d0 => fft_stage84_U0_Out_R_V_d0,
        i_q0 => Stage5_R_V_i_q0,
        i_address1 => fft_stage84_U0_Out_R_V_address1,
        i_ce1 => fft_stage84_U0_Out_R_V_ce1,
        i_we1 => fft_stage84_U0_Out_R_V_we1,
        i_d1 => fft_stage84_U0_Out_R_V_d1,
        i_q1 => Stage5_R_V_i_q1,
        t_address0 => fft_stage85_U0_X_R_V_address0,
        t_ce0 => fft_stage85_U0_X_R_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage5_R_V_t_q0,
        t_address1 => fft_stage85_U0_X_R_V_address1,
        t_ce1 => fft_stage85_U0_X_R_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage5_R_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage5_R_V_i_full_n,
        i_write => ap_channel_done_Stage5_R_V,
        t_empty_n => Stage5_R_V_t_empty_n,
        t_read => fft_stage85_U0_ap_ready);

    Stage5_I_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage84_U0_Out_I_V_address0,
        i_ce0 => fft_stage84_U0_Out_I_V_ce0,
        i_we0 => fft_stage84_U0_Out_I_V_we0,
        i_d0 => fft_stage84_U0_Out_I_V_d0,
        i_q0 => Stage5_I_V_i_q0,
        i_address1 => fft_stage84_U0_Out_I_V_address1,
        i_ce1 => fft_stage84_U0_Out_I_V_ce1,
        i_we1 => fft_stage84_U0_Out_I_V_we1,
        i_d1 => fft_stage84_U0_Out_I_V_d1,
        i_q1 => Stage5_I_V_i_q1,
        t_address0 => fft_stage85_U0_X_I_V_address0,
        t_ce0 => fft_stage85_U0_X_I_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage5_I_V_t_q0,
        t_address1 => fft_stage85_U0_X_I_V_address1,
        t_ce1 => fft_stage85_U0_X_I_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage5_I_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage5_I_V_i_full_n,
        i_write => ap_channel_done_Stage5_I_V,
        t_empty_n => Stage5_I_V_t_empty_n,
        t_read => fft_stage85_U0_ap_ready);

    Stage6_R_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage85_U0_Out_R_V_address0,
        i_ce0 => fft_stage85_U0_Out_R_V_ce0,
        i_we0 => fft_stage85_U0_Out_R_V_we0,
        i_d0 => fft_stage85_U0_Out_R_V_d0,
        i_q0 => Stage6_R_V_i_q0,
        i_address1 => fft_stage85_U0_Out_R_V_address1,
        i_ce1 => fft_stage85_U0_Out_R_V_ce1,
        i_we1 => fft_stage85_U0_Out_R_V_we1,
        i_d1 => fft_stage85_U0_Out_R_V_d1,
        i_q1 => Stage6_R_V_i_q1,
        t_address0 => fft_stage86_U0_X_R_V_address0,
        t_ce0 => fft_stage86_U0_X_R_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage6_R_V_t_q0,
        t_address1 => fft_stage86_U0_X_R_V_address1,
        t_ce1 => fft_stage86_U0_X_R_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage6_R_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage6_R_V_i_full_n,
        i_write => ap_channel_done_Stage6_R_V,
        t_empty_n => Stage6_R_V_t_empty_n,
        t_read => fft_stage86_U0_ap_ready);

    Stage6_I_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage85_U0_Out_I_V_address0,
        i_ce0 => fft_stage85_U0_Out_I_V_ce0,
        i_we0 => fft_stage85_U0_Out_I_V_we0,
        i_d0 => fft_stage85_U0_Out_I_V_d0,
        i_q0 => Stage6_I_V_i_q0,
        i_address1 => fft_stage85_U0_Out_I_V_address1,
        i_ce1 => fft_stage85_U0_Out_I_V_ce1,
        i_we1 => fft_stage85_U0_Out_I_V_we1,
        i_d1 => fft_stage85_U0_Out_I_V_d1,
        i_q1 => Stage6_I_V_i_q1,
        t_address0 => fft_stage86_U0_X_I_V_address0,
        t_ce0 => fft_stage86_U0_X_I_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage6_I_V_t_q0,
        t_address1 => fft_stage86_U0_X_I_V_address1,
        t_ce1 => fft_stage86_U0_X_I_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage6_I_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage6_I_V_i_full_n,
        i_write => ap_channel_done_Stage6_I_V,
        t_empty_n => Stage6_I_V_t_empty_n,
        t_read => fft_stage86_U0_ap_ready);

    Stage7_R_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage86_U0_Out_R_V_address0,
        i_ce0 => fft_stage86_U0_Out_R_V_ce0,
        i_we0 => fft_stage86_U0_Out_R_V_we0,
        i_d0 => fft_stage86_U0_Out_R_V_d0,
        i_q0 => Stage7_R_V_i_q0,
        i_address1 => fft_stage86_U0_Out_R_V_address1,
        i_ce1 => fft_stage86_U0_Out_R_V_ce1,
        i_we1 => fft_stage86_U0_Out_R_V_we1,
        i_d1 => fft_stage86_U0_Out_R_V_d1,
        i_q1 => Stage7_R_V_i_q1,
        t_address0 => fft_stage87_U0_X_R_V_address0,
        t_ce0 => fft_stage87_U0_X_R_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage7_R_V_t_q0,
        t_address1 => fft_stage87_U0_X_R_V_address1,
        t_ce1 => fft_stage87_U0_X_R_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage7_R_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage7_R_V_i_full_n,
        i_write => ap_channel_done_Stage7_R_V,
        t_empty_n => Stage7_R_V_t_empty_n,
        t_read => fft_stage87_U0_ap_ready);

    Stage7_I_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage86_U0_Out_I_V_address0,
        i_ce0 => fft_stage86_U0_Out_I_V_ce0,
        i_we0 => fft_stage86_U0_Out_I_V_we0,
        i_d0 => fft_stage86_U0_Out_I_V_d0,
        i_q0 => Stage7_I_V_i_q0,
        i_address1 => fft_stage86_U0_Out_I_V_address1,
        i_ce1 => fft_stage86_U0_Out_I_V_ce1,
        i_we1 => fft_stage86_U0_Out_I_V_we1,
        i_d1 => fft_stage86_U0_Out_I_V_d1,
        i_q1 => Stage7_I_V_i_q1,
        t_address0 => fft_stage87_U0_X_I_V_address0,
        t_ce0 => fft_stage87_U0_X_I_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage7_I_V_t_q0,
        t_address1 => fft_stage87_U0_X_I_V_address1,
        t_ce1 => fft_stage87_U0_X_I_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage7_I_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage7_I_V_i_full_n,
        i_write => ap_channel_done_Stage7_I_V,
        t_empty_n => Stage7_I_V_t_empty_n,
        t_read => fft_stage87_U0_ap_ready);

    Stage8_R_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage87_U0_Out_R_V_address0,
        i_ce0 => fft_stage87_U0_Out_R_V_ce0,
        i_we0 => fft_stage87_U0_Out_R_V_we0,
        i_d0 => fft_stage87_U0_Out_R_V_d0,
        i_q0 => Stage8_R_V_i_q0,
        i_address1 => fft_stage87_U0_Out_R_V_address1,
        i_ce1 => fft_stage87_U0_Out_R_V_ce1,
        i_we1 => fft_stage87_U0_Out_R_V_we1,
        i_d1 => fft_stage87_U0_Out_R_V_d1,
        i_q1 => Stage8_R_V_i_q1,
        t_address0 => fft_stage88_U0_X_R_V_address0,
        t_ce0 => fft_stage88_U0_X_R_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage8_R_V_t_q0,
        t_address1 => fft_stage88_U0_X_R_V_address1,
        t_ce1 => fft_stage88_U0_X_R_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage8_R_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage8_R_V_i_full_n,
        i_write => ap_channel_done_Stage8_R_V,
        t_empty_n => Stage8_R_V_t_empty_n,
        t_read => fft_stage88_U0_ap_ready);

    Stage8_I_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage87_U0_Out_I_V_address0,
        i_ce0 => fft_stage87_U0_Out_I_V_ce0,
        i_we0 => fft_stage87_U0_Out_I_V_we0,
        i_d0 => fft_stage87_U0_Out_I_V_d0,
        i_q0 => Stage8_I_V_i_q0,
        i_address1 => fft_stage87_U0_Out_I_V_address1,
        i_ce1 => fft_stage87_U0_Out_I_V_ce1,
        i_we1 => fft_stage87_U0_Out_I_V_we1,
        i_d1 => fft_stage87_U0_Out_I_V_d1,
        i_q1 => Stage8_I_V_i_q1,
        t_address0 => fft_stage88_U0_X_I_V_address0,
        t_ce0 => fft_stage88_U0_X_I_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage8_I_V_t_q0,
        t_address1 => fft_stage88_U0_X_I_V_address1,
        t_ce1 => fft_stage88_U0_X_I_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage8_I_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage8_I_V_i_full_n,
        i_write => ap_channel_done_Stage8_I_V,
        t_empty_n => Stage8_I_V_t_empty_n,
        t_read => fft_stage88_U0_ap_ready);

    Stage9_R_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage88_U0_Out_R_V_address0,
        i_ce0 => fft_stage88_U0_Out_R_V_ce0,
        i_we0 => fft_stage88_U0_Out_R_V_we0,
        i_d0 => fft_stage88_U0_Out_R_V_d0,
        i_q0 => Stage9_R_V_i_q0,
        i_address1 => fft_stage88_U0_Out_R_V_address1,
        i_ce1 => fft_stage88_U0_Out_R_V_ce1,
        i_we1 => fft_stage88_U0_Out_R_V_we1,
        i_d1 => fft_stage88_U0_Out_R_V_d1,
        i_q1 => Stage9_R_V_i_q1,
        t_address0 => fft_stage89_U0_X_R_V_address0,
        t_ce0 => fft_stage89_U0_X_R_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage9_R_V_t_q0,
        t_address1 => fft_stage89_U0_X_R_V_address1,
        t_ce1 => fft_stage89_U0_X_R_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage9_R_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage9_R_V_i_full_n,
        i_write => ap_channel_done_Stage9_R_V,
        t_empty_n => Stage9_R_V_t_empty_n,
        t_read => fft_stage89_U0_ap_ready);

    Stage9_I_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage88_U0_Out_I_V_address0,
        i_ce0 => fft_stage88_U0_Out_I_V_ce0,
        i_we0 => fft_stage88_U0_Out_I_V_we0,
        i_d0 => fft_stage88_U0_Out_I_V_d0,
        i_q0 => Stage9_I_V_i_q0,
        i_address1 => fft_stage88_U0_Out_I_V_address1,
        i_ce1 => fft_stage88_U0_Out_I_V_ce1,
        i_we1 => fft_stage88_U0_Out_I_V_we1,
        i_d1 => fft_stage88_U0_Out_I_V_d1,
        i_q1 => Stage9_I_V_i_q1,
        t_address0 => fft_stage89_U0_X_I_V_address0,
        t_ce0 => fft_stage89_U0_X_I_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage9_I_V_t_q0,
        t_address1 => fft_stage89_U0_X_I_V_address1,
        t_ce1 => fft_stage89_U0_X_I_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage9_I_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage9_I_V_i_full_n,
        i_write => ap_channel_done_Stage9_I_V,
        t_empty_n => Stage9_I_V_t_empty_n,
        t_read => fft_stage89_U0_ap_ready);

    Stage10_R_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage89_U0_Out_R_V_address0,
        i_ce0 => fft_stage89_U0_Out_R_V_ce0,
        i_we0 => fft_stage89_U0_Out_R_V_we0,
        i_d0 => fft_stage89_U0_Out_R_V_d0,
        i_q0 => Stage10_R_V_i_q0,
        i_address1 => fft_stage89_U0_Out_R_V_address1,
        i_ce1 => fft_stage89_U0_Out_R_V_ce1,
        i_we1 => fft_stage89_U0_Out_R_V_we1,
        i_d1 => fft_stage89_U0_Out_R_V_d1,
        i_q1 => Stage10_R_V_i_q1,
        t_address0 => fft_stage90_U0_X_R_V_address0,
        t_ce0 => fft_stage90_U0_X_R_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage10_R_V_t_q0,
        t_address1 => fft_stage90_U0_X_R_V_address1,
        t_ce1 => fft_stage90_U0_X_R_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage10_R_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage10_R_V_i_full_n,
        i_write => ap_channel_done_Stage10_R_V,
        t_empty_n => Stage10_R_V_t_empty_n,
        t_read => fft_stage90_U0_ap_ready);

    Stage10_I_V_U : component fft_streaming_Stancg
    generic map (
        DataWidth => 22,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => fft_stage89_U0_Out_I_V_address0,
        i_ce0 => fft_stage89_U0_Out_I_V_ce0,
        i_we0 => fft_stage89_U0_Out_I_V_we0,
        i_d0 => fft_stage89_U0_Out_I_V_d0,
        i_q0 => Stage10_I_V_i_q0,
        i_address1 => fft_stage89_U0_Out_I_V_address1,
        i_ce1 => fft_stage89_U0_Out_I_V_ce1,
        i_we1 => fft_stage89_U0_Out_I_V_we1,
        i_d1 => fft_stage89_U0_Out_I_V_d1,
        i_q1 => Stage10_I_V_i_q1,
        t_address0 => fft_stage90_U0_X_I_V_address0,
        t_ce0 => fft_stage90_U0_X_I_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv22_0,
        t_q0 => Stage10_I_V_t_q0,
        t_address1 => fft_stage90_U0_X_I_V_address1,
        t_ce1 => fft_stage90_U0_X_I_V_ce1,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv22_0,
        t_q1 => Stage10_I_V_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage10_I_V_i_full_n,
        i_write => ap_channel_done_Stage10_I_V,
        t_empty_n => Stage10_I_V_t_empty_n,
        t_read => fft_stage90_U0_ap_ready);

    bit_reverse_U0 : component bit_reverse
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => bit_reverse_U0_ap_start,
        ap_done => bit_reverse_U0_ap_done,
        ap_continue => bit_reverse_U0_ap_continue,
        ap_idle => bit_reverse_U0_ap_idle,
        ap_ready => bit_reverse_U0_ap_ready,
        X_R_V_address0 => bit_reverse_U0_X_R_V_address0,
        X_R_V_ce0 => bit_reverse_U0_X_R_V_ce0,
        X_R_V_q0 => X_R_V_q0,
        X_I_V_address0 => bit_reverse_U0_X_I_V_address0,
        X_I_V_ce0 => bit_reverse_U0_X_I_V_ce0,
        X_I_V_q0 => X_I_V_q0,
        OUT_R_V_address0 => bit_reverse_U0_OUT_R_V_address0,
        OUT_R_V_ce0 => bit_reverse_U0_OUT_R_V_ce0,
        OUT_R_V_we0 => bit_reverse_U0_OUT_R_V_we0,
        OUT_R_V_d0 => bit_reverse_U0_OUT_R_V_d0,
        OUT_I_V_address0 => bit_reverse_U0_OUT_I_V_address0,
        OUT_I_V_ce0 => bit_reverse_U0_OUT_I_V_ce0,
        OUT_I_V_we0 => bit_reverse_U0_OUT_I_V_we0,
        OUT_I_V_d0 => bit_reverse_U0_OUT_I_V_d0);

    fft_stage81_U0 : component fft_stage81
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage81_U0_ap_start,
        ap_done => fft_stage81_U0_ap_done,
        ap_continue => fft_stage81_U0_ap_continue,
        ap_idle => fft_stage81_U0_ap_idle,
        ap_ready => fft_stage81_U0_ap_ready,
        X_R_V_address0 => fft_stage81_U0_X_R_V_address0,
        X_R_V_ce0 => fft_stage81_U0_X_R_V_ce0,
        X_R_V_q0 => Stage1_R_V_t_q0,
        X_R_V_address1 => fft_stage81_U0_X_R_V_address1,
        X_R_V_ce1 => fft_stage81_U0_X_R_V_ce1,
        X_R_V_q1 => Stage1_R_V_t_q1,
        X_I_V_address0 => fft_stage81_U0_X_I_V_address0,
        X_I_V_ce0 => fft_stage81_U0_X_I_V_ce0,
        X_I_V_q0 => Stage1_I_V_t_q0,
        X_I_V_address1 => fft_stage81_U0_X_I_V_address1,
        X_I_V_ce1 => fft_stage81_U0_X_I_V_ce1,
        X_I_V_q1 => Stage1_I_V_t_q1,
        Out_R_V_address0 => fft_stage81_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage81_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage81_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage81_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage81_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage81_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage81_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage81_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage81_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage81_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage81_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage81_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage81_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage81_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage81_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage81_U0_Out_I_V_d1);

    fft_stage82_U0 : component fft_stage82
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage82_U0_ap_start,
        ap_done => fft_stage82_U0_ap_done,
        ap_continue => fft_stage82_U0_ap_continue,
        ap_idle => fft_stage82_U0_ap_idle,
        ap_ready => fft_stage82_U0_ap_ready,
        X_R_V_address0 => fft_stage82_U0_X_R_V_address0,
        X_R_V_ce0 => fft_stage82_U0_X_R_V_ce0,
        X_R_V_q0 => Stage2_R_V_t_q0,
        X_R_V_address1 => fft_stage82_U0_X_R_V_address1,
        X_R_V_ce1 => fft_stage82_U0_X_R_V_ce1,
        X_R_V_q1 => Stage2_R_V_t_q1,
        X_I_V_address0 => fft_stage82_U0_X_I_V_address0,
        X_I_V_ce0 => fft_stage82_U0_X_I_V_ce0,
        X_I_V_q0 => Stage2_I_V_t_q0,
        X_I_V_address1 => fft_stage82_U0_X_I_V_address1,
        X_I_V_ce1 => fft_stage82_U0_X_I_V_ce1,
        X_I_V_q1 => Stage2_I_V_t_q1,
        Out_R_V_address0 => fft_stage82_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage82_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage82_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage82_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage82_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage82_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage82_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage82_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage82_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage82_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage82_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage82_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage82_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage82_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage82_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage82_U0_Out_I_V_d1);

    fft_stage83_U0 : component fft_stage83
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage83_U0_ap_start,
        ap_done => fft_stage83_U0_ap_done,
        ap_continue => fft_stage83_U0_ap_continue,
        ap_idle => fft_stage83_U0_ap_idle,
        ap_ready => fft_stage83_U0_ap_ready,
        X_R_V_address0 => fft_stage83_U0_X_R_V_address0,
        X_R_V_ce0 => fft_stage83_U0_X_R_V_ce0,
        X_R_V_q0 => Stage3_R_V_t_q0,
        X_R_V_address1 => fft_stage83_U0_X_R_V_address1,
        X_R_V_ce1 => fft_stage83_U0_X_R_V_ce1,
        X_R_V_q1 => Stage3_R_V_t_q1,
        X_I_V_address0 => fft_stage83_U0_X_I_V_address0,
        X_I_V_ce0 => fft_stage83_U0_X_I_V_ce0,
        X_I_V_q0 => Stage3_I_V_t_q0,
        X_I_V_address1 => fft_stage83_U0_X_I_V_address1,
        X_I_V_ce1 => fft_stage83_U0_X_I_V_ce1,
        X_I_V_q1 => Stage3_I_V_t_q1,
        Out_R_V_address0 => fft_stage83_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage83_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage83_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage83_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage83_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage83_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage83_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage83_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage83_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage83_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage83_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage83_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage83_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage83_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage83_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage83_U0_Out_I_V_d1);

    fft_stage84_U0 : component fft_stage84
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage84_U0_ap_start,
        ap_done => fft_stage84_U0_ap_done,
        ap_continue => fft_stage84_U0_ap_continue,
        ap_idle => fft_stage84_U0_ap_idle,
        ap_ready => fft_stage84_U0_ap_ready,
        X_R_V_address0 => fft_stage84_U0_X_R_V_address0,
        X_R_V_ce0 => fft_stage84_U0_X_R_V_ce0,
        X_R_V_q0 => Stage4_R_V_t_q0,
        X_R_V_address1 => fft_stage84_U0_X_R_V_address1,
        X_R_V_ce1 => fft_stage84_U0_X_R_V_ce1,
        X_R_V_q1 => Stage4_R_V_t_q1,
        X_I_V_address0 => fft_stage84_U0_X_I_V_address0,
        X_I_V_ce0 => fft_stage84_U0_X_I_V_ce0,
        X_I_V_q0 => Stage4_I_V_t_q0,
        X_I_V_address1 => fft_stage84_U0_X_I_V_address1,
        X_I_V_ce1 => fft_stage84_U0_X_I_V_ce1,
        X_I_V_q1 => Stage4_I_V_t_q1,
        Out_R_V_address0 => fft_stage84_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage84_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage84_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage84_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage84_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage84_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage84_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage84_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage84_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage84_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage84_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage84_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage84_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage84_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage84_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage84_U0_Out_I_V_d1);

    fft_stage85_U0 : component fft_stage85
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage85_U0_ap_start,
        ap_done => fft_stage85_U0_ap_done,
        ap_continue => fft_stage85_U0_ap_continue,
        ap_idle => fft_stage85_U0_ap_idle,
        ap_ready => fft_stage85_U0_ap_ready,
        X_R_V_address0 => fft_stage85_U0_X_R_V_address0,
        X_R_V_ce0 => fft_stage85_U0_X_R_V_ce0,
        X_R_V_q0 => Stage5_R_V_t_q0,
        X_R_V_address1 => fft_stage85_U0_X_R_V_address1,
        X_R_V_ce1 => fft_stage85_U0_X_R_V_ce1,
        X_R_V_q1 => Stage5_R_V_t_q1,
        X_I_V_address0 => fft_stage85_U0_X_I_V_address0,
        X_I_V_ce0 => fft_stage85_U0_X_I_V_ce0,
        X_I_V_q0 => Stage5_I_V_t_q0,
        X_I_V_address1 => fft_stage85_U0_X_I_V_address1,
        X_I_V_ce1 => fft_stage85_U0_X_I_V_ce1,
        X_I_V_q1 => Stage5_I_V_t_q1,
        Out_R_V_address0 => fft_stage85_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage85_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage85_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage85_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage85_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage85_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage85_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage85_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage85_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage85_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage85_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage85_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage85_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage85_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage85_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage85_U0_Out_I_V_d1);

    fft_stage86_U0 : component fft_stage86
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage86_U0_ap_start,
        ap_done => fft_stage86_U0_ap_done,
        ap_continue => fft_stage86_U0_ap_continue,
        ap_idle => fft_stage86_U0_ap_idle,
        ap_ready => fft_stage86_U0_ap_ready,
        X_R_V_address0 => fft_stage86_U0_X_R_V_address0,
        X_R_V_ce0 => fft_stage86_U0_X_R_V_ce0,
        X_R_V_q0 => Stage6_R_V_t_q0,
        X_R_V_address1 => fft_stage86_U0_X_R_V_address1,
        X_R_V_ce1 => fft_stage86_U0_X_R_V_ce1,
        X_R_V_q1 => Stage6_R_V_t_q1,
        X_I_V_address0 => fft_stage86_U0_X_I_V_address0,
        X_I_V_ce0 => fft_stage86_U0_X_I_V_ce0,
        X_I_V_q0 => Stage6_I_V_t_q0,
        X_I_V_address1 => fft_stage86_U0_X_I_V_address1,
        X_I_V_ce1 => fft_stage86_U0_X_I_V_ce1,
        X_I_V_q1 => Stage6_I_V_t_q1,
        Out_R_V_address0 => fft_stage86_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage86_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage86_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage86_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage86_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage86_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage86_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage86_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage86_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage86_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage86_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage86_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage86_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage86_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage86_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage86_U0_Out_I_V_d1);

    fft_stage87_U0 : component fft_stage87
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage87_U0_ap_start,
        ap_done => fft_stage87_U0_ap_done,
        ap_continue => fft_stage87_U0_ap_continue,
        ap_idle => fft_stage87_U0_ap_idle,
        ap_ready => fft_stage87_U0_ap_ready,
        X_R_V_address0 => fft_stage87_U0_X_R_V_address0,
        X_R_V_ce0 => fft_stage87_U0_X_R_V_ce0,
        X_R_V_q0 => Stage7_R_V_t_q0,
        X_R_V_address1 => fft_stage87_U0_X_R_V_address1,
        X_R_V_ce1 => fft_stage87_U0_X_R_V_ce1,
        X_R_V_q1 => Stage7_R_V_t_q1,
        X_I_V_address0 => fft_stage87_U0_X_I_V_address0,
        X_I_V_ce0 => fft_stage87_U0_X_I_V_ce0,
        X_I_V_q0 => Stage7_I_V_t_q0,
        X_I_V_address1 => fft_stage87_U0_X_I_V_address1,
        X_I_V_ce1 => fft_stage87_U0_X_I_V_ce1,
        X_I_V_q1 => Stage7_I_V_t_q1,
        Out_R_V_address0 => fft_stage87_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage87_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage87_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage87_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage87_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage87_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage87_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage87_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage87_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage87_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage87_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage87_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage87_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage87_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage87_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage87_U0_Out_I_V_d1);

    fft_stage88_U0 : component fft_stage88
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage88_U0_ap_start,
        ap_done => fft_stage88_U0_ap_done,
        ap_continue => fft_stage88_U0_ap_continue,
        ap_idle => fft_stage88_U0_ap_idle,
        ap_ready => fft_stage88_U0_ap_ready,
        X_R_V_address0 => fft_stage88_U0_X_R_V_address0,
        X_R_V_ce0 => fft_stage88_U0_X_R_V_ce0,
        X_R_V_q0 => Stage8_R_V_t_q0,
        X_R_V_address1 => fft_stage88_U0_X_R_V_address1,
        X_R_V_ce1 => fft_stage88_U0_X_R_V_ce1,
        X_R_V_q1 => Stage8_R_V_t_q1,
        X_I_V_address0 => fft_stage88_U0_X_I_V_address0,
        X_I_V_ce0 => fft_stage88_U0_X_I_V_ce0,
        X_I_V_q0 => Stage8_I_V_t_q0,
        X_I_V_address1 => fft_stage88_U0_X_I_V_address1,
        X_I_V_ce1 => fft_stage88_U0_X_I_V_ce1,
        X_I_V_q1 => Stage8_I_V_t_q1,
        Out_R_V_address0 => fft_stage88_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage88_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage88_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage88_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage88_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage88_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage88_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage88_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage88_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage88_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage88_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage88_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage88_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage88_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage88_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage88_U0_Out_I_V_d1);

    fft_stage89_U0 : component fft_stage89
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage89_U0_ap_start,
        ap_done => fft_stage89_U0_ap_done,
        ap_continue => fft_stage89_U0_ap_continue,
        ap_idle => fft_stage89_U0_ap_idle,
        ap_ready => fft_stage89_U0_ap_ready,
        X_R_V_address0 => fft_stage89_U0_X_R_V_address0,
        X_R_V_ce0 => fft_stage89_U0_X_R_V_ce0,
        X_R_V_q0 => Stage9_R_V_t_q0,
        X_R_V_address1 => fft_stage89_U0_X_R_V_address1,
        X_R_V_ce1 => fft_stage89_U0_X_R_V_ce1,
        X_R_V_q1 => Stage9_R_V_t_q1,
        X_I_V_address0 => fft_stage89_U0_X_I_V_address0,
        X_I_V_ce0 => fft_stage89_U0_X_I_V_ce0,
        X_I_V_q0 => Stage9_I_V_t_q0,
        X_I_V_address1 => fft_stage89_U0_X_I_V_address1,
        X_I_V_ce1 => fft_stage89_U0_X_I_V_ce1,
        X_I_V_q1 => Stage9_I_V_t_q1,
        Out_R_V_address0 => fft_stage89_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage89_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage89_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage89_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage89_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage89_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage89_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage89_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage89_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage89_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage89_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage89_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage89_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage89_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage89_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage89_U0_Out_I_V_d1);

    fft_stage90_U0 : component fft_stage90
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => fft_stage90_U0_ap_start,
        ap_done => fft_stage90_U0_ap_done,
        ap_continue => fft_stage90_U0_ap_continue,
        ap_idle => fft_stage90_U0_ap_idle,
        ap_ready => fft_stage90_U0_ap_ready,
        X_R_V_address0 => fft_stage90_U0_X_R_V_address0,
        X_R_V_ce0 => fft_stage90_U0_X_R_V_ce0,
        X_R_V_q0 => Stage10_R_V_t_q0,
        X_R_V_address1 => fft_stage90_U0_X_R_V_address1,
        X_R_V_ce1 => fft_stage90_U0_X_R_V_ce1,
        X_R_V_q1 => Stage10_R_V_t_q1,
        X_I_V_address0 => fft_stage90_U0_X_I_V_address0,
        X_I_V_ce0 => fft_stage90_U0_X_I_V_ce0,
        X_I_V_q0 => Stage10_I_V_t_q0,
        X_I_V_address1 => fft_stage90_U0_X_I_V_address1,
        X_I_V_ce1 => fft_stage90_U0_X_I_V_ce1,
        X_I_V_q1 => Stage10_I_V_t_q1,
        Out_R_V_address0 => fft_stage90_U0_Out_R_V_address0,
        Out_R_V_ce0 => fft_stage90_U0_Out_R_V_ce0,
        Out_R_V_we0 => fft_stage90_U0_Out_R_V_we0,
        Out_R_V_d0 => fft_stage90_U0_Out_R_V_d0,
        Out_R_V_address1 => fft_stage90_U0_Out_R_V_address1,
        Out_R_V_ce1 => fft_stage90_U0_Out_R_V_ce1,
        Out_R_V_we1 => fft_stage90_U0_Out_R_V_we1,
        Out_R_V_d1 => fft_stage90_U0_Out_R_V_d1,
        Out_I_V_address0 => fft_stage90_U0_Out_I_V_address0,
        Out_I_V_ce0 => fft_stage90_U0_Out_I_V_ce0,
        Out_I_V_we0 => fft_stage90_U0_Out_I_V_we0,
        Out_I_V_d0 => fft_stage90_U0_Out_I_V_d0,
        Out_I_V_address1 => fft_stage90_U0_Out_I_V_address1,
        Out_I_V_ce1 => fft_stage90_U0_Out_I_V_ce1,
        Out_I_V_we1 => fft_stage90_U0_Out_I_V_we1,
        Out_I_V_d1 => fft_stage90_U0_Out_I_V_d1);





    ap_sync_reg_channel_write_Stage10_I_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage10_I_V <= ap_const_logic_0;
            else
                if (((fft_stage89_U0_ap_done and fft_stage89_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage10_I_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage10_I_V <= ap_sync_channel_write_Stage10_I_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage10_R_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage10_R_V <= ap_const_logic_0;
            else
                if (((fft_stage89_U0_ap_done and fft_stage89_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage10_R_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage10_R_V <= ap_sync_channel_write_Stage10_R_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage1_I_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage1_I_V <= ap_const_logic_0;
            else
                if (((bit_reverse_U0_ap_done and bit_reverse_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage1_I_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage1_I_V <= ap_sync_channel_write_Stage1_I_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage1_R_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage1_R_V <= ap_const_logic_0;
            else
                if (((bit_reverse_U0_ap_done and bit_reverse_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage1_R_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage1_R_V <= ap_sync_channel_write_Stage1_R_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage2_I_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage2_I_V <= ap_const_logic_0;
            else
                if (((fft_stage81_U0_ap_done and fft_stage81_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage2_I_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage2_I_V <= ap_sync_channel_write_Stage2_I_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage2_R_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage2_R_V <= ap_const_logic_0;
            else
                if (((fft_stage81_U0_ap_done and fft_stage81_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage2_R_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage2_R_V <= ap_sync_channel_write_Stage2_R_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage3_I_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage3_I_V <= ap_const_logic_0;
            else
                if (((fft_stage82_U0_ap_done and fft_stage82_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage3_I_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage3_I_V <= ap_sync_channel_write_Stage3_I_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage3_R_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage3_R_V <= ap_const_logic_0;
            else
                if (((fft_stage82_U0_ap_done and fft_stage82_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage3_R_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage3_R_V <= ap_sync_channel_write_Stage3_R_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage4_I_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage4_I_V <= ap_const_logic_0;
            else
                if (((fft_stage83_U0_ap_done and fft_stage83_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage4_I_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage4_I_V <= ap_sync_channel_write_Stage4_I_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage4_R_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage4_R_V <= ap_const_logic_0;
            else
                if (((fft_stage83_U0_ap_done and fft_stage83_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage4_R_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage4_R_V <= ap_sync_channel_write_Stage4_R_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage5_I_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage5_I_V <= ap_const_logic_0;
            else
                if (((fft_stage84_U0_ap_done and fft_stage84_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage5_I_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage5_I_V <= ap_sync_channel_write_Stage5_I_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage5_R_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage5_R_V <= ap_const_logic_0;
            else
                if (((fft_stage84_U0_ap_done and fft_stage84_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage5_R_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage5_R_V <= ap_sync_channel_write_Stage5_R_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage6_I_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage6_I_V <= ap_const_logic_0;
            else
                if (((fft_stage85_U0_ap_done and fft_stage85_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage6_I_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage6_I_V <= ap_sync_channel_write_Stage6_I_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage6_R_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage6_R_V <= ap_const_logic_0;
            else
                if (((fft_stage85_U0_ap_done and fft_stage85_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage6_R_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage6_R_V <= ap_sync_channel_write_Stage6_R_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage7_I_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage7_I_V <= ap_const_logic_0;
            else
                if (((fft_stage86_U0_ap_done and fft_stage86_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage7_I_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage7_I_V <= ap_sync_channel_write_Stage7_I_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage7_R_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage7_R_V <= ap_const_logic_0;
            else
                if (((fft_stage86_U0_ap_done and fft_stage86_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage7_R_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage7_R_V <= ap_sync_channel_write_Stage7_R_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage8_I_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage8_I_V <= ap_const_logic_0;
            else
                if (((fft_stage87_U0_ap_done and fft_stage87_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage8_I_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage8_I_V <= ap_sync_channel_write_Stage8_I_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage8_R_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage8_R_V <= ap_const_logic_0;
            else
                if (((fft_stage87_U0_ap_done and fft_stage87_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage8_R_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage8_R_V <= ap_sync_channel_write_Stage8_R_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage9_I_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage9_I_V <= ap_const_logic_0;
            else
                if (((fft_stage88_U0_ap_done and fft_stage88_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage9_I_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage9_I_V <= ap_sync_channel_write_Stage9_I_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage9_R_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage9_R_V <= ap_const_logic_0;
            else
                if (((fft_stage88_U0_ap_done and fft_stage88_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_Stage9_R_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage9_R_V <= ap_sync_channel_write_Stage9_R_V;
                end if; 
            end if;
        end if;
    end process;

    OUT_I_V_address0 <= fft_stage90_U0_Out_I_V_address0;
    OUT_I_V_address1 <= fft_stage90_U0_Out_I_V_address1;
    OUT_I_V_ce0 <= fft_stage90_U0_Out_I_V_ce0;
    OUT_I_V_ce1 <= fft_stage90_U0_Out_I_V_ce1;
    OUT_I_V_d0 <= fft_stage90_U0_Out_I_V_d0;
    OUT_I_V_d1 <= fft_stage90_U0_Out_I_V_d1;
    OUT_I_V_we0 <= fft_stage90_U0_Out_I_V_we0;
    OUT_I_V_we1 <= fft_stage90_U0_Out_I_V_we1;
    OUT_R_V_address0 <= fft_stage90_U0_Out_R_V_address0;
    OUT_R_V_address1 <= fft_stage90_U0_Out_R_V_address1;
    OUT_R_V_ce0 <= fft_stage90_U0_Out_R_V_ce0;
    OUT_R_V_ce1 <= fft_stage90_U0_Out_R_V_ce1;
    OUT_R_V_d0 <= fft_stage90_U0_Out_R_V_d0;
    OUT_R_V_d1 <= fft_stage90_U0_Out_R_V_d1;
    OUT_R_V_we0 <= fft_stage90_U0_Out_R_V_we0;
    OUT_R_V_we1 <= fft_stage90_U0_Out_R_V_we1;
    Stage1_I_V_t_d1 <= ap_const_lv22_0;
    Stage1_I_V_t_we1 <= ap_const_logic_0;
    Stage1_R_V_t_d1 <= ap_const_lv22_0;
    Stage1_R_V_t_we1 <= ap_const_logic_0;
    X_I_V_address0 <= bit_reverse_U0_X_I_V_address0;
    X_I_V_address1 <= ap_const_lv10_0;
    X_I_V_ce0 <= bit_reverse_U0_X_I_V_ce0;
    X_I_V_ce1 <= ap_const_logic_0;
    X_I_V_d0 <= ap_const_lv22_0;
    X_I_V_d1 <= ap_const_lv22_0;
    X_I_V_we0 <= ap_const_logic_0;
    X_I_V_we1 <= ap_const_logic_0;
    X_R_V_address0 <= bit_reverse_U0_X_R_V_address0;
    X_R_V_address1 <= ap_const_lv10_0;
    X_R_V_ce0 <= bit_reverse_U0_X_R_V_ce0;
    X_R_V_ce1 <= ap_const_logic_0;
    X_R_V_d0 <= ap_const_lv22_0;
    X_R_V_d1 <= ap_const_lv22_0;
    X_R_V_we0 <= ap_const_logic_0;
    X_R_V_we1 <= ap_const_logic_0;
    ap_channel_done_Stage10_I_V <= (fft_stage89_U0_ap_done and (ap_sync_reg_channel_write_Stage10_I_V xor ap_const_logic_1));
    ap_channel_done_Stage10_R_V <= (fft_stage89_U0_ap_done and (ap_sync_reg_channel_write_Stage10_R_V xor ap_const_logic_1));
    ap_channel_done_Stage1_I_V <= ((ap_sync_reg_channel_write_Stage1_I_V xor ap_const_logic_1) and bit_reverse_U0_ap_done);
    ap_channel_done_Stage1_R_V <= ((ap_sync_reg_channel_write_Stage1_R_V xor ap_const_logic_1) and bit_reverse_U0_ap_done);
    ap_channel_done_Stage2_I_V <= (fft_stage81_U0_ap_done and (ap_sync_reg_channel_write_Stage2_I_V xor ap_const_logic_1));
    ap_channel_done_Stage2_R_V <= (fft_stage81_U0_ap_done and (ap_sync_reg_channel_write_Stage2_R_V xor ap_const_logic_1));
    ap_channel_done_Stage3_I_V <= (fft_stage82_U0_ap_done and (ap_sync_reg_channel_write_Stage3_I_V xor ap_const_logic_1));
    ap_channel_done_Stage3_R_V <= (fft_stage82_U0_ap_done and (ap_sync_reg_channel_write_Stage3_R_V xor ap_const_logic_1));
    ap_channel_done_Stage4_I_V <= (fft_stage83_U0_ap_done and (ap_sync_reg_channel_write_Stage4_I_V xor ap_const_logic_1));
    ap_channel_done_Stage4_R_V <= (fft_stage83_U0_ap_done and (ap_sync_reg_channel_write_Stage4_R_V xor ap_const_logic_1));
    ap_channel_done_Stage5_I_V <= (fft_stage84_U0_ap_done and (ap_sync_reg_channel_write_Stage5_I_V xor ap_const_logic_1));
    ap_channel_done_Stage5_R_V <= (fft_stage84_U0_ap_done and (ap_sync_reg_channel_write_Stage5_R_V xor ap_const_logic_1));
    ap_channel_done_Stage6_I_V <= (fft_stage85_U0_ap_done and (ap_sync_reg_channel_write_Stage6_I_V xor ap_const_logic_1));
    ap_channel_done_Stage6_R_V <= (fft_stage85_U0_ap_done and (ap_sync_reg_channel_write_Stage6_R_V xor ap_const_logic_1));
    ap_channel_done_Stage7_I_V <= (fft_stage86_U0_ap_done and (ap_sync_reg_channel_write_Stage7_I_V xor ap_const_logic_1));
    ap_channel_done_Stage7_R_V <= (fft_stage86_U0_ap_done and (ap_sync_reg_channel_write_Stage7_R_V xor ap_const_logic_1));
    ap_channel_done_Stage8_I_V <= (fft_stage87_U0_ap_done and (ap_sync_reg_channel_write_Stage8_I_V xor ap_const_logic_1));
    ap_channel_done_Stage8_R_V <= (fft_stage87_U0_ap_done and (ap_sync_reg_channel_write_Stage8_R_V xor ap_const_logic_1));
    ap_channel_done_Stage9_I_V <= (fft_stage88_U0_ap_done and (ap_sync_reg_channel_write_Stage9_I_V xor ap_const_logic_1));
    ap_channel_done_Stage9_R_V <= (fft_stage88_U0_ap_done and (ap_sync_reg_channel_write_Stage9_R_V xor ap_const_logic_1));
    ap_done <= fft_stage90_U0_ap_done;
    ap_idle <= (fft_stage90_U0_ap_idle and fft_stage89_U0_ap_idle and fft_stage88_U0_ap_idle and fft_stage87_U0_ap_idle and fft_stage86_U0_ap_idle and fft_stage85_U0_ap_idle and fft_stage84_U0_ap_idle and fft_stage83_U0_ap_idle and fft_stage82_U0_ap_idle and fft_stage81_U0_ap_idle and (ap_const_logic_1 xor Stage10_I_V_t_empty_n) and (ap_const_logic_1 xor Stage10_R_V_t_empty_n) and (ap_const_logic_1 xor Stage9_I_V_t_empty_n) and (ap_const_logic_1 xor Stage9_R_V_t_empty_n) and (ap_const_logic_1 xor Stage8_I_V_t_empty_n) and (ap_const_logic_1 xor Stage8_R_V_t_empty_n) and (ap_const_logic_1 xor Stage7_I_V_t_empty_n) and (ap_const_logic_1 xor Stage7_R_V_t_empty_n) and (ap_const_logic_1 xor Stage6_I_V_t_empty_n) and (ap_const_logic_1 xor Stage6_R_V_t_empty_n) and (ap_const_logic_1 xor Stage5_I_V_t_empty_n) and (ap_const_logic_1 xor Stage5_R_V_t_empty_n) and (ap_const_logic_1 xor Stage4_I_V_t_empty_n) and (ap_const_logic_1 xor Stage4_R_V_t_empty_n) and (ap_const_logic_1 xor Stage3_I_V_t_empty_n) and (ap_const_logic_1 xor Stage3_R_V_t_empty_n) and (ap_const_logic_1 xor Stage2_I_V_t_empty_n) and (ap_const_logic_1 xor Stage2_R_V_t_empty_n) and (ap_const_logic_1 xor Stage1_I_V_t_empty_n) and (ap_const_logic_1 xor Stage1_R_V_t_empty_n) and bit_reverse_U0_ap_idle);
    ap_ready <= bit_reverse_U0_ap_ready;
    ap_sync_channel_write_Stage10_I_V <= ((fft_stage89_U0_Out_I_V_full_n and ap_channel_done_Stage10_I_V) or ap_sync_reg_channel_write_Stage10_I_V);
    ap_sync_channel_write_Stage10_R_V <= ((fft_stage89_U0_Out_R_V_full_n and ap_channel_done_Stage10_R_V) or ap_sync_reg_channel_write_Stage10_R_V);
    ap_sync_channel_write_Stage1_I_V <= ((bit_reverse_U0_OUT_I_V_full_n and ap_channel_done_Stage1_I_V) or ap_sync_reg_channel_write_Stage1_I_V);
    ap_sync_channel_write_Stage1_R_V <= ((bit_reverse_U0_OUT_R_V_full_n and ap_channel_done_Stage1_R_V) or ap_sync_reg_channel_write_Stage1_R_V);
    ap_sync_channel_write_Stage2_I_V <= ((fft_stage81_U0_Out_I_V_full_n and ap_channel_done_Stage2_I_V) or ap_sync_reg_channel_write_Stage2_I_V);
    ap_sync_channel_write_Stage2_R_V <= ((fft_stage81_U0_Out_R_V_full_n and ap_channel_done_Stage2_R_V) or ap_sync_reg_channel_write_Stage2_R_V);
    ap_sync_channel_write_Stage3_I_V <= ((fft_stage82_U0_Out_I_V_full_n and ap_channel_done_Stage3_I_V) or ap_sync_reg_channel_write_Stage3_I_V);
    ap_sync_channel_write_Stage3_R_V <= ((fft_stage82_U0_Out_R_V_full_n and ap_channel_done_Stage3_R_V) or ap_sync_reg_channel_write_Stage3_R_V);
    ap_sync_channel_write_Stage4_I_V <= ((fft_stage83_U0_Out_I_V_full_n and ap_channel_done_Stage4_I_V) or ap_sync_reg_channel_write_Stage4_I_V);
    ap_sync_channel_write_Stage4_R_V <= ((fft_stage83_U0_Out_R_V_full_n and ap_channel_done_Stage4_R_V) or ap_sync_reg_channel_write_Stage4_R_V);
    ap_sync_channel_write_Stage5_I_V <= ((fft_stage84_U0_Out_I_V_full_n and ap_channel_done_Stage5_I_V) or ap_sync_reg_channel_write_Stage5_I_V);
    ap_sync_channel_write_Stage5_R_V <= ((fft_stage84_U0_Out_R_V_full_n and ap_channel_done_Stage5_R_V) or ap_sync_reg_channel_write_Stage5_R_V);
    ap_sync_channel_write_Stage6_I_V <= ((fft_stage85_U0_Out_I_V_full_n and ap_channel_done_Stage6_I_V) or ap_sync_reg_channel_write_Stage6_I_V);
    ap_sync_channel_write_Stage6_R_V <= ((fft_stage85_U0_Out_R_V_full_n and ap_channel_done_Stage6_R_V) or ap_sync_reg_channel_write_Stage6_R_V);
    ap_sync_channel_write_Stage7_I_V <= ((fft_stage86_U0_Out_I_V_full_n and ap_channel_done_Stage7_I_V) or ap_sync_reg_channel_write_Stage7_I_V);
    ap_sync_channel_write_Stage7_R_V <= ((fft_stage86_U0_Out_R_V_full_n and ap_channel_done_Stage7_R_V) or ap_sync_reg_channel_write_Stage7_R_V);
    ap_sync_channel_write_Stage8_I_V <= ((fft_stage87_U0_Out_I_V_full_n and ap_channel_done_Stage8_I_V) or ap_sync_reg_channel_write_Stage8_I_V);
    ap_sync_channel_write_Stage8_R_V <= ((fft_stage87_U0_Out_R_V_full_n and ap_channel_done_Stage8_R_V) or ap_sync_reg_channel_write_Stage8_R_V);
    ap_sync_channel_write_Stage9_I_V <= ((fft_stage88_U0_Out_I_V_full_n and ap_channel_done_Stage9_I_V) or ap_sync_reg_channel_write_Stage9_I_V);
    ap_sync_channel_write_Stage9_R_V <= ((fft_stage88_U0_Out_R_V_full_n and ap_channel_done_Stage9_R_V) or ap_sync_reg_channel_write_Stage9_R_V);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= fft_stage90_U0_ap_done;
    ap_sync_ready <= bit_reverse_U0_ap_ready;
    bit_reverse_U0_OUT_I_V_full_n <= Stage1_I_V_i_full_n;
    bit_reverse_U0_OUT_R_V_full_n <= Stage1_R_V_i_full_n;
    bit_reverse_U0_ap_continue <= (ap_sync_channel_write_Stage1_R_V and ap_sync_channel_write_Stage1_I_V);
    bit_reverse_U0_ap_start <= ap_start;
    bit_reverse_U0_start_full_n <= ap_const_logic_1;
    bit_reverse_U0_start_write <= ap_const_logic_0;
    fft_stage81_U0_Out_I_V_full_n <= Stage2_I_V_i_full_n;
    fft_stage81_U0_Out_R_V_full_n <= Stage2_R_V_i_full_n;
    fft_stage81_U0_ap_continue <= (ap_sync_channel_write_Stage2_R_V and ap_sync_channel_write_Stage2_I_V);
    fft_stage81_U0_ap_start <= (Stage1_R_V_t_empty_n and Stage1_I_V_t_empty_n);
    fft_stage81_U0_start_full_n <= ap_const_logic_1;
    fft_stage81_U0_start_write <= ap_const_logic_0;
    fft_stage82_U0_Out_I_V_full_n <= Stage3_I_V_i_full_n;
    fft_stage82_U0_Out_R_V_full_n <= Stage3_R_V_i_full_n;
    fft_stage82_U0_ap_continue <= (ap_sync_channel_write_Stage3_R_V and ap_sync_channel_write_Stage3_I_V);
    fft_stage82_U0_ap_start <= (Stage2_R_V_t_empty_n and Stage2_I_V_t_empty_n);
    fft_stage82_U0_start_full_n <= ap_const_logic_1;
    fft_stage82_U0_start_write <= ap_const_logic_0;
    fft_stage83_U0_Out_I_V_full_n <= Stage4_I_V_i_full_n;
    fft_stage83_U0_Out_R_V_full_n <= Stage4_R_V_i_full_n;
    fft_stage83_U0_ap_continue <= (ap_sync_channel_write_Stage4_R_V and ap_sync_channel_write_Stage4_I_V);
    fft_stage83_U0_ap_start <= (Stage3_R_V_t_empty_n and Stage3_I_V_t_empty_n);
    fft_stage83_U0_start_full_n <= ap_const_logic_1;
    fft_stage83_U0_start_write <= ap_const_logic_0;
    fft_stage84_U0_Out_I_V_full_n <= Stage5_I_V_i_full_n;
    fft_stage84_U0_Out_R_V_full_n <= Stage5_R_V_i_full_n;
    fft_stage84_U0_ap_continue <= (ap_sync_channel_write_Stage5_R_V and ap_sync_channel_write_Stage5_I_V);
    fft_stage84_U0_ap_start <= (Stage4_R_V_t_empty_n and Stage4_I_V_t_empty_n);
    fft_stage84_U0_start_full_n <= ap_const_logic_1;
    fft_stage84_U0_start_write <= ap_const_logic_0;
    fft_stage85_U0_Out_I_V_full_n <= Stage6_I_V_i_full_n;
    fft_stage85_U0_Out_R_V_full_n <= Stage6_R_V_i_full_n;
    fft_stage85_U0_ap_continue <= (ap_sync_channel_write_Stage6_R_V and ap_sync_channel_write_Stage6_I_V);
    fft_stage85_U0_ap_start <= (Stage5_R_V_t_empty_n and Stage5_I_V_t_empty_n);
    fft_stage85_U0_start_full_n <= ap_const_logic_1;
    fft_stage85_U0_start_write <= ap_const_logic_0;
    fft_stage86_U0_Out_I_V_full_n <= Stage7_I_V_i_full_n;
    fft_stage86_U0_Out_R_V_full_n <= Stage7_R_V_i_full_n;
    fft_stage86_U0_ap_continue <= (ap_sync_channel_write_Stage7_R_V and ap_sync_channel_write_Stage7_I_V);
    fft_stage86_U0_ap_start <= (Stage6_R_V_t_empty_n and Stage6_I_V_t_empty_n);
    fft_stage86_U0_start_full_n <= ap_const_logic_1;
    fft_stage86_U0_start_write <= ap_const_logic_0;
    fft_stage87_U0_Out_I_V_full_n <= Stage8_I_V_i_full_n;
    fft_stage87_U0_Out_R_V_full_n <= Stage8_R_V_i_full_n;
    fft_stage87_U0_ap_continue <= (ap_sync_channel_write_Stage8_R_V and ap_sync_channel_write_Stage8_I_V);
    fft_stage87_U0_ap_start <= (Stage7_R_V_t_empty_n and Stage7_I_V_t_empty_n);
    fft_stage87_U0_start_full_n <= ap_const_logic_1;
    fft_stage87_U0_start_write <= ap_const_logic_0;
    fft_stage88_U0_Out_I_V_full_n <= Stage9_I_V_i_full_n;
    fft_stage88_U0_Out_R_V_full_n <= Stage9_R_V_i_full_n;
    fft_stage88_U0_ap_continue <= (ap_sync_channel_write_Stage9_R_V and ap_sync_channel_write_Stage9_I_V);
    fft_stage88_U0_ap_start <= (Stage8_R_V_t_empty_n and Stage8_I_V_t_empty_n);
    fft_stage88_U0_start_full_n <= ap_const_logic_1;
    fft_stage88_U0_start_write <= ap_const_logic_0;
    fft_stage89_U0_Out_I_V_full_n <= Stage10_I_V_i_full_n;
    fft_stage89_U0_Out_R_V_full_n <= Stage10_R_V_i_full_n;
    fft_stage89_U0_ap_continue <= (ap_sync_channel_write_Stage10_R_V and ap_sync_channel_write_Stage10_I_V);
    fft_stage89_U0_ap_start <= (Stage9_R_V_t_empty_n and Stage9_I_V_t_empty_n);
    fft_stage89_U0_start_full_n <= ap_const_logic_1;
    fft_stage89_U0_start_write <= ap_const_logic_0;
    fft_stage90_U0_ap_continue <= ap_const_logic_1;
    fft_stage90_U0_ap_start <= (Stage10_R_V_t_empty_n and Stage10_I_V_t_empty_n);
    fft_stage90_U0_start_full_n <= ap_const_logic_1;
    fft_stage90_U0_start_write <= ap_const_logic_0;
end behav;
